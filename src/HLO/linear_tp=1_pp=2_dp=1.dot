digraph HloModule {
	"p7.26" [label="p7.26 \n f32[4,4]"];
	"p14.204" [label="p14.204 \n f32[] parameter(14), frontend_attributes="];
	"broadcast.205" [label="broadcast.205 \n f32[4,4]"];
	"multiply.206" [label="multiply.206 \n f32[4,4]"];
	"p13.203" [label="p13.203 \n f32[] parameter(13), frontend_attributes="];
	"broadcast.207" [label="broadcast.207 \n f32[4,4]"];
	"multiply.209" [label="multiply.209 \n f32[4,4]"];
	"subtract.210" [label="subtract.210 \n f32[4,4]"];
	"p12.189" [label="p12.189 \n f32[] parameter(12), frontend_attributes="];
	"multiply.0" [label="multiply.0 \n f32[] multiply(f32[] %constant.1, f32[] %p12.189), metadata="];
	"broadcast.2" [label="broadcast.2 \n f32[4,4]"];
	"constant.46" [label="constant.46 \n f32[] constant(0), metadata="];
	"broadcast.50" [label="broadcast.50 \n f32[1,4]"];
	"p8.35" [label="p8.35 \n f32[1,4]"];
	"reshape.7" [label="reshape.7 \n f32[4]"];
	"broadcast.29" [label="broadcast.29 \n f32[4,4]"];
	"multiply.12" [label="multiply.12 \n f32[4,4]"];
	"p6.18" [label="p6.18 \n f32[4]"];
	"add.1" [label="add.1 \n f32[4]"];
	"reshape.73" [label="reshape.73 \n f32[1,4]"];
	"p5.17" [label="p5.17 \n f32[] parameter(5), frontend_attributes="];
	"slice.58" [label="slice.58 \n f32[1,4]"];
	"reshape.80" [label="reshape.80 \n f32[4]"];
	"reshape.17" [label="reshape.17 \n f32[4]"];
	"broadcast.24" [label="broadcast.24 \n f32[4,4]"];
	"reshape.16" [label="reshape.16 \n f32[4]"];
	"broadcast.25" [label="broadcast.25 \n f32[4,4]"];
	"multiply.10" [label="multiply.10 \n f32[4,4]"];
	"constant.3" [label="constant.3 \n f32[1]"];
	"p9.129" [label="p9.129 \n f32[1]"];
	"multiply.118" [label="multiply.118 \n f32[4,4]"];
	"constant.119" [label="constant.119 \n f32[] constant(0), metadata="];
	"reduce.125" [label="reduce.125 \n f32[] reduce(f32[4,4]"];
	"sqrt.126" [label="sqrt.126 \n f32[] sqrt(f32[] %reduce.125), metadata="];
	"multiply.128" [label="multiply.128 \n f32[] multiply(f32[] %sqrt.126, f32[] %sqrt.126), metadata="];
	"reshape.19" [label="reshape.19 \n f32[1]"];
	"add.131" [label="add.131 \n f32[1]"];
	"multiply.105" [label="multiply.105 \n f32[4]"];
	"constant.106" [label="constant.106 \n f32[] constant(0), metadata="];
	"reduce.112" [label="reduce.112 \n f32[] reduce(f32[4]"];
	"sqrt.113" [label="sqrt.113 \n f32[] sqrt(f32[] %reduce.112), metadata="];
	"multiply.115" [label="multiply.115 \n f32[] multiply(f32[] %sqrt.113, f32[] %sqrt.113), metadata="];
	"reshape.20" [label="reshape.20 \n f32[1]"];
	"add.133" [label="add.133 \n f32[1]"];
	"constant.5" [label="constant.5 \n f32[1]"];
	"power.146" [label="power.146 \n f32[1]"];
	"p4.12" [label="p4.12 \n f32[] parameter(4), frontend_attributes="];
	"reshape.23" [label="reshape.23 \n f32[1]"];
	"add.148" [label="add.148 \n f32[1]"];
	"divide.151" [label="divide.151 \n f32[1]"];
	"constant.9" [label="constant.9 \n f32[1]"];
	"compare.158" [label="compare.158 \n pred[1]"];
	"constant.12" [label="constant.12 \n f32[1]"];
	"select.160" [label="select.160 \n f32[1]"];
	"reshape.162" [label="reshape.162 \n f32[] reshape(f32[1]"];
	"broadcast.164" [label="broadcast.164 \n f32[4,4]"];
	"multiply.165" [label="multiply.165 \n f32[4,4]"];
	"p11.183" [label="p11.183 \n f32[] parameter(11), frontend_attributes="];
	"broadcast.187" [label="broadcast.187 \n f32[4,4]"];
	"multiply.188" [label="multiply.188 \n f32[4,4]"];
	"add.197" [label="add.197 \n f32[4,4]"];
	"p10.166" [label="p10.166 \n f32[] parameter(10), frontend_attributes="];
	"multiply.3" [label="multiply.3 \n f32[] multiply(f32[] %constant.13, f32[] %p10.166), metadata="];
	"broadcast.7" [label="broadcast.7 \n f32[4,4]"];
	"multiply.174" [label="multiply.174 \n f32[4,4]"];
	"p3.6" [label="p3.6 \n f32[] parameter(3), frontend_attributes="];
	"broadcast.175" [label="broadcast.175 \n f32[4,4]"];
	"multiply.176" [label="multiply.176 \n f32[4,4]"];
	"add.177" [label="add.177 \n f32[4,4]"];
	"sqrt.178" [label="sqrt.178 \n f32[4,4]"];
	"p2.5" [label="p2.5 \n f32[] parameter(2), frontend_attributes="];
	"broadcast.179" [label="broadcast.179 \n f32[4,4]"];
	"divide.180" [label="divide.180 \n f32[4,4]"];
	"p1.3" [label="p1.3 \n f32[] parameter(1), frontend_attributes="];
	"broadcast.181" [label="broadcast.181 \n f32[4,4]"];
	"add.182" [label="add.182 \n f32[4,4]"];
	"divide.211" [label="divide.211 \n f32[4,4]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"broadcast.212" [label="broadcast.212 \n f32[4,4]"];
	"multiply.213" [label="multiply.213 \n f32[4,4]"];
	"add.214" [label="add.214 \n f32[4,4]"];
	"broadcast.266" [label="broadcast.266 \n f32[4]"];
	"multiply.267" [label="multiply.267 \n f32[4]"];
	"broadcast.8" [label="broadcast.8 \n f32[4]"];
	"multiply.270" [label="multiply.270 \n f32[4]"];
	"subtract.271" [label="subtract.271 \n f32[4]"];
	"multiply.7" [label="multiply.7 \n f32[] multiply(f32[] %constant.17, f32[] %p12.189), metadata="];
	"broadcast.12" [label="broadcast.12 \n f32[4]"];
	"constant.19" [label="constant.19 \n f32[1]"];
	"compare.224" [label="compare.224 \n pred[1]"];
	"constant.20" [label="constant.20 \n f32[1]"];
	"select.226" [label="select.226 \n f32[1]"];
	"reshape.228" [label="reshape.228 \n f32[] reshape(f32[1]"];
	"broadcast.229" [label="broadcast.229 \n f32[4]"];
	"multiply.230" [label="multiply.230 \n f32[4]"];
	"broadcast.250" [label="broadcast.250 \n f32[4]"];
	"multiply.251" [label="multiply.251 \n f32[4]"];
	"add.259" [label="add.259 \n f32[4]"];
	"multiply.8" [label="multiply.8 \n f32[] multiply(f32[] %constant.21, f32[] %p10.166), metadata="];
	"broadcast.15" [label="broadcast.15 \n f32[4]"];
	"multiply.238" [label="multiply.238 \n f32[4]"];
	"broadcast.239" [label="broadcast.239 \n f32[4]"];
	"multiply.240" [label="multiply.240 \n f32[4]"];
	"add.241" [label="add.241 \n f32[4]"];
	"sqrt.242" [label="sqrt.242 \n f32[4]"];
	"broadcast.243" [label="broadcast.243 \n f32[4]"];
	"divide.244" [label="divide.244 \n f32[4]"];
	"broadcast.245" [label="broadcast.245 \n f32[4]"];
	"add.246" [label="add.246 \n f32[4]"];
	"divide.272" [label="divide.272 \n f32[4]"];
	"broadcast.273" [label="broadcast.273 \n f32[4]"];
	"multiply.274" [label="multiply.274 \n f32[4]"];
	"add.275" [label="add.275 \n f32[4]"];
	"tuple.276" [label="tuple.276 \n (f32[4,4]"]; 
 	"p14.204" -> "broadcast.205";
	"p7.26" -> "multiply.206";
	"broadcast.205" -> "multiply.206";
	"p13.203" -> "broadcast.207";
	"multiply.206" -> "multiply.209";
	"broadcast.207" -> "multiply.209";
	"p7.26" -> "subtract.210";
	"multiply.209" -> "subtract.210";
	"constant.1" -> "multiply.0";
	"p12.189" -> "multiply.0";
	"multiply.0" -> "broadcast.2";
	"constant.46" -> "broadcast.50";
	"p8.35" -> "reshape.7";
	"reshape.7" -> "broadcast.29";
	"p7.26" -> "custom-call.4";
	"broadcast.29" -> "multiply.12";
	"custom-call.4" -> "multiply.12";
	"multiply.12" -> "reduce";
	"constant" -> "reduce";
	"scalar_add_computation" -> "reduce";
	"p6.18" -> "custom-call.5";
	"reduce" -> "add.1";
	"custom-call.5" -> "add.1";
	"add.1" -> "reshape.73";
	"reshape.73" -> "all-gather.43";
	"p5.17" -> "all-gather.43";
	"all-gather.43" -> "get-tuple-element.53";
	"broadcast.50" -> "all-gather.54";
	"get-tuple-element.53" -> "all-gather.54";
	"all-gather.54" -> "get-tuple-element.55";
	"get-tuple-element.55" -> "slice.58";
	"slice.58" -> "reshape.80";
	"reshape.80" -> "custom-call.6";
	"slice.58" -> "reshape.17";
	"reshape.17" -> "broadcast.24";
	"p8.35" -> "reshape.16";
	"reshape.16" -> "broadcast.25";
	"broadcast.24" -> "multiply.10";
	"broadcast.25" -> "multiply.10";
	"multiply.10" -> "custom-call.7";
	"all-gather.54" -> "get-tuple-element.93";
	"custom-call.6" -> "all-reduce.98";
	"custom-call.7" -> "all-reduce.98";
	"get-tuple-element.93" -> "all-reduce.98";
	"AddComputation.94" -> "all-reduce.98";
	"all-reduce.98" -> "get-tuple-element.100";
	"get-tuple-element.100" -> "multiply.118";
	"get-tuple-element.100" -> "multiply.118";
	"multiply.118" -> "reduce.125";
	"constant.119" -> "reduce.125";
	"AddComputation.121" -> "reduce.125";
	"reduce.125" -> "sqrt.126";
	"sqrt.126" -> "multiply.128";
	"sqrt.126" -> "multiply.128";
	"multiply.128" -> "reshape.19";
	"p9.129" -> "add.131";
	"reshape.19" -> "add.131";
	"all-reduce.98" -> "get-tuple-element.99";
	"get-tuple-element.99" -> "multiply.105";
	"get-tuple-element.99" -> "multiply.105";
	"multiply.105" -> "reduce.112";
	"constant.106" -> "reduce.112";
	"AddComputation.108" -> "reduce.112";
	"reduce.112" -> "sqrt.113";
	"sqrt.113" -> "multiply.115";
	"sqrt.113" -> "multiply.115";
	"multiply.115" -> "reshape.20";
	"add.131" -> "add.133";
	"reshape.20" -> "add.133";
	"all-reduce.98" -> "get-tuple-element.138";
	"add.133" -> "all-reduce.143";
	"get-tuple-element.138" -> "all-reduce.143";
	"AddComputation.139" -> "all-reduce.143";
	"all-reduce.143" -> "get-tuple-element.144";
	"get-tuple-element.144" -> "power.146";
	"constant.5" -> "power.146";
	"p4.12" -> "reshape.23";
	"power.146" -> "add.148";
	"reshape.23" -> "add.148";
	"constant.3" -> "divide.151";
	"add.148" -> "divide.151";
	"divide.151" -> "compare.158";
	"constant.9" -> "compare.158";
	"compare.158" -> "select.160";
	"divide.151" -> "select.160";
	"constant.12" -> "select.160";
	"select.160" -> "reshape.162";
	"reshape.162" -> "broadcast.164";
	"get-tuple-element.100" -> "multiply.165";
	"broadcast.164" -> "multiply.165";
	"p11.183" -> "broadcast.187";
	"multiply.165" -> "multiply.188";
	"broadcast.187" -> "multiply.188";
	"broadcast.2" -> "add.197";
	"multiply.188" -> "add.197";
	"constant.13" -> "multiply.3";
	"p10.166" -> "multiply.3";
	"multiply.3" -> "broadcast.7";
	"multiply.165" -> "multiply.174";
	"multiply.165" -> "multiply.174";
	"p3.6" -> "broadcast.175";
	"multiply.174" -> "multiply.176";
	"broadcast.175" -> "multiply.176";
	"broadcast.7" -> "add.177";
	"multiply.176" -> "add.177";
	"add.177" -> "sqrt.178";
	"p2.5" -> "broadcast.179";
	"sqrt.178" -> "divide.180";
	"broadcast.179" -> "divide.180";
	"p1.3" -> "broadcast.181";
	"divide.180" -> "add.182";
	"broadcast.181" -> "add.182";
	"add.197" -> "divide.211";
	"add.182" -> "divide.211";
	"p0.1" -> "broadcast.212";
	"divide.211" -> "multiply.213";
	"broadcast.212" -> "multiply.213";
	"subtract.210" -> "add.214";
	"multiply.213" -> "add.214";
	"p14.204" -> "broadcast.266";
	"p6.18" -> "multiply.267";
	"broadcast.266" -> "multiply.267";
	"constant.16" -> "broadcast.8";
	"multiply.267" -> "multiply.270";
	"broadcast.8" -> "multiply.270";
	"p6.18" -> "subtract.271";
	"multiply.270" -> "subtract.271";
	"constant.17" -> "multiply.7";
	"p12.189" -> "multiply.7";
	"multiply.7" -> "broadcast.12";
	"divide.151" -> "compare.224";
	"constant.19" -> "compare.224";
	"compare.224" -> "select.226";
	"divide.151" -> "select.226";
	"constant.20" -> "select.226";
	"select.226" -> "reshape.228";
	"reshape.228" -> "broadcast.229";
	"get-tuple-element.99" -> "multiply.230";
	"broadcast.229" -> "multiply.230";
	"p11.183" -> "broadcast.250";
	"multiply.230" -> "multiply.251";
	"broadcast.250" -> "multiply.251";
	"broadcast.12" -> "add.259";
	"multiply.251" -> "add.259";
	"constant.21" -> "multiply.8";
	"p10.166" -> "multiply.8";
	"multiply.8" -> "broadcast.15";
	"multiply.230" -> "multiply.238";
	"multiply.230" -> "multiply.238";
	"p3.6" -> "broadcast.239";
	"multiply.238" -> "multiply.240";
	"broadcast.239" -> "multiply.240";
	"broadcast.15" -> "add.241";
	"multiply.240" -> "add.241";
	"add.241" -> "sqrt.242";
	"p2.5" -> "broadcast.243";
	"sqrt.242" -> "divide.244";
	"broadcast.243" -> "divide.244";
	"p1.3" -> "broadcast.245";
	"divide.244" -> "add.246";
	"broadcast.245" -> "add.246";
	"add.259" -> "divide.272";
	"add.246" -> "divide.272";
	"p0.1" -> "broadcast.273";
	"divide.272" -> "multiply.274";
	"broadcast.273" -> "multiply.274";
	"subtract.271" -> "add.275";
	"multiply.274" -> "add.275";
	"add.214" -> "tuple.276";
	"add.275" -> "tuple.276";
	"multiply.230" -> "tuple.276";
	"multiply.165" -> "tuple.276";
	"power.146" -> "tuple.276";
	"add.197" -> "tuple.276";
	"add.177" -> "tuple.276";
	"add.259" -> "tuple.276";
	"add.241" -> "tuple.276";
}