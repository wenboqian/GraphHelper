digraph HloModule { 
	"p3.4" [label="p3.4 \n s32[1]"];
	"p4.5" [label="p4.5 \n s32[1]"];
	"p5.6" [label="p5.6 \n s32[1]"];
	"p15.16" [label="p15.16 \n u64[1]"];
	"reshape.240" [label="reshape.240 \n u64[] reshape(u64[1]"];
	"p17.19" [label="p17.19 \n f32[4096,4008]"];
	"iota.55" [label="iota.55 \n s32[4,1,64]"];
	"p1.2" [label="p1.2 \n s32[1]"];
	"broadcast.46" [label="broadcast.46 \n s32[1]"];
	"add.47" [label="add.47 \n s32[1]"];
	"convert.37" [label="convert.37 \n s32[1]"];
	"broadcast.39" [label="broadcast.39 \n s32[1]"];
	"remainder.40" [label="remainder.40 \n s32[1]"];
	"reshape.48" [label="reshape.48 \n s32[] reshape(s32[1]"];
	"broadcast.50" [label="broadcast.50 \n s32[1]"];
	"subtract.51" [label="subtract.51 \n s32[1]"];
	"broadcast.53" [label="broadcast.53 \n s32[1]"];
	"divide.54" [label="divide.54 \n s32[1]"];
	"reshape.56" [label="reshape.56 \n s32[] reshape(s32[1]"];
	"broadcast.57" [label="broadcast.57 \n s32[4,1,64]"];
	"compare.58" [label="compare.58 \n pred[4,1,64]"];
	"p2.3" [label="p2.3 \n s32[4]"];
	"broadcast.68" [label="broadcast.68 \n s32[4]"];
	"divide.69" [label="divide.69 \n s32[4]"];
	"reshape.73" [label="reshape.73 \n s32[] reshape(s32[1]"];
	"broadcast.74" [label="broadcast.74 \n s32[4]"];
	"broadcast.71" [label="broadcast.71 \n s32[4]"];
	"remainder.72" [label="remainder.72 \n s32[4]"];
	"compare.75" [label="compare.75 \n pred[4]"];
	"convert.76" [label="convert.76 \n s32[4]"];
	"add.77" [label="add.77 \n s32[4]"];
	"reshape.78" [label="reshape.78 \n s32[4]"];
	"broadcast.79" [label="broadcast.79 \n s32[4,1,64]"];
	"compare.80" [label="compare.80 \n pred[4,1,64]"];
	"and.81" [label="and.81 \n pred[4,1,64]"];
	"reshape.137" [label="reshape.137 \n pred[4,64]"];
	"broadcast.138" [label="broadcast.138 \n pred[4,4,1,64]"];
	"convert.22" [label="convert.22 \n f32[1]"];
	"reshape.23" [label="reshape.23 \n f32[1,1]"];
	"constant.24" [label="constant.24 \n f32[64]"];
	"reshape.25" [label="reshape.25 \n f32[1,64]"];
	"dot.26" [label="dot.26 \n f32[1,64]"];
	"cosine.28" [label="cosine.28 \n f32[1,64]"];
	"reshape.103" [label="reshape.103 \n f32[64]"];
	"broadcast.104" [label="broadcast.104 \n f32[1,4,1,64]"];
	"p0.1" [label="p0.1 \n f32[4096,1,4]"];
	"p8.9" [label="p8.9 \n f32[4096]"];
	"reshape.93" [label="reshape.93 \n f32[4096,4]"];
	"p9.10" [label="p9.10 \n f32[4096,384]"];
	"dot.94" [label="dot.94 \n f32[4,384]"];
	"slice.95" [label="slice.95 \n f32[4,128]"];
	"reshape.98" [label="reshape.98 \n f32[1,4,1,128]"];
	"slice.105" [label="slice.105 \n f32[1,4,1,64]"];
	"multiply.107" [label="multiply.107 \n f32[1,4,1,64]"];
	"sine.27" [label="sine.27 \n f32[1,64]"];
	"reshape.101" [label="reshape.101 \n f32[64]"];
	"broadcast.102" [label="broadcast.102 \n f32[1,4,1,64]"];
	"slice.106" [label="slice.106 \n f32[1,4,1,64]"];
	"multiply.108" [label="multiply.108 \n f32[1,4,1,64]"];
	"subtract.109" [label="subtract.109 \n f32[1,4,1,64]"];
	"multiply.110" [label="multiply.110 \n f32[1,4,1,64]"];
	"multiply.111" [label="multiply.111 \n f32[1,4,1,64]"];
	"add.112" [label="add.112 \n f32[1,4,1,64]"];
	"concatenate.113" [label="concatenate.113 \n f32[1,4,1,128]"];
	"broadcast.128" [label="broadcast.128 \n f32[1,4,1,128]"];
	"divide.129" [label="divide.129 \n f32[1,4,1,128]"];
	"p6.7" [label="p6.7 \n f32[64,4,1,128]"];
	"reshape.131" [label="reshape.131 \n f32[64,4,128]"];
	"broadcast.132" [label="broadcast.132 \n f32[64,4,1,4,128]"];
	"reshape.133" [label="reshape.133 \n f32[64,4,4,128]"];
	"dot.134" [label="dot.134 \n f32[4,4,1,64]"];
	"broadcast.136" [label="broadcast.136 \n f32[4,4,1,64]"];
	"select.139" [label="select.139 \n f32[4,4,1,64]"];
	"reduce.150" [label="reduce.150 \n f32[4,4,1]"];
	"iota.59" [label="iota.59 \n s32[1,1]"];
	"iota.60" [label="iota.60 \n s32[1,1]"];
	"compare.61" [label="compare.61 \n pred[1,1]"];
	"reshape.62" [label="reshape.62 \n pred[] reshape(pred[1,1]"];
	"broadcast.63" [label="broadcast.63 \n pred[4,1,1]"];
	"broadcast.35" [label="broadcast.35 \n s32[1]"];
	"remainder.36" [label="remainder.36 \n s32[1]"];
	"reshape.41" [label="reshape.41 \n s32[] reshape(s32[1]"];
	"broadcast.42" [label="broadcast.42 \n s32[1]"];
	"compare.43" [label="compare.43 \n pred[1]"];
	"reshape.64" [label="reshape.64 \n pred[] reshape(pred[1]"];
	"broadcast.65" [label="broadcast.65 \n pred[4,1,1]"];
	"and.66" [label="and.66 \n pred[4,1,1]"];
	"reshape.146" [label="reshape.146 \n pred[4]"];
	"broadcast.147" [label="broadcast.147 \n pred[4,4,1,1]"];
	"reshape.116" [label="reshape.116 \n f32[64]"];
	"broadcast.117" [label="broadcast.117 \n f32[1,4,1,64]"];
	"slice.96" [label="slice.96 \n f32[4,128]"];
	"reshape.99" [label="reshape.99 \n f32[1,4,1,128]"];
	"slice.118" [label="slice.118 \n f32[1,4,1,64]"];
	"multiply.120" [label="multiply.120 \n f32[1,4,1,64]"];
	"reshape.114" [label="reshape.114 \n f32[64]"];
	"broadcast.115" [label="broadcast.115 \n f32[1,4,1,64]"];
	"slice.119" [label="slice.119 \n f32[1,4,1,64]"];
	"multiply.121" [label="multiply.121 \n f32[1,4,1,64]"];
	"subtract.122" [label="subtract.122 \n f32[1,4,1,64]"];
	"multiply.123" [label="multiply.123 \n f32[1,4,1,64]"];
	"multiply.124" [label="multiply.124 \n f32[1,4,1,64]"];
	"add.125" [label="add.125 \n f32[1,4,1,64]"];
	"concatenate.126" [label="concatenate.126 \n f32[1,4,1,128]"];
	"reshape.140" [label="reshape.140 \n f32[4,128]"];
	"broadcast.141" [label="broadcast.141 \n f32[1,4,1,4,128]"];
	"reshape.142" [label="reshape.142 \n f32[1,4,4,128]"];
	"dot.143" [label="dot.143 \n f32[4,4,1,1]"];
	"broadcast.145" [label="broadcast.145 \n f32[4,4,1,1]"];
	"select.148" [label="select.148 \n f32[4,4,1,1]"];
	"reduce.157" [label="reduce.157 \n f32[4,4,1]"];
	"maximum.163" [label="maximum.163 \n f32[4,4,1]"];
	"reshape.164" [label="reshape.164 \n f32[4,4]"];
	"broadcast.165" [label="broadcast.165 \n f32[4,4,1,64]"];
	"subtract.168" [label="subtract.168 \n f32[4,4,1,64]"];
	"exponential.170" [label="exponential.170 \n f32[4,4,1,64]"];
	"reduce.173" [label="reduce.173 \n f32[4,4,1]"];
	"reshape.166" [label="reshape.166 \n f32[4,4]"];
	"broadcast.167" [label="broadcast.167 \n f32[4,4,1,1]"];
	"subtract.169" [label="subtract.169 \n f32[4,4,1,1]"];
	"exponential.171" [label="exponential.171 \n f32[4,4,1,1]"];
	"reduce.180" [label="reduce.180 \n f32[4,4,1]"];
	"add.186" [label="add.186 \n f32[4,4,1]"];
	"concatenate.187" [label="concatenate.187 \n f32[4,8,1]"];
	"reshape.189" [label="reshape.189 \n f32[4,4,2,4,1]"];
	"slice.190" [label="slice.190 \n f32[4,4,1,4,1]"];
	"reshape.192" [label="reshape.192 \n f32[4,4,4,1]"];
	"reduce.194" [label="reduce.194 \n f32[4,4,1]"];
	"reshape.213" [label="reshape.213 \n f32[4,4]"];
	"broadcast.214" [label="broadcast.214 \n f32[4,4,1,64]"];
	"subtract.217" [label="subtract.217 \n f32[4,4,1,64]"];
	"exponential.219" [label="exponential.219 \n f32[4,4,1,64]"];
	"p7.8" [label="p7.8 \n f32[64,4,1,128]"];
	"reshape.221" [label="reshape.221 \n f32[64,4,128]"];
	"broadcast.222" [label="broadcast.222 \n f32[64,4,1,4,128]"];
	"reshape.223" [label="reshape.223 \n f32[64,4,4,128]"];
	"dot.227" [label="dot.227 \n f32[4,4,1,128]"];
	"reshape.215" [label="reshape.215 \n f32[4,4]"];
	"broadcast.216" [label="broadcast.216 \n f32[4,4,1,1]"];
	"subtract.218" [label="subtract.218 \n f32[4,4,1,1]"];
	"exponential.220" [label="exponential.220 \n f32[4,4,1,1]"];
	"slice.97" [label="slice.97 \n f32[4,128]"];
	"reshape.100" [label="reshape.100 \n f32[1,4,1,128]"];
	"reshape.224" [label="reshape.224 \n f32[4,128]"];
	"broadcast.225" [label="broadcast.225 \n f32[1,4,1,4,128]"];
	"reshape.226" [label="reshape.226 \n f32[1,4,4,128]"];
	"dot.228" [label="dot.228 \n f32[4,4,1,128]"];
	"add.229" [label="add.229 \n f32[4,4,1,128]"];
	"slice.191" [label="slice.191 \n f32[4,4,1,4,1]"];
	"reshape.202" [label="reshape.202 \n f32[4,4,4,1]"];
	"reshape.200" [label="reshape.200 \n f32[4,4]"];
	"broadcast.201" [label="broadcast.201 \n f32[4,4,4,1]"];
	"subtract.203" [label="subtract.203 \n f32[4,4,4,1]"];
	"exponential.204" [label="exponential.204 \n f32[4,4,4,1]"];
	"multiply.205" [label="multiply.205 \n f32[4,4,4,1]"];
	"reduce.207" [label="reduce.207 \n f32[4,4,1]"];
	"reshape.230" [label="reshape.230 \n f32[4,4]"];
	"broadcast.231" [label="broadcast.231 \n f32[4,4,1,128]"];
	"divide.232" [label="divide.232 \n f32[4,4,1,128]"];
	"transpose.239" [label="transpose.239 \n f32[1,4,1,128]"];
	"reshape.251" [label="reshape.251 \n f32[4,128]"];
	"p10.11" [label="p10.11 \n f32[4096,128]"];
	"dot.252" [label="dot.252 \n f32[4,4096]"];
	"transpose.253" [label="transpose.253 \n f32[4096,4]"];
	"reshape.254" [label="reshape.254 \n f32[4096,1,4]"];
	"add.261" [label="add.261 \n f32[4096,1,4]"];
	"p11.12" [label="p11.12 \n f32[4096]"];
	"reshape.264" [label="reshape.264 \n f32[4096,4]"];
	"p12.13" [label="p12.13 \n f32[4096,448]"];
	"dot.265" [label="dot.265 \n f32[4,448]"];
	"logistic.266" [label="logistic.266 \n f32[4,448]"];
	"multiply.267" [label="multiply.267 \n f32[4,448]"];
	"p13.14" [label="p13.14 \n f32[4096,448]"];
	"dot.268" [label="dot.268 \n f32[4,448]"];
	"multiply.269" [label="multiply.269 \n f32[4,448]"];
	"p14.15" [label="p14.15 \n f32[4096,448]"];
	"dot.270" [label="dot.270 \n f32[4,4096]"];
	"transpose.271" [label="transpose.271 \n f32[4096,4]"];
	"reshape.272" [label="reshape.272 \n f32[4096,1,4]"];
	"add.279" [label="add.279 \n f32[4096,1,4]"];
	"p16.18" [label="p16.18 \n f32[4096]"];
	"reshape.282" [label="reshape.282 \n f32[4096,4]"];
	"dot.283" [label="dot.283 \n f32[4008,4]"];
	"reshape.284" [label="reshape.284 \n f32[4008,1,4]"];
	"broadcast.30" [label="broadcast.30 \n s32[1]"];
	"divide.31" [label="divide.31 \n s32[1]"];
	"broadcast.33" [label="broadcast.33 \n s32[1]"];
	"select.44" [label="select.44 \n s32[1]"];
	"scatter.241" [label="scatter.241 \n f32[64,4,1,128]"];
	"scatter.246" [label="scatter.246 \n f32[64,4,1,128]"];
	"tuple.285" [label="tuple.285 \n (f32[4008,1,4]"]; 
 	"p15.16" -> "custom-call.17";
	"custom-call.17" -> "reshape.240";
	"p17.19" -> "custom-call.21";
	"constant.45" -> "broadcast.46";
	"p1.2" -> "add.47";
	"broadcast.46" -> "add.47";
	"custom-call.17" -> "convert.37";
	"constant.38" -> "broadcast.39";
	"convert.37" -> "remainder.40";
	"broadcast.39" -> "remainder.40";
	"remainder.40" -> "reshape.48";
	"reshape.48" -> "reshape.49";
	"reshape.49" -> "broadcast.50";
	"add.47" -> "subtract.51";
	"broadcast.50" -> "subtract.51";
	"constant.52" -> "broadcast.53";
	"subtract.51" -> "divide.54";
	"broadcast.53" -> "divide.54";
	"divide.54" -> "reshape.56";
	"reshape.56" -> "broadcast.57";
	"iota.55" -> "compare.58";
	"broadcast.57" -> "compare.58";
	"constant.67" -> "broadcast.68";
	"p2.3" -> "divide.69";
	"broadcast.68" -> "divide.69";
	"remainder.40" -> "reshape.73";
	"reshape.73" -> "broadcast.74";
	"constant.70" -> "broadcast.71";
	"p2.3" -> "remainder.72";
	"broadcast.71" -> "remainder.72";
	"broadcast.74" -> "compare.75";
	"remainder.72" -> "compare.75";
	"compare.75" -> "convert.76";
	"divide.69" -> "add.77";
	"convert.76" -> "add.77";
	"add.77" -> "reshape.78";
	"reshape.78" -> "broadcast.79";
	"iota.55" -> "compare.80";
	"broadcast.79" -> "compare.80";
	"compare.58" -> "and.81";
	"compare.80" -> "and.81";
	"and.81" -> "reshape.137";
	"reshape.137" -> "broadcast.138";
	"p1.2" -> "convert.22";
	"convert.22" -> "reshape.23";
	"constant.24" -> "reshape.25";
	"reshape.23" -> "dot.26";
	"reshape.25" -> "dot.26";
	"dot.26" -> "cosine.28";
	"cosine.28" -> "reshape.103";
	"reshape.103" -> "broadcast.104";
	"p8.9" -> "custom-call.84";
	"p0.1" -> "custom-call.92";
	"custom-call.84" -> "custom-call.92";
	"constant.91" -> "custom-call.92";
	"custom-call.92" -> "reshape.93";
	"p9.10" -> "custom-call.85";
	"reshape.93" -> "dot.94";
	"custom-call.85" -> "dot.94";
	"dot.94" -> "slice.95";
	"slice.95" -> "reshape.98";
	"reshape.98" -> "slice.105";
	"broadcast.104" -> "multiply.107";
	"slice.105" -> "multiply.107";
	"dot.26" -> "sine.27";
	"sine.27" -> "reshape.101";
	"reshape.101" -> "broadcast.102";
	"reshape.98" -> "slice.106";
	"broadcast.102" -> "multiply.108";
	"slice.106" -> "multiply.108";
	"multiply.107" -> "subtract.109";
	"multiply.108" -> "subtract.109";
	"broadcast.104" -> "multiply.110";
	"slice.106" -> "multiply.110";
	"broadcast.102" -> "multiply.111";
	"slice.105" -> "multiply.111";
	"multiply.110" -> "add.112";
	"multiply.111" -> "add.112";
	"subtract.109" -> "concatenate.113";
	"add.112" -> "concatenate.113";
	"constant.127" -> "broadcast.128";
	"concatenate.113" -> "divide.129";
	"broadcast.128" -> "divide.129";
	"divide.129" -> "all-gather.130";
	"p6.7" -> "custom-call.82";
	"custom-call.82" -> "reshape.131";
	"reshape.131" -> "broadcast.132";
	"broadcast.132" -> "reshape.133";
	"all-gather.130" -> "dot.134";
	"reshape.133" -> "dot.134";
	"constant.135" -> "broadcast.136";
	"broadcast.138" -> "select.139";
	"dot.134" -> "select.139";
	"broadcast.136" -> "select.139";
	"select.139" -> "reduce.150";
	"constant.149" -> "reduce.150";
	"reduce.150.Reducer.155" -> "reduce.150";
	"iota.59" -> "compare.61";
	"iota.60" -> "compare.61";
	"compare.61" -> "reshape.62";
	"reshape.62" -> "broadcast.63";
	"constant.34" -> "broadcast.35";
	"p1.2" -> "remainder.36";
	"broadcast.35" -> "remainder.36";
	"remainder.40" -> "reshape.41";
	"reshape.41" -> "broadcast.42";
	"remainder.36" -> "compare.43";
	"broadcast.42" -> "compare.43";
	"compare.43" -> "reshape.64";
	"reshape.64" -> "broadcast.65";
	"broadcast.63" -> "and.66";
	"broadcast.65" -> "and.66";
	"and.66" -> "reshape.146";
	"reshape.146" -> "broadcast.147";
	"cosine.28" -> "reshape.116";
	"reshape.116" -> "broadcast.117";
	"dot.94" -> "slice.96";
	"slice.96" -> "reshape.99";
	"reshape.99" -> "slice.118";
	"broadcast.117" -> "multiply.120";
	"slice.118" -> "multiply.120";
	"sine.27" -> "reshape.114";
	"reshape.114" -> "broadcast.115";
	"reshape.99" -> "slice.119";
	"broadcast.115" -> "multiply.121";
	"slice.119" -> "multiply.121";
	"multiply.120" -> "subtract.122";
	"multiply.121" -> "subtract.122";
	"broadcast.117" -> "multiply.123";
	"slice.119" -> "multiply.123";
	"broadcast.115" -> "multiply.124";
	"slice.118" -> "multiply.124";
	"multiply.123" -> "add.125";
	"multiply.124" -> "add.125";
	"subtract.122" -> "concatenate.126";
	"add.125" -> "concatenate.126";
	"concatenate.126" -> "reshape.140";
	"reshape.140" -> "broadcast.141";
	"broadcast.141" -> "reshape.142";
	"all-gather.130" -> "dot.143";
	"reshape.142" -> "dot.143";
	"constant.144" -> "broadcast.145";
	"broadcast.147" -> "select.148";
	"dot.143" -> "select.148";
	"broadcast.145" -> "select.148";
	"select.148" -> "reduce.157";
	"constant.156" -> "reduce.157";
	"reduce.157.Reducer.162" -> "reduce.157";
	"reduce.150" -> "maximum.163";
	"reduce.157" -> "maximum.163";
	"maximum.163" -> "reshape.164";
	"reshape.164" -> "broadcast.165";
	"select.139" -> "subtract.168";
	"broadcast.165" -> "subtract.168";
	"subtract.168" -> "exponential.170";
	"exponential.170" -> "reduce.173";
	"constant.172" -> "reduce.173";
	"reduce.173.Reducer.178" -> "reduce.173";
	"maximum.163" -> "reshape.166";
	"reshape.166" -> "broadcast.167";
	"select.148" -> "subtract.169";
	"broadcast.167" -> "subtract.169";
	"subtract.169" -> "exponential.171";
	"exponential.171" -> "reduce.180";
	"constant.179" -> "reduce.180";
	"reduce.180.Reducer.185" -> "reduce.180";
	"reduce.173" -> "add.186";
	"reduce.180" -> "add.186";
	"maximum.163" -> "concatenate.187";
	"add.186" -> "concatenate.187";
	"concatenate.187" -> "all-gather.188";
	"all-gather.188" -> "reshape.189";
	"reshape.189" -> "slice.190";
	"slice.190" -> "reshape.192";
	"reshape.192" -> "reduce.194";
	"constant.193" -> "reduce.194";
	"reduce.194.Reducer.199" -> "reduce.194";
	"reduce.194" -> "reshape.213";
	"reshape.213" -> "broadcast.214";
	"select.139" -> "subtract.217";
	"broadcast.214" -> "subtract.217";
	"subtract.217" -> "exponential.219";
	"p7.8" -> "custom-call.83";
	"custom-call.83" -> "reshape.221";
	"reshape.221" -> "broadcast.222";
	"broadcast.222" -> "reshape.223";
	"exponential.219" -> "dot.227";
	"reshape.223" -> "dot.227";
	"reduce.194" -> "reshape.215";
	"reshape.215" -> "broadcast.216";
	"select.148" -> "subtract.218";
	"broadcast.216" -> "subtract.218";
	"subtract.218" -> "exponential.220";
	"dot.94" -> "slice.97";
	"slice.97" -> "reshape.100";
	"reshape.100" -> "reshape.224";
	"reshape.224" -> "broadcast.225";
	"broadcast.225" -> "reshape.226";
	"exponential.220" -> "dot.228";
	"reshape.226" -> "dot.228";
	"dot.227" -> "add.229";
	"dot.228" -> "add.229";
	"reshape.189" -> "slice.191";
	"slice.191" -> "reshape.202";
	"reduce.194" -> "reshape.200";
	"reshape.200" -> "broadcast.201";
	"reshape.192" -> "subtract.203";
	"broadcast.201" -> "subtract.203";
	"subtract.203" -> "exponential.204";
	"reshape.202" -> "multiply.205";
	"exponential.204" -> "multiply.205";
	"multiply.205" -> "reduce.207";
	"constant.206" -> "reduce.207";
	"reduce.207.Reducer.212" -> "reduce.207";
	"reduce.207" -> "reshape.230";
	"reshape.230" -> "broadcast.231";
	"add.229" -> "divide.232";
	"broadcast.231" -> "divide.232";
	"divide.232" -> "reduce-scatter.233";
	"reduce-scatter.233.AddFunc.238" -> "reduce-scatter.233";
	"reduce-scatter.233" -> "transpose.239";
	"transpose.239" -> "reshape.251";
	"p10.11" -> "custom-call.86";
	"reshape.251" -> "dot.252";
	"custom-call.86" -> "dot.252";
	"dot.252" -> "transpose.253";
	"transpose.253" -> "reshape.254";
	"reshape.254" -> "all-reduce.255";
	"all-reduce.255.Reducer.260" -> "all-reduce.255";
	"all-reduce.255" -> "add.261";
	"p0.1" -> "add.261";
	"p11.12" -> "custom-call.87";
	"add.261" -> "custom-call.263";
	"custom-call.87" -> "custom-call.263";
	"constant.262" -> "custom-call.263";
	"custom-call.263" -> "reshape.264";
	"p12.13" -> "custom-call.88";
	"reshape.264" -> "dot.265";
	"custom-call.88" -> "dot.265";
	"dot.265" -> "logistic.266";
	"dot.265" -> "multiply.267";
	"logistic.266" -> "multiply.267";
	"p13.14" -> "custom-call.89";
	"reshape.264" -> "dot.268";
	"custom-call.89" -> "dot.268";
	"multiply.267" -> "multiply.269";
	"dot.268" -> "multiply.269";
	"p14.15" -> "custom-call.90";
	"multiply.269" -> "dot.270";
	"custom-call.90" -> "dot.270";
	"dot.270" -> "transpose.271";
	"transpose.271" -> "reshape.272";
	"reshape.272" -> "all-reduce.273";
	"all-reduce.273.Reducer.278" -> "all-reduce.273";
	"all-reduce.273" -> "add.279";
	"add.261" -> "add.279";
	"p16.18" -> "custom-call.20";
	"add.279" -> "custom-call.281";
	"custom-call.20" -> "custom-call.281";
	"constant.280" -> "custom-call.281";
	"custom-call.281" -> "reshape.282";
	"custom-call.21" -> "dot.283";
	"reshape.282" -> "dot.283";
	"dot.283" -> "reshape.284";
	"constant.29" -> "broadcast.30";
	"p1.2" -> "divide.31";
	"broadcast.30" -> "divide.31";
	"constant.32" -> "broadcast.33";
	"compare.43" -> "select.44";
	"divide.31" -> "select.44";
	"broadcast.33" -> "select.44";
	"custom-call.82" -> "scatter.241";
	"select.44" -> "scatter.241";
	"concatenate.126" -> "scatter.241";
	"scatter.241.AssignFunc.245" -> "scatter.241";
	"custom-call.83" -> "scatter.246";
	"select.44" -> "scatter.246";
	"reshape.100" -> "scatter.246";
	"scatter.246.AssignFunc.250" -> "scatter.246";
	"reshape.284" -> "tuple.285";
	"scatter.241" -> "tuple.285";
	"scatter.246" -> "tuple.285";
	"custom-call.17" -> "tuple.285";
	"custom-call.17" -> "tuple.285";
	"custom-call.20" -> "tuple.285";
	"custom-call.21" -> "tuple.285";
	"convert.22" -> "tuple.285";
	"reshape.23" -> "tuple.285";
	"constant.24" -> "tuple.285";
	"reshape.25" -> "tuple.285";
	"dot.26" -> "tuple.285";
	"sine.27" -> "tuple.285";
	"cosine.28" -> "tuple.285";
	"sine.27" -> "tuple.285";
	"cosine.28" -> "tuple.285";
	"custom-call.92" -> "tuple.285";
	"reshape.93" -> "tuple.285";
	"dot.94" -> "tuple.285";
	"slice.95" -> "tuple.285";
	"slice.96" -> "tuple.285";
	"slice.97" -> "tuple.285";
	"reshape.99" -> "tuple.285";
	"reshape.100" -> "tuple.285";
	"reshape.98" -> "tuple.285";
	"broadcast.115" -> "tuple.285";
	"broadcast.117" -> "tuple.285";
	"slice.118" -> "tuple.285";
	"slice.119" -> "tuple.285";
	"concatenate.113" -> "tuple.285";
	"concatenate.126" -> "tuple.285";
	"constant.127" -> "tuple.285";
	"broadcast.128" -> "tuple.285";
	"divide.129" -> "tuple.285";
	"custom-call.82" -> "tuple.285";
	"custom-call.83" -> "tuple.285";
	"all-gather.130" -> "tuple.285";
	"reshape.142" -> "tuple.285";
	"dot.143" -> "tuple.285";
	"constant.144" -> "tuple.285";
	"broadcast.145" -> "tuple.285";
	"broadcast.147" -> "tuple.285";
	"select.148" -> "tuple.285";
	"transpose.239" -> "tuple.285";
	"scatter.246" -> "tuple.285";
	"select.139" -> "tuple.285";
	"select.139" -> "tuple.285";
	"select.148" -> "tuple.285";
	"select.148" -> "tuple.285";
	"reshape.251" -> "tuple.285";
	"dot.252" -> "tuple.285";
	"reshape.254" -> "tuple.285";
	"reshape.254" -> "tuple.285";
	"all-reduce.255" -> "tuple.285";
	"all-reduce.255" -> "tuple.285";
	"add.261" -> "tuple.285";
	"custom-call.263" -> "tuple.285";
	"all-reduce.273" -> "tuple.285";
	"add.279" -> "tuple.285";
	"reshape.284" -> "tuple.285";
	"reshape.284" -> "tuple.285";
	"reshape.284" -> "tuple.285";
 }