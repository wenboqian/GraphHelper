digraph HloModule { 
	"p40.875" [label="p40.875 \n f32[1]"];
	"p34.687" [label="p34.687 \n s64[1,128]"];
	"broadcast.188" [label="broadcast.188 \n s64[1,128]"];
	"compare.8" [label="compare.8 \n pred[1,128]"];
	"reshape.443" [label="reshape.443 \n pred[128]"];
	"p39.785" [label="p39.785 \n bf16[16]"];
	"broadcast.798" [label="broadcast.798 \n bf16[1,128,16]"];
	"p33.598" [label="p33.598 \n bf16[16]"];
	"broadcast.611" [label="broadcast.611 \n bf16[1,128,16]"];
	"p28.468" [label="p28.468 \n bf16[16]"];
	"broadcast.481" [label="broadcast.481 \n bf16[1,128,16]"];
	"p16.238" [label="p16.238 \n bf16[16]"];
	"broadcast.251" [label="broadcast.251 \n bf16[1,128,16]"];
	"p15.217" [label="p15.217 \n bf16[30522,16]"];
	"p14.215" [label="p14.215 \n s64[1,128]"];
	"convert.7" [label="convert.7 \n u32[1,128]"];
	"reshape.303" [label="reshape.303 \n u32[128]"];
	"gather.226" [label="gather.226 \n bf16[128,16]"];
	"p13.203" [label="p13.203 \n bf16[2,16]"];
	"p12.201" [label="p12.201 \n s64[1,128]"];
	"convert.6" [label="convert.6 \n u32[1,128]"];
	"reshape.302" [label="reshape.302 \n u32[128]"];
	"gather.212" [label="gather.212 \n bf16[128,16]"];
	"add.13" [label="add.13 \n bf16[128,16]"];
	"p11.184" [label="p11.184 \n bf16[512,16]"];
	"p10.180" [label="p10.180 \n s64[1,512]"];
	"convert.5" [label="convert.5 \n u32[1,512]"];
	"slice.0" [label="slice.0 \n u32[1,128]"];
	"reshape.301" [label="reshape.301 \n u32[128]"];
	"gather.193" [label="gather.193 \n bf16[128,16]"];
	"add.16" [label="add.16 \n bf16[128,16]"];
	"reshape.474" [label="reshape.474 \n bf16[1,128,16]"];
	"constant.170" [label="constant.170 \n bf16[] constant(1), metadata="];
	"broadcast.174" [label="broadcast.174 \n bf16[128]"];
	"constant.165" [label="constant.165 \n bf16[] constant(0), metadata="];
	"broadcast.169" [label="broadcast.169 \n bf16[128]"];
	"p9.147" [label="p9.147 \n bf16[16]"];
	"broadcast.247" [label="broadcast.247 \n bf16[1,128,16]"];
	"multiply.250" [label="multiply.250 \n bf16[1,128,16]"];
	"add.252" [label="add.252 \n bf16[1,128,16]"];
	"constant.109" [label="constant.109 \n s64[] constant(214013), metadata="];
	"p8.108" [label="p8.108 \n s64[] parameter(8), frontend_attributes="];
	"multiply.110" [label="multiply.110 \n s64[] multiply(s64[] %constant.109, s64[] %p8.108), metadata="];
	"constant.111" [label="constant.111 \n s64[] constant(2531011), metadata="];
	"add.112" [label="add.112 \n s64[] add(s64[] %multiply.110, s64[] %constant.111), metadata="];
	"convert.119" [label="convert.119 \n u64[] convert(s64[] %add.112), metadata="];
	"reshape.123" [label="reshape.123 \n u64[1]"];
	"constant.41" [label="constant.41 \n u64[1]"];
	"concatenate.125" [label="concatenate.125 \n u64[2]"];
	"constant.129" [label="constant.129 \n u32[] constant(9), metadata="];
	"broadcast.130" [label="broadcast.130 \n u32[1,128,16]"];
	"convert.132" [label="convert.132 \n f32[1,128,16]"];
	"broadcast.40" [label="broadcast.40 \n f32[1,128,16]"];
	"multiply.138" [label="multiply.138 \n f32[1,128,16]"];
	"convert.141" [label="convert.141 \n bf16[1,128,16]"];
	"p7.107" [label="p7.107 \n bf16[] parameter(7), frontend_attributes="];
	"broadcast.116" [label="broadcast.116 \n bf16[1,128,16]"];
	"compare.142" [label="compare.142 \n pred[1,128,16]"];
	"constant.23" [label="constant.23 \n bf16[] constant(1), metadata="];
	"broadcast.42" [label="broadcast.42 \n bf16[1,128,16]"];
	"broadcast.105" [label="broadcast.105 \n bf16[1,128,16]"];
	"select.13" [label="select.13 \n bf16[1,128,16]"];
	"multiply.254" [label="multiply.254 \n bf16[1,128,16]"];
	"reshape.412" [label="reshape.412 \n bf16[128,16]"];
	"p27.410" [label="p27.410 \n bf16[16,16]"];
	"transpose.411" [label="transpose.411 \n bf16[16,16]"];
	"dot.413" [label="dot.413 \n bf16[128,16]"];
	"reshape.414" [label="reshape.414 \n bf16[1,128,16]"];
	"p26.408" [label="p26.408 \n bf16[16]"];
	"broadcast.415" [label="broadcast.415 \n bf16[1,128,16]"];
	"add.416" [label="add.416 \n bf16[1,128,16]"];
	"reshape.417" [label="reshape.417 \n bf16[1,128,2,8]"];
	"transpose.418" [label="transpose.418 \n bf16[1,2,128,8]"];
	"reshape.420" [label="reshape.420 \n bf16[2,128,8]"];
	"reshape.393" [label="reshape.393 \n bf16[128,16]"];
	"p25.391" [label="p25.391 \n bf16[16,16]"];
	"transpose.392" [label="transpose.392 \n bf16[16,16]"];
	"dot.394" [label="dot.394 \n bf16[128,16]"];
	"reshape.395" [label="reshape.395 \n bf16[1,128,16]"];
	"p24.389" [label="p24.389 \n bf16[16]"];
	"broadcast.396" [label="broadcast.396 \n bf16[1,128,16]"];
	"add.397" [label="add.397 \n bf16[1,128,16]"];
	"reshape.398" [label="reshape.398 \n bf16[1,128,2,8]"];
	"transpose.400" [label="transpose.400 \n bf16[1,2,8,128]"];
	"reshape.402" [label="reshape.402 \n bf16[2,8,128]"];
	"dot.421" [label="dot.421 \n bf16[2,128,128]"];
	"p23.383" [label="p23.383 \n bf16[] parameter(23), frontend_attributes="];
	"broadcast.190" [label="broadcast.190 \n bf16[2,128,128]"];
	"divide.8" [label="divide.8 \n bf16[2,128,128]"];
	"reshape.434" [label="reshape.434 \n bf16[1,2,128,128]"];
	"constant.374" [label="constant.374 \n bf16[] constant(1), metadata="];
	"broadcast.192" [label="broadcast.192 \n bf16[1,128]"];
	"p22.362" [label="p22.362 \n s64[1,128]"];
	"convert.3" [label="convert.3 \n bf16[1,128]"];
	"subtract.4" [label="subtract.4 \n bf16[1,128]"];
	"p21.361" [label="p21.361 \n bf16[] parameter(21), frontend_attributes="];
	"broadcast.199" [label="broadcast.199 \n bf16[1,128]"];
	"multiply.39" [label="multiply.39 \n bf16[1,128]"];
	"reshape.50" [label="reshape.50 \n bf16[128]"];
	"broadcast.427" [label="broadcast.427 \n bf16[1,2,128,128]"];
	"add.428" [label="add.428 \n bf16[1,2,128,128]"];
	"constant.429" [label="constant.429 \n bf16[] constant(-inf), metadata="];
	"reduce.434" [label="reduce.434 \n bf16[1,2,128]"];
	"reshape.52" [label="reshape.52 \n bf16[2,128]"];
	"broadcast.435" [label="broadcast.435 \n bf16[1,2,128,128]"];
	"subtract.436" [label="subtract.436 \n bf16[1,2,128,128]"];
	"exponential.437" [label="exponential.437 \n bf16[1,2,128,128]"];
	"constant.438" [label="constant.438 \n bf16[] constant(0), metadata="];
	"reduce.443" [label="reduce.443 \n bf16[1,2,128]"];
	"reshape.53" [label="reshape.53 \n bf16[2,128]"];
	"broadcast.444" [label="broadcast.444 \n bf16[1,2,128,128]"];
	"divide.445" [label="divide.445 \n bf16[1,2,128,128]"];
	"constant.255" [label="constant.255 \n s64[] constant(214013), metadata="];
	"multiply.256" [label="multiply.256 \n s64[] multiply(s64[] %constant.255, s64[] %add.112), metadata="];
	"constant.257" [label="constant.257 \n s64[] constant(2531011), metadata="];
	"add.258" [label="add.258 \n s64[] add(s64[] %multiply.256, s64[] %constant.257), metadata="];
	"convert.329" [label="convert.329 \n u64[] convert(s64[] %add.258), metadata="];
	"reshape.333" [label="reshape.333 \n u64[1]"];
	"constant.46" [label="constant.46 \n u64[1]"];
	"concatenate.335" [label="concatenate.335 \n u64[2]"];
	"constant.339" [label="constant.339 \n u32[] constant(9), metadata="];
	"broadcast.340" [label="broadcast.340 \n u32[1,2,128,128]"];
	"convert.342" [label="convert.342 \n f32[1,2,128,128]"];
	"broadcast.49" [label="broadcast.49 \n f32[1,2,128,128]"];
	"multiply.348" [label="multiply.348 \n f32[1,2,128,128]"];
	"convert.351" [label="convert.351 \n bf16[1,2,128,128]"];
	"broadcast.326" [label="broadcast.326 \n bf16[1,2,128,128]"];
	"compare.352" [label="compare.352 \n pred[1,2,128,128]"];
	"constant.24" [label="constant.24 \n bf16[] constant(1), metadata="];
	"broadcast.53" [label="broadcast.53 \n bf16[1,2,128,128]"];
	"broadcast.98" [label="broadcast.98 \n bf16[1,2,128,128]"];
	"select.12" [label="select.12 \n bf16[1,2,128,128]"];
	"multiply.446" [label="multiply.446 \n bf16[1,2,128,128]"];
	"reshape.448" [label="reshape.448 \n bf16[2,128,128]"];
	"reshape.314" [label="reshape.314 \n bf16[128,16]"];
	"p20.312" [label="p20.312 \n bf16[16,16]"];
	"transpose.313" [label="transpose.313 \n bf16[16,16]"];
	"dot.315" [label="dot.315 \n bf16[128,16]"];
	"reshape.316" [label="reshape.316 \n bf16[1,128,16]"];
	"p19.310" [label="p19.310 \n bf16[16]"];
	"broadcast.317" [label="broadcast.317 \n bf16[1,128,16]"];
	"add.318" [label="add.318 \n bf16[1,128,16]"];
	"reshape.319" [label="reshape.319 \n bf16[1,128,2,8]"];
	"transpose.320" [label="transpose.320 \n bf16[1,2,128,8]"];
	"reshape.322" [label="reshape.322 \n bf16[2,128,8]"];
	"dot.449" [label="dot.449 \n bf16[2,128,8]"];
	"reshape.450" [label="reshape.450 \n bf16[1,2,128,8]"];
	"transpose.451" [label="transpose.451 \n bf16[1,128,2,8]"];
	"reshape.453" [label="reshape.453 \n bf16[128,16]"];
	"p18.303" [label="p18.303 \n bf16[16,16]"];
	"transpose.304" [label="transpose.304 \n bf16[16,16]"];
	"dot.454" [label="dot.454 \n bf16[128,16]"];
	"reshape.455" [label="reshape.455 \n bf16[1,128,16]"];
	"p17.301" [label="p17.301 \n bf16[16]"];
	"broadcast.456" [label="broadcast.456 \n bf16[1,128,16]"];
	"add.457" [label="add.457 \n bf16[1,128,16]"];
	"constant.259" [label="constant.259 \n s64[] constant(214013), metadata="];
	"multiply.260" [label="multiply.260 \n s64[] multiply(s64[] %constant.259, s64[] %add.258), metadata="];
	"constant.261" [label="constant.261 \n s64[] constant(2531011), metadata="];
	"add.262" [label="add.262 \n s64[] add(s64[] %multiply.260, s64[] %constant.261), metadata="];
	"convert.269" [label="convert.269 \n u64[] convert(s64[] %add.262), metadata="];
	"reshape.273" [label="reshape.273 \n u64[1]"];
	"constant.52" [label="constant.52 \n u64[1]"];
	"concatenate.275" [label="concatenate.275 \n u64[2]"];
	"constant.279" [label="constant.279 \n u32[] constant(9), metadata="];
	"broadcast.280" [label="broadcast.280 \n u32[1,128,16]"];
	"convert.282" [label="convert.282 \n f32[1,128,16]"];
	"broadcast.54" [label="broadcast.54 \n f32[1,128,16]"];
	"multiply.288" [label="multiply.288 \n f32[1,128,16]"];
	"convert.291" [label="convert.291 \n bf16[1,128,16]"];
	"broadcast.266" [label="broadcast.266 \n bf16[1,128,16]"];
	"compare.292" [label="compare.292 \n pred[1,128,16]"];
	"constant.25" [label="constant.25 \n bf16[] constant(1), metadata="];
	"broadcast.58" [label="broadcast.58 \n bf16[1,128,16]"];
	"broadcast.95" [label="broadcast.95 \n bf16[1,128,16]"];
	"select.11" [label="select.11 \n bf16[1,128,16]"];
	"multiply.458" [label="multiply.458 \n bf16[1,128,16]"];
	"add.459" [label="add.459 \n bf16[1,128,16]"];
	"constant.97" [label="constant.97 \n bf16[] constant(1), metadata="];
	"broadcast.101" [label="broadcast.101 \n bf16[128]"];
	"constant.92" [label="constant.92 \n bf16[] constant(0), metadata="];
	"broadcast.96" [label="broadcast.96 \n bf16[128]"];
	"p6.74" [label="p6.74 \n bf16[16]"];
	"broadcast.477" [label="broadcast.477 \n bf16[1,128,16]"];
	"multiply.480" [label="multiply.480 \n bf16[1,128,16]"];
	"add.482" [label="add.482 \n bf16[1,128,16]"];
	"reshape.567" [label="reshape.567 \n bf16[128,16]"];
	"p32.558" [label="p32.558 \n bf16[4096,16]"];
	"transpose.566" [label="transpose.566 \n bf16[16,4096]"];
	"dot.568" [label="dot.568 \n bf16[128,4096]"];
	"reshape.569" [label="reshape.569 \n bf16[1,128,4096]"];
	"p31.549" [label="p31.549 \n bf16[4096]"];
	"broadcast.570" [label="broadcast.570 \n bf16[1,128,4096]"];
	"add.571" [label="add.571 \n bf16[1,128,4096]"];
	"reshape.581" [label="reshape.581 \n bf16[128,4096]"];
	"p30.535" [label="p30.535 \n bf16[16,4096]"];
	"transpose.543" [label="transpose.543 \n bf16[4096,16]"];
	"dot.582" [label="dot.582 \n bf16[128,16]"];
	"reshape.583" [label="reshape.583 \n bf16[1,128,16]"];
	"p29.526" [label="p29.526 \n bf16[16]"];
	"broadcast.584" [label="broadcast.584 \n bf16[1,128,16]"];
	"add.585" [label="add.585 \n bf16[1,128,16]"];
	"constant.484" [label="constant.484 \n s64[] constant(214013), metadata="];
	"multiply.485" [label="multiply.485 \n s64[] multiply(s64[] %constant.484, s64[] %add.262), metadata="];
	"constant.486" [label="constant.486 \n s64[] constant(2531011), metadata="];
	"add.487" [label="add.487 \n s64[] add(s64[] %multiply.485, s64[] %constant.486), metadata="];
	"convert.494" [label="convert.494 \n u64[] convert(s64[] %add.487), metadata="];
	"reshape.498" [label="reshape.498 \n u64[1]"];
	"constant.60" [label="constant.60 \n u64[1]"];
	"concatenate.500" [label="concatenate.500 \n u64[2]"];
	"constant.504" [label="constant.504 \n u32[] constant(9), metadata="];
	"broadcast.505" [label="broadcast.505 \n u32[1,128,16]"];
	"convert.507" [label="convert.507 \n f32[1,128,16]"];
	"broadcast.61" [label="broadcast.61 \n f32[1,128,16]"];
	"multiply.513" [label="multiply.513 \n f32[1,128,16]"];
	"convert.516" [label="convert.516 \n bf16[1,128,16]"];
	"broadcast.491" [label="broadcast.491 \n bf16[1,128,16]"];
	"compare.517" [label="compare.517 \n pred[1,128,16]"];
	"constant.26" [label="constant.26 \n bf16[] constant(1), metadata="];
	"broadcast.64" [label="broadcast.64 \n bf16[1,128,16]"];
	"broadcast.92" [label="broadcast.92 \n bf16[1,128,16]"];
	"select.10" [label="select.10 \n bf16[1,128,16]"];
	"multiply.588" [label="multiply.588 \n bf16[1,128,16]"];
	"add.589" [label="add.589 \n bf16[1,128,16]"];
	"constant.63" [label="constant.63 \n bf16[] constant(1), metadata="];
	"broadcast.67" [label="broadcast.67 \n bf16[128]"];
	"constant.58" [label="constant.58 \n bf16[] constant(0), metadata="];
	"broadcast.62" [label="broadcast.62 \n bf16[128]"];
	"p5.40" [label="p5.40 \n bf16[16]"];
	"broadcast.607" [label="broadcast.607 \n bf16[1,128,16]"];
	"multiply.610" [label="multiply.610 \n bf16[1,128,16]"];
	"add.612" [label="add.612 \n bf16[1,128,16]"];
	"reshape.763" [label="reshape.763 \n bf16[128,16]"];
	"p38.754" [label="p38.754 \n bf16[16,16]"];
	"transpose.762" [label="transpose.762 \n bf16[16,16]"];
	"dot.764" [label="dot.764 \n bf16[128,16]"];
	"reshape.765" [label="reshape.765 \n bf16[1,128,16]"];
	"p37.745" [label="p37.745 \n bf16[16]"];
	"broadcast.766" [label="broadcast.766 \n bf16[1,128,16]"];
	"add.767" [label="add.767 \n bf16[1,128,16]"];
	"constant.735" [label="constant.735 \n bf16[] constant(1), metadata="];
	"broadcast.739" [label="broadcast.739 \n bf16[128]"];
	"constant.730" [label="constant.730 \n bf16[] constant(0), metadata="];
	"broadcast.734" [label="broadcast.734 \n bf16[128]"];
	"p36.712" [label="p36.712 \n bf16[16]"];
	"broadcast.794" [label="broadcast.794 \n bf16[1,128,16]"];
	"multiply.797" [label="multiply.797 \n bf16[1,128,16]"];
	"add.799" [label="add.799 \n bf16[1,128,16]"];
	"reshape.800" [label="reshape.800 \n bf16[128,16]"];
	"transpose.710" [label="transpose.710 \n bf16[16,30522]"];
	"dot.801" [label="dot.801 \n bf16[128,30522]"];
	"reshape.802" [label="reshape.802 \n bf16[1,128,30522]"];
	"p35.694" [label="p35.694 \n bf16[30522]"];
	"broadcast.803" [label="broadcast.803 \n bf16[1,128,30522]"];
	"add.804" [label="add.804 \n bf16[1,128,30522]"];
	"reshape.807" [label="reshape.807 \n bf16[128,30522]"];
	"reduce.0" [label="reduce.0 \n bf16[128]"];
	"broadcast.0" [label="broadcast.0 \n bf16[128,30522]"];
	"subtract.0" [label="subtract.0 \n bf16[128,30522]"];
	"exponential.0" [label="exponential.0 \n bf16[128,30522]"];
	"reduce.1" [label="reduce.1 \n bf16[128]"];
	"log.0" [label="log.0 \n bf16[128]"];
	"broadcast.1" [label="broadcast.1 \n bf16[128,30522]"];
	"subtract.1" [label="subtract.1 \n bf16[128,30522]"];
	"reshape.1" [label="reshape.1 \n s64[128]"];
	"broadcast.3" [label="broadcast.3 \n s64[128,30522]"];
	"iota.5" [label="iota.5 \n s64[128,30522]"];
	"compare.0" [label="compare.0 \n pred[128,30522]"];
	"broadcast.6" [label="broadcast.6 \n bf16[128,30522]"];
	"broadcast.7" [label="broadcast.7 \n bf16[128,30522]"];
	"select.0" [label="select.0 \n bf16[128,30522]"];
	"multiply.2" [label="multiply.2 \n bf16[128,30522]"];
	"reduce.2" [label="reduce.2 \n bf16[128]"];
	"broadcast.68" [label="broadcast.68 \n bf16[128]"];
	"select.6" [label="select.6 \n bf16[128]"];
	"reduce.3" [label="reduce.3 \n bf16[] reduce(bf16[128]"];
	"convert.0" [label="convert.0 \n bf16[128]"];
	"reduce.4" [label="reduce.4 \n bf16[] reduce(bf16[128]"];
	"negate.0" [label="negate.0 \n bf16[] negate(bf16[] %divide.0), metadata="];
	"p0.4" [label="p0.4 \n s64[1]"];
	"constant.69" [label="constant.69 \n s64[1]"];
	"compare.4" [label="compare.4 \n pred[1]"];
	"slice.614" [label="slice.614 \n bf16[1,1,16]"];
	"reshape.130" [label="reshape.130 \n bf16[16]"];
	"broadcast.202" [label="broadcast.202 \n bf16[16,16]"];
	"p4.30" [label="p4.30 \n bf16[16,16]"];
	"multiply.40" [label="multiply.40 \n bf16[16,16]"];
	"convert.24" [label="convert.24 \n f32[16,16]"];
	"reduce.18" [label="reduce.18 \n f32[16]"];
	"convert.9" [label="convert.9 \n bf16[16]"];
	"p3.22" [label="p3.22 \n bf16[16]"];
	"add.14" [label="add.14 \n bf16[16]"];
	"tanh.0" [label="tanh.0 \n bf16[16]"];
	"broadcast.204" [label="broadcast.204 \n bf16[2,16]"];
	"p2.13" [label="p2.13 \n bf16[2,16]"];
	"multiply.41" [label="multiply.41 \n bf16[2,16]"];
	"convert.25" [label="convert.25 \n f32[2,16]"];
	"reduce.19" [label="reduce.19 \n f32[2]"];
	"convert.11" [label="convert.11 \n bf16[2]"];
	"p1.5" [label="p1.5 \n bf16[2]"];
	"add.15" [label="add.15 \n bf16[2]"];
	"reshape.440" [label="reshape.440 \n bf16[1,2]"];
	"reduce.6" [label="reduce.6 \n bf16[1]"];
	"reshape.136" [label="reshape.136 \n bf16[] reshape(bf16[1]"];
	"broadcast.17" [label="broadcast.17 \n bf16[1,2]"];
	"subtract.2" [label="subtract.2 \n bf16[1,2]"];
	"exponential.2" [label="exponential.2 \n bf16[1,2]"];
	"reduce.7" [label="reduce.7 \n bf16[1]"];
	"log.1" [label="log.1 \n bf16[1]"];
	"reshape.137" [label="reshape.137 \n bf16[] reshape(bf16[1]"];
	"broadcast.18" [label="broadcast.18 \n bf16[1,2]"];
	"subtract.3" [label="subtract.3 \n bf16[1,2]"];
	"reshape.140" [label="reshape.140 \n s64[] reshape(s64[1]"];
	"broadcast.20" [label="broadcast.20 \n s64[1,2]"];
	"iota.2" [label="iota.2 \n s64[1,2]"];
	"compare.3" [label="compare.3 \n pred[1,2]"];
	"broadcast.22" [label="broadcast.22 \n bf16[1,2]"];
	"broadcast.23" [label="broadcast.23 \n bf16[1,2]"];
	"select.2" [label="select.2 \n bf16[1,2]"];
	"multiply.7" [label="multiply.7 \n bf16[1,2]"];
	"reduce.8" [label="reduce.8 \n bf16[1]"];
	"constant.70" [label="constant.70 \n bf16[1]"];
	"select.7" [label="select.7 \n bf16[1]"];
	"convert.1" [label="convert.1 \n bf16[1]"];
	"divide.9" [label="divide.9 \n bf16[1]"];
	"negate.8" [label="negate.8 \n bf16[1]"];
	"reshape.481" [label="reshape.481 \n bf16[] reshape(bf16[1]"];
	"add.871" [label="add.871 \n bf16[] add(bf16[] %negate.0, bf16[] %reshape.481), metadata="];
	"convert.70" [label="convert.70 \n f32[] convert(bf16[] %add.871), metadata="];
	"reshape.621" [label="reshape.621 \n f32[1]"];
	"add.877" [label="add.877 \n f32[1]"];
	"exponential.3" [label="exponential.3 \n bf16[1,2]"];
	"constant.78" [label="constant.78 \n bf16[1]"];
	"divide.10" [label="divide.10 \n bf16[1]"];
	"constant.71" [label="constant.71 \n bf16[1]"];
	"select.8" [label="select.8 \n bf16[1]"];
	"reshape.150" [label="reshape.150 \n bf16[] reshape(bf16[1]"];
	"broadcast.26" [label="broadcast.26 \n bf16[1,2]"];
	"multiply.10" [label="multiply.10 \n bf16[1,2]"];
	"reshape.153" [label="reshape.153 \n s64[] reshape(s64[1]"];
	"broadcast.28" [label="broadcast.28 \n s64[1,2]"];
	"iota.3" [label="iota.3 \n s64[1,2]"];
	"compare.5" [label="compare.5 \n pred[1,2]"];
	"negate.9" [label="negate.9 \n bf16[1]"];
	"reshape.483" [label="reshape.483 \n bf16[] reshape(bf16[1]"];
	"broadcast.30" [label="broadcast.30 \n bf16[1,2]"];
	"broadcast.31" [label="broadcast.31 \n bf16[1,2]"];
	"select.3" [label="select.3 \n bf16[1,2]"];
	"add.1" [label="add.1 \n bf16[1,2]"];
	"reshape.922" [label="reshape.922 \n bf16[2]"];
	"reshape.164" [label="reshape.164 \n bf16[2]"];
	"broadcast.147" [label="broadcast.147 \n bf16[2,16]"];
	"broadcast.148" [label="broadcast.148 \n bf16[2,16]"];
	"multiply.30" [label="multiply.30 \n bf16[2,16]"];
	"exponential.1" [label="exponential.1 \n bf16[128,30522]"];
	"constant.880" [label="constant.880 \n bf16[] constant(1), metadata="];
	"reduce.5" [label="reduce.5 \n bf16[] reduce(bf16[128]"];
	"broadcast.9" [label="broadcast.9 \n bf16[128]"];
	"broadcast.78" [label="broadcast.78 \n bf16[128]"];
	"select.9" [label="select.9 \n bf16[128]"];
	"broadcast.10" [label="broadcast.10 \n bf16[128,30522]"];
	"multiply.5" [label="multiply.5 \n bf16[128,30522]"];
	"reshape.4" [label="reshape.4 \n s64[128]"];
	"broadcast.12" [label="broadcast.12 \n s64[128,30522]"];
	"iota.7" [label="iota.7 \n s64[128,30522]"];
	"compare.2" [label="compare.2 \n pred[128,30522]"];
	"broadcast.15" [label="broadcast.15 \n bf16[128,30522]"];
	"broadcast.16" [label="broadcast.16 \n bf16[128,30522]"];
	"select.1" [label="select.1 \n bf16[128,30522]"];
	"add.0" [label="add.0 \n bf16[128,30522]"];
	"constant.974" [label="constant.974 \n bf16[] constant(0), metadata="];
	"reduce.980" [label="reduce.980 \n bf16[30522]"];
	"reshape.1310" [label="reshape.1310 \n bf16[128,16]"];
	"transpose.1311" [label="transpose.1311 \n bf16[16,128]"];
	"dot.4" [label="dot.4 \n bf16[30522,16]"];
	"constant.1290" [label="constant.1290 \n bf16[] constant(0), metadata="];
	"broadcast.1294" [label="broadcast.1294 \n bf16[30522,16]"];
	"reshape.1269" [label="reshape.1269 \n s64[128]"];
	"constant.1284" [label="constant.1284 \n s64[] constant(0), metadata="];
	"broadcast.1285" [label="broadcast.1285 \n s64[128]"];
	"compare.1286" [label="compare.1286 \n pred[128]"];
	"p41.1278" [label="p41.1278 \n s64[] parameter(41), frontend_attributes="];
	"broadcast.1282" [label="broadcast.1282 \n s64[128]"];
	"add.1283" [label="add.1283 \n s64[128]"];
	"select.1287" [label="select.1287 \n s64[128]"];
	"reshape.1288" [label="reshape.1288 \n s64[128,1]"];
	"convert.1270" [label="convert.1270 \n f32[128]"];
	"constant.1268" [label="constant.1268 \n f32[] constant(0), metadata="];
	"broadcast.1271" [label="broadcast.1271 \n f32[128]"];
	"compare.1272" [label="compare.1272 \n pred[128]"];
	"broadcast.1276" [label="broadcast.1276 \n pred[128,16]"];
	"constant.1000" [label="constant.1000 \n bf16[] constant(1), metadata="];
	"broadcast.1004" [label="broadcast.1004 \n bf16[128]"];
	"constant.234" [label="constant.234 \n bf16[] constant(1.002e-12), metadata="];
	"broadcast.235" [label="broadcast.235 \n bf16[128]"];
	"add.236" [label="add.236 \n bf16[128]"];
	"multiply.1260" [label="multiply.1260 \n bf16[128]"];
	"broadcast.79" [label="broadcast.79 \n bf16[128]"];
	"add.8" [label="add.8 \n bf16[128]"];
	"constant.1020" [label="constant.1020 \n bf16[] constant(1), metadata="];
	"broadcast.1024" [label="broadcast.1024 \n bf16[128]"];
	"constant.464" [label="constant.464 \n bf16[] constant(1.002e-12), metadata="];
	"broadcast.465" [label="broadcast.465 \n bf16[128]"];
	"add.466" [label="add.466 \n bf16[128]"];
	"sqrt.1" [label="sqrt.1 \n bf16[128]"];
	"multiply.1181" [label="multiply.1181 \n bf16[128]"];
	"broadcast.80" [label="broadcast.80 \n bf16[128]"];
	"add.9" [label="add.9 \n bf16[128]"];
	"constant.1040" [label="constant.1040 \n bf16[] constant(1), metadata="];
	"broadcast.1044" [label="broadcast.1044 \n bf16[128]"];
	"constant.594" [label="constant.594 \n bf16[] constant(1.002e-12), metadata="];
	"broadcast.595" [label="broadcast.595 \n bf16[128]"];
	"add.596" [label="add.596 \n bf16[128]"];
	"sqrt.2" [label="sqrt.2 \n bf16[128]"];
	"multiply.1149" [label="multiply.1149 \n bf16[128]"];
	"broadcast.81" [label="broadcast.81 \n bf16[128]"];
	"add.10" [label="add.10 \n bf16[128]"];
	"constant.1099" [label="constant.1099 \n bf16[] constant(1), metadata="];
	"broadcast.1103" [label="broadcast.1103 \n bf16[128]"];
	"constant.781" [label="constant.781 \n bf16[] constant(1.002e-12), metadata="];
	"broadcast.782" [label="broadcast.782 \n bf16[128]"];
	"add.783" [label="add.783 \n bf16[128]"];
	"sqrt.3" [label="sqrt.3 \n bf16[128]"];
	"multiply.1122" [label="multiply.1122 \n bf16[128]"];
	"broadcast.82" [label="broadcast.82 \n bf16[128]"];
	"add.11" [label="add.11 \n bf16[128]"];
	"dot.1114" [label="dot.1114 \n bf16[128,16]"];
	"reshape.1115" [label="reshape.1115 \n bf16[1,128,16]"];
	"broadcast.1116" [label="broadcast.1116 \n bf16[1,128,16]"];
	"multiply.1117" [label="multiply.1117 \n bf16[1,128,16]"];
	"multiply.6" [label="multiply.6 \n bf16[1,128,16]"];
	"reshape.1139" [label="reshape.1139 \n bf16[128,16]"];
	"dot.1140" [label="dot.1140 \n bf16[128,16]"];
	"reshape.1141" [label="reshape.1141 \n bf16[1,128,16]"];
	"reshape.201" [label="reshape.201 \n bf16[2]"];
	"broadcast.196" [label="broadcast.196 \n bf16[2,16]"];
	"multiply.37" [label="multiply.37 \n bf16[2,16]"];
	"convert.20" [label="convert.20 \n f32[2,16]"];
	"reduce.20" [label="reduce.20 \n f32[16]"];
	"convert.13" [label="convert.13 \n bf16[16]"];
	"constant.1070" [label="constant.1070 \n bf16[] constant(1), metadata="];
	"broadcast.206" [label="broadcast.206 \n bf16[16]"];
	"multiply.42" [label="multiply.42 \n bf16[16]"];
	"subtract.5" [label="subtract.5 \n bf16[16]"];
	"multiply.43" [label="multiply.43 \n bf16[16]"];
	"broadcast.197" [label="broadcast.197 \n bf16[16,16]"];
	"multiply.38" [label="multiply.38 \n bf16[16,16]"];
	"convert.21" [label="convert.21 \n f32[16,16]"];
	"reduce.21" [label="reduce.21 \n f32[16]"];
	"convert.15" [label="convert.15 \n bf16[16]"];
	"reshape.1081" [label="reshape.1081 \n bf16[1,1,16]"];
	"add.1142" [label="add.1142 \n bf16[1,128,16]"];
	"broadcast.1143" [label="broadcast.1143 \n bf16[1,128,16]"];
	"multiply.1144" [label="multiply.1144 \n bf16[1,128,16]"];
	"multiply.1156" [label="multiply.1156 \n bf16[1,128,16]"];
	"reshape.1157" [label="reshape.1157 \n bf16[128,16]"];
	"dot.1158" [label="dot.1158 \n bf16[128,4096]"];
	"reshape.1159" [label="reshape.1159 \n bf16[1,128,4096]"];
	"multiply.11" [label="multiply.11 \n bf16[1,128,4096]"];
	"reshape.1170" [label="reshape.1170 \n bf16[128,4096]"];
	"dot.1171" [label="dot.1171 \n bf16[128,16]"];
	"reshape.1172" [label="reshape.1172 \n bf16[1,128,16]"];
	"add.1174" [label="add.1174 \n bf16[1,128,16]"];
	"broadcast.1175" [label="broadcast.1175 \n bf16[1,128,16]"];
	"multiply.1176" [label="multiply.1176 \n bf16[1,128,16]"];
	"reshape.1240" [label="reshape.1240 \n bf16[2,128,128]"];
	"transpose.1241" [label="transpose.1241 \n bf16[2,128,128]"];
	"multiply.1188" [label="multiply.1188 \n bf16[1,128,16]"];
	"reshape.1189" [label="reshape.1189 \n bf16[128,16]"];
	"dot.1190" [label="dot.1190 \n bf16[128,16]"];
	"reshape.1192" [label="reshape.1192 \n bf16[1,128,2,8]"];
	"transpose.1193" [label="transpose.1193 \n bf16[1,2,128,8]"];
	"reshape.1194" [label="reshape.1194 \n bf16[2,128,8]"];
	"dot.1242" [label="dot.1242 \n bf16[2,128,8]"];
	"reshape.1243" [label="reshape.1243 \n bf16[1,2,128,8]"];
	"transpose.1244" [label="transpose.1244 \n bf16[1,128,2,8]"];
	"reshape.1246" [label="reshape.1246 \n bf16[128,16]"];
	"dot.1247" [label="dot.1247 \n bf16[128,16]"];
	"reshape.1248" [label="reshape.1248 \n bf16[1,128,16]"];
	"add.1250" [label="add.1250 \n bf16[1,128,16]"];
	"reshape.1224" [label="reshape.1224 \n bf16[2,128,8]"];
	"transpose.1225" [label="transpose.1225 \n bf16[2,8,128]"];
	"reshape.1018" [label="reshape.1018 \n bf16[2,128,8]"];
	"transpose.1019" [label="transpose.1019 \n bf16[2,8,128]"];
	"dot.1195" [label="dot.1195 \n bf16[2,128,128]"];
	"reshape.1196" [label="reshape.1196 \n bf16[1,2,128,128]"];
	"multiply.1197" [label="multiply.1197 \n bf16[1,2,128,128]"];
	"multiply.1198" [label="multiply.1198 \n bf16[1,2,128,128]"];
	"constant.1199" [label="constant.1199 \n bf16[] constant(0), metadata="];
	"reduce.1204" [label="reduce.1204 \n bf16[1,2,128]"];
	"reshape.234" [label="reshape.234 \n bf16[2,128]"];
	"broadcast.1205" [label="broadcast.1205 \n bf16[1,2,128,128]"];
	"subtract.1206" [label="subtract.1206 \n bf16[1,2,128,128]"];
	"multiply.1207" [label="multiply.1207 \n bf16[1,2,128,128]"];
	"broadcast.1208" [label="broadcast.1208 \n bf16[1,2,128,128]"];
	"divide.1209" [label="divide.1209 \n bf16[1,2,128,128]"];
	"reshape.1210" [label="reshape.1210 \n bf16[2,128,128]"];
	"dot.1226" [label="dot.1226 \n bf16[2,8,128]"];
	"reshape.1227" [label="reshape.1227 \n bf16[1,2,8,128]"];
	"transpose.1229" [label="transpose.1229 \n bf16[1,128,2,8]"];
	"reshape.1231" [label="reshape.1231 \n bf16[128,16]"];
	"dot.1232" [label="dot.1232 \n bf16[128,16]"];
	"reshape.1233" [label="reshape.1233 \n bf16[1,128,16]"];
	"add.1251" [label="add.1251 \n bf16[1,128,16]"];
	"reshape.1016" [label="reshape.1016 \n bf16[2,8,128]"];
	"transpose.1017" [label="transpose.1017 \n bf16[2,128,8]"];
	"dot.1211" [label="dot.1211 \n bf16[2,128,8]"];
	"reshape.1212" [label="reshape.1212 \n bf16[1,2,128,8]"];
	"transpose.1213" [label="transpose.1213 \n bf16[1,128,2,8]"];
	"reshape.1215" [label="reshape.1215 \n bf16[128,16]"];
	"dot.1216" [label="dot.1216 \n bf16[128,16]"];
	"reshape.1217" [label="reshape.1217 \n bf16[1,128,16]"];
	"add.1252" [label="add.1252 \n bf16[1,128,16]"];
	"multiply.1253" [label="multiply.1253 \n bf16[1,128,16]"];
	"broadcast.1254" [label="broadcast.1254 \n bf16[1,128,16]"];
	"multiply.1255" [label="multiply.1255 \n bf16[1,128,16]"];
	"reshape.1267" [label="reshape.1267 \n bf16[128,16]"];
	"constant.995" [label="constant.995 \n bf16[] constant(0), metadata="];
	"broadcast.999" [label="broadcast.999 \n bf16[128,16]"];
	"select.1277" [label="select.1277 \n bf16[128,16]"];
	"scatter.1300" [label="scatter.1300 \n bf16[30522,16]"];
	"add.1321" [label="add.1321 \n bf16[30522,16]"];
	"constant.1322" [label="constant.1322 \n bf16[] constant(0), metadata="];
	"reduce.1328" [label="reduce.1328 \n bf16[16]"];
	"multiply.1344" [label="multiply.1344 \n bf16[1,128,16]"];
	"constant.1345" [label="constant.1345 \n bf16[] constant(0), metadata="];
	"reduce.1351" [label="reduce.1351 \n bf16[16]"];
	"constant.1361" [label="constant.1361 \n bf16[] constant(0), metadata="];
	"reduce.1367" [label="reduce.1367 \n bf16[16]"];
	"reshape.1377" [label="reshape.1377 \n bf16[128,16]"];
	"transpose.1378" [label="transpose.1378 \n bf16[16,128]"];
	"dot.7" [label="dot.7 \n bf16[16,16]"];
	"broadcast.183" [label="broadcast.183 \n bf16[16,16]"];
	"slice.1405" [label="slice.1405 \n bf16[1,1,16]"];
	"reshape.260" [label="reshape.260 \n bf16[16]"];
	"broadcast.184" [label="broadcast.184 \n bf16[16,16]"];
	"multiply.34" [label="multiply.34 \n bf16[16,16]"];
	"constant.1417" [label="constant.1417 \n bf16[] constant(0), metadata="];
	"reduce.1423" [label="reduce.1423 \n bf16[16]"];
	"multiply.1439" [label="multiply.1439 \n bf16[1,128,16]"];
	"constant.1440" [label="constant.1440 \n bf16[] constant(0), metadata="];
	"reduce.1446" [label="reduce.1446 \n bf16[16]"];
	"constant.1456" [label="constant.1456 \n bf16[] constant(0), metadata="];
	"reduce.1462" [label="reduce.1462 \n bf16[16]"];
	"reshape.1472" [label="reshape.1472 \n bf16[128,4096]"];
	"transpose.1473" [label="transpose.1473 \n bf16[4096,128]"];
	"dot.10" [label="dot.10 \n bf16[16,4096]"];
	"constant.1483" [label="constant.1483 \n bf16[] constant(0), metadata="];
	"reduce.1489" [label="reduce.1489 \n bf16[4096]"];
	"reshape.1499" [label="reshape.1499 \n bf16[128,16]"];
	"transpose.1500" [label="transpose.1500 \n bf16[16,128]"];
	"dot.11" [label="dot.11 \n bf16[4096,16]"];
	"constant.1510" [label="constant.1510 \n bf16[] constant(0), metadata="];
	"reduce.1516" [label="reduce.1516 \n bf16[16]"];
	"multiply.1532" [label="multiply.1532 \n bf16[1,128,16]"];
	"constant.1533" [label="constant.1533 \n bf16[] constant(0), metadata="];
	"reduce.1539" [label="reduce.1539 \n bf16[16]"];
	"constant.1549" [label="constant.1549 \n bf16[] constant(0), metadata="];
	"reduce.1555" [label="reduce.1555 \n bf16[16]"];
	"reshape.1562" [label="reshape.1562 \n bf16[128,16]"];
	"transpose.1563" [label="transpose.1563 \n bf16[16,128]"];
	"reshape.1558" [label="reshape.1558 \n bf16[1,2,128,8]"];
	"transpose.1559" [label="transpose.1559 \n bf16[1,128,2,8]"];
	"reshape.1561" [label="reshape.1561 \n bf16[128,16]"];
	"dot.1564" [label="dot.1564 \n bf16[16,16]"];
	"constant.1568" [label="constant.1568 \n bf16[] constant(0), metadata="];
	"reduce.15" [label="reduce.15 \n bf16[2,8]"];
	"reshape.1576" [label="reshape.1576 \n bf16[16]"];
	"reshape.1578" [label="reshape.1578 \n bf16[1,2,128,8]"];
	"transpose.1579" [label="transpose.1579 \n bf16[1,128,2,8]"];
	"reshape.1581" [label="reshape.1581 \n bf16[128,16]"];
	"transpose.1582" [label="transpose.1582 \n bf16[16,128]"];
	"reshape.1577" [label="reshape.1577 \n bf16[128,16]"];
	"dot.1583" [label="dot.1583 \n bf16[16,16]"];
	"constant.1588" [label="constant.1588 \n bf16[] constant(0), metadata="];
	"reduce.16" [label="reduce.16 \n bf16[2,8]"];
	"reshape.1596" [label="reshape.1596 \n bf16[16]"];
	"reshape.1598" [label="reshape.1598 \n bf16[1,2,8,128]"];
	"transpose.1600" [label="transpose.1600 \n bf16[1,128,2,8]"];
	"reshape.1602" [label="reshape.1602 \n bf16[128,16]"];
	"transpose.1603" [label="transpose.1603 \n bf16[16,128]"];
	"reshape.1597" [label="reshape.1597 \n bf16[128,16]"];
	"dot.1604" [label="dot.1604 \n bf16[16,16]"];
	"constant.1608" [label="constant.1608 \n bf16[] constant(0), metadata="];
	"reduce.17" [label="reduce.17 \n bf16[2,8]"];
	"reshape.1616" [label="reshape.1616 \n bf16[16]"];
	"reshape.1618" [label="reshape.1618 \n bf16[1,2,128,8]"];
	"transpose.1619" [label="transpose.1619 \n bf16[1,128,2,8]"];
	"reshape.1621" [label="reshape.1621 \n bf16[128,16]"];
	"transpose.1622" [label="transpose.1622 \n bf16[16,128]"];
	"reshape.1617" [label="reshape.1617 \n bf16[128,16]"];
	"dot.1623" [label="dot.1623 \n bf16[16,16]"];
	"constant.1624" [label="constant.1624 \n bf16[] constant(0), metadata="];
	"reduce.1630" [label="reduce.1630 \n bf16[16]"];
	"multiply.1646" [label="multiply.1646 \n bf16[1,128,16]"];
	"constant.1647" [label="constant.1647 \n bf16[] constant(0), metadata="];
	"reduce.1653" [label="reduce.1653 \n bf16[16]"];
	"broadcast.32" [label="broadcast.32 \n bf16[512,16]"];
	"slice.1664" [label="slice.1664 \n s64[1,128]"];
	"reshape.10" [label="reshape.10 \n s64[128]"];
	"broadcast.33" [label="broadcast.33 \n s64[128]"];
	"compare.6" [label="compare.6 \n pred[128]"];
	"broadcast.34" [label="broadcast.34 \n s64[128]"];
	"add.2" [label="add.2 \n s64[128]"];
	"select.4" [label="select.4 \n s64[128]"];
	"reshape.11" [label="reshape.11 \n s64[128,1]"];
	"reshape.12" [label="reshape.12 \n bf16[128,16]"];
	"scatter.0" [label="scatter.0 \n bf16[512,16]"];
	"broadcast.35" [label="broadcast.35 \n bf16[2,16]"];
	"reshape.13" [label="reshape.13 \n s64[128]"];
	"broadcast.36" [label="broadcast.36 \n s64[128]"];
	"compare.7" [label="compare.7 \n pred[128]"];
	"broadcast.37" [label="broadcast.37 \n s64[128]"];
	"add.3" [label="add.3 \n s64[128]"];
	"select.5" [label="select.5 \n s64[128]"];
	"reshape.14" [label="reshape.14 \n s64[128,1]"];
	"reshape.15" [label="reshape.15 \n bf16[128,16]"];
	"scatter.1" [label="scatter.1 \n bf16[2,16]"];
	"tuple.1723" [label="tuple.1723 \n (f32[1]"]; 
 	"constant.7" -> "broadcast.188";
	"p34.687" -> "compare.8";
	"broadcast.188" -> "compare.8";
	"compare.8" -> "reshape.443";
	"p39.785" -> "custom-call.72";
	"custom-call.72" -> "broadcast.798";
	"p33.598" -> "custom-call.55";
	"custom-call.55" -> "broadcast.611";
	"p28.468" -> "custom-call.56";
	"custom-call.56" -> "broadcast.481";
	"p16.238" -> "custom-call.57";
	"custom-call.57" -> "broadcast.251";
	"p15.217" -> "custom-call.58";
	"p14.215" -> "convert.7";
	"convert.7" -> "reshape.303";
	"custom-call.58" -> "gather.226";
	"reshape.303" -> "gather.226";
	"p13.203" -> "custom-call.59";
	"p12.201" -> "convert.6";
	"convert.6" -> "reshape.302";
	"custom-call.59" -> "gather.212";
	"reshape.302" -> "gather.212";
	"gather.226" -> "add.13";
	"gather.212" -> "add.13";
	"p11.184" -> "custom-call.60";
	"p10.180" -> "convert.5";
	"convert.5" -> "slice.0";
	"slice.0" -> "reshape.301";
	"custom-call.60" -> "gather.193";
	"reshape.301" -> "gather.193";
	"add.13" -> "add.16";
	"gather.193" -> "add.16";
	"add.16" -> "reshape.474";
	"constant.170" -> "broadcast.174";
	"constant.165" -> "broadcast.169";
	"reshape.474" -> "batch-norm-training.230";
	"broadcast.174" -> "batch-norm-training.230";
	"broadcast.169" -> "batch-norm-training.230";
	"batch-norm-training.230" -> "get-tuple-element.231";
	"p9.147" -> "custom-call.61";
	"custom-call.61" -> "broadcast.247";
	"get-tuple-element.231" -> "multiply.250";
	"broadcast.247" -> "multiply.250";
	"broadcast.251" -> "add.252";
	"multiply.250" -> "add.252";
	"constant.109" -> "multiply.110";
	"p8.108" -> "multiply.110";
	"multiply.110" -> "add.112";
	"constant.111" -> "add.112";
	"add.112" -> "convert.119";
	"convert.119" -> "reshape.123";
	"reshape.123" -> "concatenate.125";
	"constant.41" -> "concatenate.125";
	"concatenate.125" -> "rng-bit-generator.126";
	"rng-bit-generator.126" -> "get-tuple-element.127";
	"constant.129" -> "broadcast.130";
	"get-tuple-element.127" -> "shift-right-logical.131";
	"broadcast.130" -> "shift-right-logical.131";
	"shift-right-logical.131" -> "convert.132";
	"constant.45" -> "broadcast.40";
	"convert.132" -> "multiply.138";
	"broadcast.40" -> "multiply.138";
	"multiply.138" -> "convert.141";
	"p7.107" -> "broadcast.116";
	"convert.141" -> "compare.142";
	"broadcast.116" -> "compare.142";
	"constant.23" -> "divide.4";
	"p7.107" -> "divide.4";
	"divide.4" -> "broadcast.42";
	"constant.34" -> "broadcast.105";
	"compare.142" -> "select.13";
	"broadcast.42" -> "select.13";
	"broadcast.105" -> "select.13";
	"add.252" -> "multiply.254";
	"select.13" -> "multiply.254";
	"multiply.254" -> "reshape.412";
	"p27.410" -> "transpose.411";
	"reshape.412" -> "dot.413";
	"transpose.411" -> "dot.413";
	"dot.413" -> "reshape.414";
	"p26.408" -> "broadcast.415";
	"reshape.414" -> "add.416";
	"broadcast.415" -> "add.416";
	"add.416" -> "reshape.417";
	"reshape.417" -> "transpose.418";
	"transpose.418" -> "reshape.420";
	"multiply.254" -> "reshape.393";
	"p25.391" -> "transpose.392";
	"reshape.393" -> "dot.394";
	"transpose.392" -> "dot.394";
	"dot.394" -> "reshape.395";
	"p24.389" -> "broadcast.396";
	"reshape.395" -> "add.397";
	"broadcast.396" -> "add.397";
	"add.397" -> "reshape.398";
	"reshape.398" -> "transpose.400";
	"transpose.400" -> "reshape.402";
	"reshape.420" -> "dot.421";
	"reshape.402" -> "dot.421";
	"p23.383" -> "broadcast.190";
	"dot.421" -> "divide.8";
	"broadcast.190" -> "divide.8";
	"divide.8" -> "reshape.434";
	"constant.374" -> "broadcast.192";
	"p22.362" -> "convert.3";
	"broadcast.192" -> "subtract.4";
	"convert.3" -> "subtract.4";
	"p21.361" -> "broadcast.199";
	"subtract.4" -> "multiply.39";
	"broadcast.199" -> "multiply.39";
	"multiply.39" -> "reshape.50";
	"reshape.50" -> "broadcast.427";
	"reshape.434" -> "add.428";
	"broadcast.427" -> "add.428";
	"add.428" -> "reduce.434";
	"constant.429" -> "reduce.434";
	"MaxComputation.430" -> "reduce.434";
	"reduce.434" -> "reshape.52";
	"reshape.52" -> "broadcast.435";
	"add.428" -> "subtract.436";
	"broadcast.435" -> "subtract.436";
	"subtract.436" -> "exponential.437";
	"exponential.437" -> "reduce.443";
	"constant.438" -> "reduce.443";
	"AddComputation.439" -> "reduce.443";
	"reduce.443" -> "reshape.53";
	"reshape.53" -> "broadcast.444";
	"exponential.437" -> "divide.445";
	"broadcast.444" -> "divide.445";
	"constant.255" -> "multiply.256";
	"add.112" -> "multiply.256";
	"multiply.256" -> "add.258";
	"constant.257" -> "add.258";
	"add.258" -> "convert.329";
	"convert.329" -> "reshape.333";
	"reshape.333" -> "concatenate.335";
	"constant.46" -> "concatenate.335";
	"concatenate.335" -> "rng-bit-generator.336";
	"rng-bit-generator.336" -> "get-tuple-element.337";
	"constant.339" -> "broadcast.340";
	"get-tuple-element.337" -> "shift-right-logical.341";
	"broadcast.340" -> "shift-right-logical.341";
	"shift-right-logical.341" -> "convert.342";
	"constant.51" -> "broadcast.49";
	"convert.342" -> "multiply.348";
	"broadcast.49" -> "multiply.348";
	"multiply.348" -> "convert.351";
	"p7.107" -> "broadcast.326";
	"convert.351" -> "compare.352";
	"broadcast.326" -> "compare.352";
	"constant.24" -> "divide.5";
	"p7.107" -> "divide.5";
	"divide.5" -> "broadcast.53";
	"constant.33" -> "broadcast.98";
	"compare.352" -> "select.12";
	"broadcast.53" -> "select.12";
	"broadcast.98" -> "select.12";
	"divide.445" -> "multiply.446";
	"select.12" -> "multiply.446";
	"multiply.446" -> "reshape.448";
	"multiply.254" -> "reshape.314";
	"p20.312" -> "transpose.313";
	"reshape.314" -> "dot.315";
	"transpose.313" -> "dot.315";
	"dot.315" -> "reshape.316";
	"p19.310" -> "broadcast.317";
	"reshape.316" -> "add.318";
	"broadcast.317" -> "add.318";
	"add.318" -> "reshape.319";
	"reshape.319" -> "transpose.320";
	"transpose.320" -> "reshape.322";
	"reshape.448" -> "dot.449";
	"reshape.322" -> "dot.449";
	"dot.449" -> "reshape.450";
	"reshape.450" -> "transpose.451";
	"transpose.451" -> "reshape.453";
	"p18.303" -> "transpose.304";
	"reshape.453" -> "dot.454";
	"transpose.304" -> "dot.454";
	"dot.454" -> "reshape.455";
	"p17.301" -> "broadcast.456";
	"reshape.455" -> "add.457";
	"broadcast.456" -> "add.457";
	"constant.259" -> "multiply.260";
	"add.258" -> "multiply.260";
	"multiply.260" -> "add.262";
	"constant.261" -> "add.262";
	"add.262" -> "convert.269";
	"convert.269" -> "reshape.273";
	"reshape.273" -> "concatenate.275";
	"constant.52" -> "concatenate.275";
	"concatenate.275" -> "rng-bit-generator.276";
	"rng-bit-generator.276" -> "get-tuple-element.277";
	"constant.279" -> "broadcast.280";
	"get-tuple-element.277" -> "shift-right-logical.281";
	"broadcast.280" -> "shift-right-logical.281";
	"shift-right-logical.281" -> "convert.282";
	"constant.57" -> "broadcast.54";
	"convert.282" -> "multiply.288";
	"broadcast.54" -> "multiply.288";
	"multiply.288" -> "convert.291";
	"p7.107" -> "broadcast.266";
	"convert.291" -> "compare.292";
	"broadcast.266" -> "compare.292";
	"constant.25" -> "divide.6";
	"p7.107" -> "divide.6";
	"divide.6" -> "broadcast.58";
	"constant.32" -> "broadcast.95";
	"compare.292" -> "select.11";
	"broadcast.58" -> "select.11";
	"broadcast.95" -> "select.11";
	"add.457" -> "multiply.458";
	"select.11" -> "multiply.458";
	"multiply.458" -> "add.459";
	"multiply.254" -> "add.459";
	"constant.97" -> "broadcast.101";
	"constant.92" -> "broadcast.96";
	"add.459" -> "batch-norm-training.460";
	"broadcast.101" -> "batch-norm-training.460";
	"broadcast.96" -> "batch-norm-training.460";
	"batch-norm-training.460" -> "get-tuple-element.461";
	"p6.74" -> "custom-call.62";
	"custom-call.62" -> "broadcast.477";
	"get-tuple-element.461" -> "multiply.480";
	"broadcast.477" -> "multiply.480";
	"broadcast.481" -> "add.482";
	"multiply.480" -> "add.482";
	"add.482" -> "reshape.567";
	"p32.558" -> "custom-call.63";
	"custom-call.63" -> "transpose.566";
	"reshape.567" -> "dot.568";
	"transpose.566" -> "dot.568";
	"dot.568" -> "reshape.569";
	"p31.549" -> "custom-call.64";
	"custom-call.64" -> "broadcast.570";
	"reshape.569" -> "add.571";
	"broadcast.570" -> "add.571";
	"add.571" -> "custom-call.65";
	"custom-call.65" -> "reshape.581";
	"p30.535" -> "custom-call.66";
	"custom-call.66" -> "transpose.543";
	"reshape.581" -> "dot.582";
	"transpose.543" -> "dot.582";
	"dot.582" -> "reshape.583";
	"p29.526" -> "custom-call.67";
	"custom-call.67" -> "broadcast.584";
	"reshape.583" -> "add.585";
	"broadcast.584" -> "add.585";
	"constant.484" -> "multiply.485";
	"add.262" -> "multiply.485";
	"multiply.485" -> "add.487";
	"constant.486" -> "add.487";
	"add.487" -> "convert.494";
	"convert.494" -> "reshape.498";
	"reshape.498" -> "concatenate.500";
	"constant.60" -> "concatenate.500";
	"concatenate.500" -> "rng-bit-generator.501";
	"rng-bit-generator.501" -> "get-tuple-element.502";
	"constant.504" -> "broadcast.505";
	"get-tuple-element.502" -> "shift-right-logical.506";
	"broadcast.505" -> "shift-right-logical.506";
	"shift-right-logical.506" -> "convert.507";
	"constant.65" -> "broadcast.61";
	"convert.507" -> "multiply.513";
	"broadcast.61" -> "multiply.513";
	"multiply.513" -> "convert.516";
	"p7.107" -> "broadcast.491";
	"convert.516" -> "compare.517";
	"broadcast.491" -> "compare.517";
	"constant.26" -> "divide.7";
	"p7.107" -> "divide.7";
	"divide.7" -> "broadcast.64";
	"constant.31" -> "broadcast.92";
	"compare.517" -> "select.10";
	"broadcast.64" -> "select.10";
	"broadcast.92" -> "select.10";
	"add.585" -> "multiply.588";
	"select.10" -> "multiply.588";
	"multiply.588" -> "add.589";
	"add.482" -> "add.589";
	"constant.63" -> "broadcast.67";
	"constant.58" -> "broadcast.62";
	"add.589" -> "batch-norm-training.590";
	"broadcast.67" -> "batch-norm-training.590";
	"broadcast.62" -> "batch-norm-training.590";
	"batch-norm-training.590" -> "get-tuple-element.591";
	"p5.40" -> "custom-call.68";
	"custom-call.68" -> "broadcast.607";
	"get-tuple-element.591" -> "multiply.610";
	"broadcast.607" -> "multiply.610";
	"broadcast.611" -> "add.612";
	"multiply.610" -> "add.612";
	"add.612" -> "reshape.763";
	"p38.754" -> "custom-call.69";
	"custom-call.69" -> "transpose.762";
	"reshape.763" -> "dot.764";
	"transpose.762" -> "dot.764";
	"dot.764" -> "reshape.765";
	"p37.745" -> "custom-call.70";
	"custom-call.70" -> "broadcast.766";
	"reshape.765" -> "add.767";
	"broadcast.766" -> "add.767";
	"add.767" -> "custom-call.71";
	"constant.735" -> "broadcast.739";
	"constant.730" -> "broadcast.734";
	"custom-call.71" -> "batch-norm-training.777";
	"broadcast.739" -> "batch-norm-training.777";
	"broadcast.734" -> "batch-norm-training.777";
	"batch-norm-training.777" -> "get-tuple-element.778";
	"p36.712" -> "custom-call.73";
	"custom-call.73" -> "broadcast.794";
	"get-tuple-element.778" -> "multiply.797";
	"broadcast.794" -> "multiply.797";
	"broadcast.798" -> "add.799";
	"multiply.797" -> "add.799";
	"add.799" -> "reshape.800";
	"p15.217" -> "custom-call.74";
	"custom-call.74" -> "transpose.710";
	"reshape.800" -> "dot.801";
	"transpose.710" -> "dot.801";
	"dot.801" -> "reshape.802";
	"p35.694" -> "custom-call.75";
	"custom-call.75" -> "broadcast.803";
	"reshape.802" -> "add.804";
	"broadcast.803" -> "add.804";
	"add.804" -> "reshape.807";
	"add.804" -> "reduce.0";
	"constant.0" -> "reduce.0";
	"SimpleCrossEntropyLossForwardMax.808" -> "reduce.0";
	"reduce.0" -> "broadcast.0";
	"reshape.807" -> "subtract.0";
	"broadcast.0" -> "subtract.0";
	"subtract.0" -> "exponential.0";
	"exponential.0" -> "reduce.1";
	"constant.4" -> "reduce.1";
	"SimpleCrossEntropyLossForwardAdd.812" -> "reduce.1";
	"reduce.1" -> "log.0";
	"log.0" -> "broadcast.1";
	"subtract.0" -> "subtract.1";
	"broadcast.1" -> "subtract.1";
	"p34.687" -> "reshape.1";
	"reshape.1" -> "broadcast.3";
	"broadcast.3" -> "compare.0";
	"iota.5" -> "compare.0";
	"constant.5" -> "broadcast.6";
	"constant.6" -> "broadcast.7";
	"compare.0" -> "select.0";
	"broadcast.6" -> "select.0";
	"broadcast.7" -> "select.0";
	"subtract.1" -> "multiply.2";
	"select.0" -> "multiply.2";
	"multiply.2" -> "reduce.2";
	"constant.4" -> "reduce.2";
	"SimpleCrossEntropyLossForwardAdd.816" -> "reduce.2";
	"constant.27" -> "broadcast.68";
	"reshape.443" -> "select.6";
	"reduce.2" -> "select.6";
	"broadcast.68" -> "select.6";
	"select.6" -> "reduce.3";
	"constant.4" -> "reduce.3";
	"SimpleCrossEntropyLossForwardAdd.820" -> "reduce.3";
	"reshape.443" -> "convert.0";
	"convert.0" -> "reduce.4";
	"constant.4" -> "reduce.4";
	"SimpleCrossEntropyLossForwardAdd.824" -> "reduce.4";
	"reduce.3" -> "divide.0";
	"reduce.4" -> "divide.0";
	"divide.0" -> "negate.0";
	"p0.4" -> "compare.4";
	"constant.69" -> "compare.4";
	"add.612" -> "slice.614";
	"slice.614" -> "reshape.130";
	"reshape.130" -> "broadcast.202";
	"p4.30" -> "custom-call.78";
	"broadcast.202" -> "multiply.40";
	"custom-call.78" -> "multiply.40";
	"multiply.40" -> "convert.24";
	"convert.24" -> "reduce.18";
	"constant.35" -> "reduce.18";
	"scalar_add_computation" -> "reduce.18";
	"reduce.18" -> "convert.9";
	"p3.22" -> "custom-call.79";
	"convert.9" -> "add.14";
	"custom-call.79" -> "add.14";
	"add.14" -> "tanh.0";
	"tanh.0" -> "broadcast.204";
	"p2.13" -> "custom-call.80";
	"broadcast.204" -> "multiply.41";
	"custom-call.80" -> "multiply.41";
	"multiply.41" -> "convert.25";
	"convert.25" -> "reduce.19";
	"constant.36" -> "reduce.19";
	"scalar_add_computation" -> "reduce.19";
	"reduce.19" -> "convert.11";
	"p1.5" -> "custom-call.81";
	"convert.11" -> "add.15";
	"custom-call.81" -> "add.15";
	"add.15" -> "reshape.440";
	"reshape.440" -> "reduce.6";
	"constant.10" -> "reduce.6";
	"SimpleCrossEntropyLossForwardMax.625" -> "reduce.6";
	"reduce.6" -> "reshape.136";
	"reshape.136" -> "broadcast.17";
	"reshape.440" -> "subtract.2";
	"broadcast.17" -> "subtract.2";
	"subtract.2" -> "exponential.2";
	"exponential.2" -> "reduce.7";
	"constant.11" -> "reduce.7";
	"SimpleCrossEntropyLossForwardAdd.629" -> "reduce.7";
	"reduce.7" -> "log.1";
	"log.1" -> "reshape.137";
	"reshape.137" -> "broadcast.18";
	"subtract.2" -> "subtract.3";
	"broadcast.18" -> "subtract.3";
	"p0.4" -> "reshape.140";
	"reshape.140" -> "broadcast.20";
	"broadcast.20" -> "compare.3";
	"iota.2" -> "compare.3";
	"constant.12" -> "broadcast.22";
	"constant.13" -> "broadcast.23";
	"compare.3" -> "select.2";
	"broadcast.22" -> "select.2";
	"broadcast.23" -> "select.2";
	"subtract.3" -> "multiply.7";
	"select.2" -> "multiply.7";
	"multiply.7" -> "reduce.8";
	"constant.11" -> "reduce.8";
	"SimpleCrossEntropyLossForwardAdd.633" -> "reduce.8";
	"compare.4" -> "select.7";
	"reduce.8" -> "select.7";
	"constant.70" -> "select.7";
	"compare.4" -> "convert.1";
	"select.7" -> "divide.9";
	"convert.1" -> "divide.9";
	"divide.9" -> "negate.8";
	"negate.8" -> "reshape.481";
	"negate.0" -> "add.871";
	"reshape.481" -> "add.871";
	"add.871" -> "convert.70";
	"convert.70" -> "reshape.621";
	"p40.875" -> "add.877";
	"reshape.621" -> "add.877";
	"subtract.3" -> "exponential.3";
	"constant.78" -> "divide.10";
	"convert.1" -> "divide.10";
	"compare.4" -> "select.8";
	"divide.10" -> "select.8";
	"constant.71" -> "select.8";
	"select.8" -> "reshape.150";
	"reshape.150" -> "broadcast.26";
	"exponential.3" -> "multiply.10";
	"broadcast.26" -> "multiply.10";
	"p0.4" -> "reshape.153";
	"reshape.153" -> "broadcast.28";
	"broadcast.28" -> "compare.5";
	"iota.3" -> "compare.5";
	"divide.10" -> "negate.9";
	"negate.9" -> "reshape.483";
	"reshape.483" -> "broadcast.30";
	"constant.16" -> "broadcast.31";
	"compare.5" -> "select.3";
	"broadcast.30" -> "select.3";
	"broadcast.31" -> "select.3";
	"multiply.10" -> "add.1";
	"select.3" -> "add.1";
	"add.1" -> "reshape.922";
	"reshape.922" -> "custom-call.83";
	"add.1" -> "reshape.164";
	"reshape.164" -> "broadcast.147";
	"tanh.0" -> "broadcast.148";
	"broadcast.147" -> "multiply.30";
	"broadcast.148" -> "multiply.30";
	"multiply.30" -> "custom-call.84";
	"subtract.1" -> "exponential.1";
	"convert.0" -> "reduce.5";
	"constant.8" -> "reduce.5";
	"SimpleCrossEntropyLossBackwardAdd.940" -> "reduce.5";
	"constant.880" -> "divide.1";
	"reduce.5" -> "divide.1";
	"divide.1" -> "broadcast.9";
	"constant.30" -> "broadcast.78";
	"reshape.443" -> "select.9";
	"broadcast.9" -> "select.9";
	"broadcast.78" -> "select.9";
	"select.9" -> "broadcast.10";
	"exponential.1" -> "multiply.5";
	"broadcast.10" -> "multiply.5";
	"p34.687" -> "reshape.4";
	"reshape.4" -> "broadcast.12";
	"broadcast.12" -> "compare.2";
	"iota.7" -> "compare.2";
	"divide.1" -> "negate.1";
	"negate.1" -> "broadcast.15";
	"constant.9" -> "broadcast.16";
	"compare.2" -> "select.1";
	"broadcast.15" -> "select.1";
	"broadcast.16" -> "select.1";
	"multiply.5" -> "add.0";
	"select.1" -> "add.0";
	"add.0" -> "reduce.980";
	"constant.974" -> "reduce.980";
	"AddComputation.976" -> "reduce.980";
	"reduce.980" -> "custom-call.85";
	"add.799" -> "reshape.1310";
	"reshape.1310" -> "transpose.1311";
	"add.0" -> "dot.4";
	"transpose.1311" -> "dot.4";
	"dot.4" -> "custom-call.86";
	"constant.1290" -> "broadcast.1294";
	"p14.215" -> "reshape.1269";
	"constant.1284" -> "broadcast.1285";
	"reshape.1269" -> "compare.1286";
	"broadcast.1285" -> "compare.1286";
	"p41.1278" -> "broadcast.1282";
	"reshape.1269" -> "add.1283";
	"broadcast.1282" -> "add.1283";
	"compare.1286" -> "select.1287";
	"add.1283" -> "select.1287";
	"reshape.1269" -> "select.1287";
	"select.1287" -> "reshape.1288";
	"reshape.1269" -> "convert.1270";
	"constant.1268" -> "broadcast.1271";
	"convert.1270" -> "compare.1272";
	"broadcast.1271" -> "compare.1272";
	"compare.1272" -> "broadcast.1276";
	"constant.1000" -> "broadcast.1004";
	"batch-norm-training.230" -> "get-tuple-element.232";
	"batch-norm-training.230" -> "get-tuple-element.233";
	"constant.234" -> "broadcast.235";
	"get-tuple-element.233" -> "add.236";
	"broadcast.235" -> "add.236";
	"add.236" -> "sqrt";
	"sqrt" -> "multiply.1260";
	"sqrt" -> "multiply.1260";
	"constant.72" -> "broadcast.79";
	"multiply.1260" -> "add.8";
	"broadcast.79" -> "add.8";
	"constant.1020" -> "broadcast.1024";
	"batch-norm-training.460" -> "get-tuple-element.462";
	"batch-norm-training.460" -> "get-tuple-element.463";
	"constant.464" -> "broadcast.465";
	"get-tuple-element.463" -> "add.466";
	"broadcast.465" -> "add.466";
	"add.466" -> "sqrt.1";
	"sqrt.1" -> "multiply.1181";
	"sqrt.1" -> "multiply.1181";
	"constant.74" -> "broadcast.80";
	"multiply.1181" -> "add.9";
	"broadcast.80" -> "add.9";
	"constant.1040" -> "broadcast.1044";
	"batch-norm-training.590" -> "get-tuple-element.592";
	"batch-norm-training.590" -> "get-tuple-element.593";
	"constant.594" -> "broadcast.595";
	"get-tuple-element.593" -> "add.596";
	"broadcast.595" -> "add.596";
	"add.596" -> "sqrt.2";
	"sqrt.2" -> "multiply.1149";
	"sqrt.2" -> "multiply.1149";
	"constant.75" -> "broadcast.81";
	"multiply.1149" -> "add.10";
	"broadcast.81" -> "add.10";
	"constant.1099" -> "broadcast.1103";
	"batch-norm-training.777" -> "get-tuple-element.779";
	"batch-norm-training.777" -> "get-tuple-element.780";
	"constant.781" -> "broadcast.782";
	"get-tuple-element.780" -> "add.783";
	"broadcast.782" -> "add.783";
	"add.783" -> "sqrt.3";
	"sqrt.3" -> "multiply.1122";
	"sqrt.3" -> "multiply.1122";
	"constant.76" -> "broadcast.82";
	"multiply.1122" -> "add.11";
	"broadcast.82" -> "add.11";
	"add.0" -> "dot.1114";
	"custom-call.74" -> "dot.1114";
	"dot.1114" -> "reshape.1115";
	"custom-call.73" -> "broadcast.1116";
	"reshape.1115" -> "multiply.1117";
	"broadcast.1116" -> "multiply.1117";
	"custom-call.71" -> "batch-norm-grad.1125";
	"broadcast.1103" -> "batch-norm-grad.1125";
	"get-tuple-element.779" -> "batch-norm-grad.1125";
	"add.11" -> "batch-norm-grad.1125";
	"multiply.1117" -> "batch-norm-grad.1125";
	"batch-norm-grad.1125" -> "get-tuple-element.1126";
	"add.767" -> "custom-call.76";
	"get-tuple-element.1126" -> "multiply.6";
	"custom-call.76" -> "multiply.6";
	"multiply.6" -> "reshape.1139";
	"reshape.1139" -> "dot.1140";
	"custom-call.69" -> "dot.1140";
	"dot.1140" -> "reshape.1141";
	"add.1" -> "reshape.201";
	"reshape.201" -> "broadcast.196";
	"broadcast.196" -> "multiply.37";
	"custom-call.80" -> "multiply.37";
	"multiply.37" -> "convert.20";
	"convert.20" -> "reduce.20";
	"constant.37" -> "reduce.20";
	"scalar_add_computation" -> "reduce.20";
	"reduce.20" -> "convert.13";
	"constant.1070" -> "broadcast.206";
	"tanh.0" -> "multiply.42";
	"tanh.0" -> "multiply.42";
	"broadcast.206" -> "subtract.5";
	"multiply.42" -> "subtract.5";
	"convert.13" -> "multiply.43";
	"subtract.5" -> "multiply.43";
	"multiply.43" -> "broadcast.197";
	"broadcast.197" -> "multiply.38";
	"custom-call.78" -> "multiply.38";
	"multiply.38" -> "convert.21";
	"convert.21" -> "reduce.21";
	"constant.38" -> "reduce.21";
	"scalar_add_computation" -> "reduce.21";
	"reduce.21" -> "convert.15";
	"convert.15" -> "reshape.1081";
	"reshape.1081" -> "pad";
	"constant.77" -> "pad";
	"reshape.1141" -> "add.1142";
	"pad" -> "add.1142";
	"custom-call.68" -> "broadcast.1143";
	"add.1142" -> "multiply.1144";
	"broadcast.1143" -> "multiply.1144";
	"add.589" -> "batch-norm-grad.1152";
	"broadcast.1044" -> "batch-norm-grad.1152";
	"get-tuple-element.592" -> "batch-norm-grad.1152";
	"add.10" -> "batch-norm-grad.1152";
	"multiply.1144" -> "batch-norm-grad.1152";
	"batch-norm-grad.1152" -> "get-tuple-element.1153";
	"get-tuple-element.1153" -> "multiply.1156";
	"select.10" -> "multiply.1156";
	"multiply.1156" -> "reshape.1157";
	"reshape.1157" -> "dot.1158";
	"custom-call.66" -> "dot.1158";
	"dot.1158" -> "reshape.1159";
	"add.571" -> "custom-call.82";
	"reshape.1159" -> "multiply.11";
	"custom-call.82" -> "multiply.11";
	"multiply.11" -> "reshape.1170";
	"reshape.1170" -> "dot.1171";
	"custom-call.63" -> "dot.1171";
	"dot.1171" -> "reshape.1172";
	"get-tuple-element.1153" -> "add.1174";
	"reshape.1172" -> "add.1174";
	"custom-call.62" -> "broadcast.1175";
	"add.1174" -> "multiply.1176";
	"broadcast.1175" -> "multiply.1176";
	"add.459" -> "batch-norm-grad.1184";
	"broadcast.1024" -> "batch-norm-grad.1184";
	"get-tuple-element.462" -> "batch-norm-grad.1184";
	"add.9" -> "batch-norm-grad.1184";
	"multiply.1176" -> "batch-norm-grad.1184";
	"batch-norm-grad.1184" -> "get-tuple-element.1185";
	"multiply.446" -> "reshape.1240";
	"reshape.1240" -> "transpose.1241";
	"get-tuple-element.1185" -> "multiply.1188";
	"select.11" -> "multiply.1188";
	"multiply.1188" -> "reshape.1189";
	"reshape.1189" -> "dot.1190";
	"p18.303" -> "dot.1190";
	"dot.1190" -> "reshape.1192";
	"reshape.1192" -> "transpose.1193";
	"transpose.1193" -> "reshape.1194";
	"transpose.1241" -> "dot.1242";
	"reshape.1194" -> "dot.1242";
	"dot.1242" -> "reshape.1243";
	"reshape.1243" -> "transpose.1244";
	"transpose.1244" -> "reshape.1246";
	"reshape.1246" -> "dot.1247";
	"p20.312" -> "dot.1247";
	"dot.1247" -> "reshape.1248";
	"get-tuple-element.1185" -> "add.1250";
	"reshape.1248" -> "add.1250";
	"transpose.418" -> "reshape.1224";
	"reshape.1224" -> "transpose.1225";
	"transpose.320" -> "reshape.1018";
	"reshape.1018" -> "transpose.1019";
	"reshape.1194" -> "dot.1195";
	"transpose.1019" -> "dot.1195";
	"dot.1195" -> "reshape.1196";
	"reshape.1196" -> "multiply.1197";
	"select.12" -> "multiply.1197";
	"multiply.1197" -> "multiply.1198";
	"divide.445" -> "multiply.1198";
	"multiply.1198" -> "reduce.1204";
	"constant.1199" -> "reduce.1204";
	"AddComputation.1200" -> "reduce.1204";
	"reduce.1204" -> "reshape.234";
	"reshape.234" -> "broadcast.1205";
	"multiply.1197" -> "subtract.1206";
	"broadcast.1205" -> "subtract.1206";
	"divide.445" -> "multiply.1207";
	"subtract.1206" -> "multiply.1207";
	"p23.383" -> "broadcast.1208";
	"multiply.1207" -> "divide.1209";
	"broadcast.1208" -> "divide.1209";
	"divide.1209" -> "reshape.1210";
	"transpose.1225" -> "dot.1226";
	"reshape.1210" -> "dot.1226";
	"dot.1226" -> "reshape.1227";
	"reshape.1227" -> "transpose.1229";
	"transpose.1229" -> "reshape.1231";
	"reshape.1231" -> "dot.1232";
	"p25.391" -> "dot.1232";
	"dot.1232" -> "reshape.1233";
	"add.1250" -> "add.1251";
	"reshape.1233" -> "add.1251";
	"transpose.400" -> "reshape.1016";
	"reshape.1016" -> "transpose.1017";
	"reshape.1210" -> "dot.1211";
	"transpose.1017" -> "dot.1211";
	"dot.1211" -> "reshape.1212";
	"reshape.1212" -> "transpose.1213";
	"transpose.1213" -> "reshape.1215";
	"reshape.1215" -> "dot.1216";
	"p27.410" -> "dot.1216";
	"dot.1216" -> "reshape.1217";
	"add.1251" -> "add.1252";
	"reshape.1217" -> "add.1252";
	"add.1252" -> "multiply.1253";
	"select.13" -> "multiply.1253";
	"custom-call.61" -> "broadcast.1254";
	"multiply.1253" -> "multiply.1255";
	"broadcast.1254" -> "multiply.1255";
	"reshape.474" -> "batch-norm-grad.1263";
	"broadcast.1004" -> "batch-norm-grad.1263";
	"get-tuple-element.232" -> "batch-norm-grad.1263";
	"add.8" -> "batch-norm-grad.1263";
	"multiply.1255" -> "batch-norm-grad.1263";
	"batch-norm-grad.1263" -> "get-tuple-element.1264";
	"get-tuple-element.1264" -> "reshape.1267";
	"constant.995" -> "broadcast.999";
	"broadcast.1276" -> "select.1277";
	"reshape.1267" -> "select.1277";
	"broadcast.999" -> "select.1277";
	"broadcast.1294" -> "scatter.1300";
	"reshape.1288" -> "scatter.1300";
	"select.1277" -> "scatter.1300";
	"ScatterCombiner.1296" -> "scatter.1300";
	"scatter.1300" -> "custom-call.87";
	"custom-call.86" -> "add.1321";
	"custom-call.87" -> "add.1321";
	"dot.1114" -> "reduce.1328";
	"constant.1322" -> "reduce.1328";
	"AddComputation.1324" -> "reduce.1328";
	"reduce.1328" -> "custom-call.88";
	"reshape.1115" -> "multiply.1344";
	"get-tuple-element.778" -> "multiply.1344";
	"multiply.1344" -> "reduce.1351";
	"constant.1345" -> "reduce.1351";
	"AddComputation.1347" -> "reduce.1351";
	"reduce.1351" -> "custom-call.89";
	"multiply.6" -> "reduce.1367";
	"constant.1361" -> "reduce.1367";
	"AddComputation.1363" -> "reduce.1367";
	"reduce.1367" -> "custom-call.90";
	"add.612" -> "reshape.1377";
	"reshape.1377" -> "transpose.1378";
	"reshape.1139" -> "dot.7";
	"transpose.1378" -> "dot.7";
	"dot.7" -> "custom-call.91";
	"multiply.43" -> "custom-call.92";
	"multiply.43" -> "broadcast.183";
	"add.612" -> "slice.1405";
	"slice.1405" -> "reshape.260";
	"reshape.260" -> "broadcast.184";
	"broadcast.183" -> "multiply.34";
	"broadcast.184" -> "multiply.34";
	"multiply.34" -> "custom-call.93";
	"add.1142" -> "reduce.1423";
	"constant.1417" -> "reduce.1423";
	"AddComputation.1419" -> "reduce.1423";
	"reduce.1423" -> "custom-call.94";
	"add.1142" -> "multiply.1439";
	"get-tuple-element.591" -> "multiply.1439";
	"multiply.1439" -> "reduce.1446";
	"constant.1440" -> "reduce.1446";
	"AddComputation.1442" -> "reduce.1446";
	"reduce.1446" -> "custom-call.95";
	"multiply.1156" -> "reduce.1462";
	"constant.1456" -> "reduce.1462";
	"AddComputation.1458" -> "reduce.1462";
	"reduce.1462" -> "custom-call.96";
	"custom-call.65" -> "reshape.1472";
	"reshape.1472" -> "transpose.1473";
	"reshape.1157" -> "dot.10";
	"transpose.1473" -> "dot.10";
	"dot.10" -> "custom-call.97";
	"multiply.11" -> "reduce.1489";
	"constant.1483" -> "reduce.1489";
	"AddComputation.1485" -> "reduce.1489";
	"reduce.1489" -> "custom-call.98";
	"add.482" -> "reshape.1499";
	"reshape.1499" -> "transpose.1500";
	"reshape.1170" -> "dot.11";
	"transpose.1500" -> "dot.11";
	"dot.11" -> "custom-call.99";
	"add.1174" -> "reduce.1516";
	"constant.1510" -> "reduce.1516";
	"AddComputation.1512" -> "reduce.1516";
	"reduce.1516" -> "custom-call.100";
	"add.1174" -> "multiply.1532";
	"get-tuple-element.461" -> "multiply.1532";
	"multiply.1532" -> "reduce.1539";
	"constant.1533" -> "reduce.1539";
	"AddComputation.1535" -> "reduce.1539";
	"reduce.1539" -> "custom-call.101";
	"multiply.1188" -> "reduce.1555";
	"constant.1549" -> "reduce.1555";
	"AddComputation.1551" -> "reduce.1555";
	"multiply.1188" -> "reshape.1562";
	"reshape.1562" -> "transpose.1563";
	"dot.449" -> "reshape.1558";
	"reshape.1558" -> "transpose.1559";
	"transpose.1559" -> "reshape.1561";
	"transpose.1563" -> "dot.1564";
	"reshape.1561" -> "dot.1564";
	"dot.1242" -> "reduce.15";
	"constant.1568" -> "reduce.15";
	"AddComputation.1570" -> "reduce.15";
	"reduce.15" -> "reshape.1576";
	"dot.1242" -> "reshape.1578";
	"reshape.1578" -> "transpose.1579";
	"transpose.1579" -> "reshape.1581";
	"reshape.1581" -> "transpose.1582";
	"multiply.254" -> "reshape.1577";
	"transpose.1582" -> "dot.1583";
	"reshape.1577" -> "dot.1583";
	"dot.1226" -> "reduce.16";
	"constant.1588" -> "reduce.16";
	"AddComputation.1590" -> "reduce.16";
	"reduce.16" -> "reshape.1596";
	"dot.1226" -> "reshape.1598";
	"reshape.1598" -> "transpose.1600";
	"transpose.1600" -> "reshape.1602";
	"reshape.1602" -> "transpose.1603";
	"multiply.254" -> "reshape.1597";
	"transpose.1603" -> "dot.1604";
	"reshape.1597" -> "dot.1604";
	"dot.1211" -> "reduce.17";
	"constant.1608" -> "reduce.17";
	"AddComputation.1610" -> "reduce.17";
	"reduce.17" -> "reshape.1616";
	"dot.1211" -> "reshape.1618";
	"reshape.1618" -> "transpose.1619";
	"transpose.1619" -> "reshape.1621";
	"reshape.1621" -> "transpose.1622";
	"multiply.254" -> "reshape.1617";
	"transpose.1622" -> "dot.1623";
	"reshape.1617" -> "dot.1623";
	"multiply.1253" -> "reduce.1630";
	"constant.1624" -> "reduce.1630";
	"AddComputation.1626" -> "reduce.1630";
	"reduce.1630" -> "custom-call.102";
	"multiply.1253" -> "multiply.1646";
	"get-tuple-element.231" -> "multiply.1646";
	"multiply.1646" -> "reduce.1653";
	"constant.1647" -> "reduce.1653";
	"AddComputation.1649" -> "reduce.1653";
	"reduce.1653" -> "custom-call.103";
	"constant.17" -> "broadcast.32";
	"p10.180" -> "slice.1664";
	"slice.1664" -> "reshape.10";
	"constant.18" -> "broadcast.33";
	"reshape.10" -> "compare.6";
	"broadcast.33" -> "compare.6";
	"constant.19" -> "broadcast.34";
	"reshape.10" -> "add.2";
	"broadcast.34" -> "add.2";
	"compare.6" -> "select.4";
	"reshape.10" -> "select.4";
	"add.2" -> "select.4";
	"select.4" -> "reshape.11";
	"get-tuple-element.1264" -> "reshape.12";
	"broadcast.32" -> "scatter.0";
	"reshape.11" -> "scatter.0";
	"reshape.12" -> "scatter.0";
	"Int32PermissiveEmbeddingScatterCombiner.1665" -> "scatter.0";
	"scatter.0" -> "custom-call.104";
	"constant.20" -> "broadcast.35";
	"p12.201" -> "reshape.13";
	"constant.21" -> "broadcast.36";
	"reshape.13" -> "compare.7";
	"broadcast.36" -> "compare.7";
	"constant.22" -> "broadcast.37";
	"reshape.13" -> "add.3";
	"broadcast.37" -> "add.3";
	"compare.7" -> "select.5";
	"reshape.13" -> "select.5";
	"add.3" -> "select.5";
	"select.5" -> "reshape.14";
	"get-tuple-element.1264" -> "reshape.15";
	"broadcast.35" -> "scatter.1";
	"reshape.14" -> "scatter.1";
	"reshape.15" -> "scatter.1";
	"Int32PermissiveEmbeddingScatterCombiner.1694" -> "scatter.1";
	"scatter.1" -> "custom-call.105";
	"add.877" -> "tuple.1723";
	"add.804" -> "tuple.1723";
	"reshape.440" -> "tuple.1723";
	"add.871" -> "tuple.1723";
	"add.871" -> "tuple.1723";
	"custom-call.83" -> "tuple.1723";
	"custom-call.84" -> "tuple.1723";
	"custom-call.85" -> "tuple.1723";
	"add.1321" -> "tuple.1723";
	"custom-call.88" -> "tuple.1723";
	"custom-call.89" -> "tuple.1723";
	"custom-call.90" -> "tuple.1723";
	"custom-call.91" -> "tuple.1723";
	"custom-call.92" -> "tuple.1723";
	"custom-call.93" -> "tuple.1723";
	"custom-call.94" -> "tuple.1723";
	"custom-call.95" -> "tuple.1723";
	"custom-call.96" -> "tuple.1723";
	"custom-call.97" -> "tuple.1723";
	"custom-call.98" -> "tuple.1723";
	"custom-call.99" -> "tuple.1723";
	"custom-call.100" -> "tuple.1723";
	"custom-call.101" -> "tuple.1723";
	"reduce.1555" -> "tuple.1723";
	"dot.1564" -> "tuple.1723";
	"reshape.1576" -> "tuple.1723";
	"dot.1583" -> "tuple.1723";
	"reshape.1596" -> "tuple.1723";
	"dot.1604" -> "tuple.1723";
	"reshape.1616" -> "tuple.1723";
	"dot.1623" -> "tuple.1723";
	"custom-call.102" -> "tuple.1723";
	"custom-call.103" -> "tuple.1723";
	"custom-call.104" -> "tuple.1723";
	"custom-call.105" -> "tuple.1723";
 }