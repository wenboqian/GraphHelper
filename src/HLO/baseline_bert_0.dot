digraph HloModule { 
	"p210.4619" [label="p210.4619 \n bf16[] parameter(210), frontend_attributes="];
	"p0.2" [label="p0.2 \n s64[8]"];
	"broadcast.8" [label="broadcast.8 \n s64[8]"];
	"compare.1" [label="compare.1 \n pred[8]"];
	"p209.4530" [label="p209.4530 \n bf16[768]"];
	"broadcast.4536" [label="broadcast.4536 \n bf16[8,128,768]"];
	"p204.4437" [label="p204.4437 \n bf16[768]"];
	"broadcast.4443" [label="broadcast.4443 \n bf16[8,128,768]"];
	"p195.4235" [label="p195.4235 \n bf16[768]"];
	"broadcast.4241" [label="broadcast.4241 \n bf16[8,128,768]"];
	"p190.4142" [label="p190.4142 \n bf16[768]"];
	"broadcast.4148" [label="broadcast.4148 \n bf16[8,128,768]"];
	"p181.3940" [label="p181.3940 \n bf16[768]"];
	"broadcast.3946" [label="broadcast.3946 \n bf16[8,128,768]"];
	"p176.3847" [label="p176.3847 \n bf16[768]"];
	"broadcast.3853" [label="broadcast.3853 \n bf16[8,128,768]"];
	"p167.3645" [label="p167.3645 \n bf16[768]"];
	"broadcast.3651" [label="broadcast.3651 \n bf16[8,128,768]"];
	"p162.3552" [label="p162.3552 \n bf16[768]"];
	"broadcast.3558" [label="broadcast.3558 \n bf16[8,128,768]"];
	"p153.3350" [label="p153.3350 \n bf16[768]"];
	"broadcast.3356" [label="broadcast.3356 \n bf16[8,128,768]"];
	"p148.3257" [label="p148.3257 \n bf16[768]"];
	"broadcast.3263" [label="broadcast.3263 \n bf16[8,128,768]"];
	"p139.3055" [label="p139.3055 \n bf16[768]"];
	"broadcast.3061" [label="broadcast.3061 \n bf16[8,128,768]"];
	"p134.2962" [label="p134.2962 \n bf16[768]"];
	"broadcast.2968" [label="broadcast.2968 \n bf16[8,128,768]"];
	"p125.2760" [label="p125.2760 \n bf16[768]"];
	"broadcast.2766" [label="broadcast.2766 \n bf16[8,128,768]"];
	"p120.2667" [label="p120.2667 \n bf16[768]"];
	"broadcast.2673" [label="broadcast.2673 \n bf16[8,128,768]"];
	"p111.2465" [label="p111.2465 \n bf16[768]"];
	"broadcast.2471" [label="broadcast.2471 \n bf16[8,128,768]"];
	"p106.2372" [label="p106.2372 \n bf16[768]"];
	"broadcast.2378" [label="broadcast.2378 \n bf16[8,128,768]"];
	"p97.2170" [label="p97.2170 \n bf16[768]"];
	"broadcast.2176" [label="broadcast.2176 \n bf16[8,128,768]"];
	"p92.2077" [label="p92.2077 \n bf16[768]"];
	"broadcast.2083" [label="broadcast.2083 \n bf16[8,128,768]"];
	"p83.1875" [label="p83.1875 \n bf16[768]"];
	"broadcast.1881" [label="broadcast.1881 \n bf16[8,128,768]"];
	"p78.1782" [label="p78.1782 \n bf16[768]"];
	"broadcast.1788" [label="broadcast.1788 \n bf16[8,128,768]"];
	"p69.1580" [label="p69.1580 \n bf16[768]"];
	"broadcast.1586" [label="broadcast.1586 \n bf16[8,128,768]"];
	"p64.1487" [label="p64.1487 \n bf16[768]"];
	"broadcast.1493" [label="broadcast.1493 \n bf16[8,128,768]"];
	"p55.1285" [label="p55.1285 \n bf16[768]"];
	"broadcast.1291" [label="broadcast.1291 \n bf16[8,128,768]"];
	"p50.1192" [label="p50.1192 \n bf16[768]"];
	"broadcast.1198" [label="broadcast.1198 \n bf16[8,128,768]"];
	"p38.967" [label="p38.967 \n bf16[768]"];
	"broadcast.973" [label="broadcast.973 \n bf16[8,128,768]"];
	"p37.941" [label="p37.941 \n bf16[28996,768]"];
	"p36.939" [label="p36.939 \n s64[8,128]"];
	"convert.5" [label="convert.5 \n u32[8,128]"];
	"reshape.935" [label="reshape.935 \n u32[1024]"];
	"gather.950" [label="gather.950 \n bf16[1024,768]"];
	"p35.927" [label="p35.927 \n bf16[2,768]"];
	"p34.925" [label="p34.925 \n s64[8,128]"];
	"convert.4" [label="convert.4 \n u32[8,128]"];
	"reshape.934" [label="reshape.934 \n u32[1024]"];
	"gather.936" [label="gather.936 \n bf16[1024,768]"];
	"add.48" [label="add.48 \n bf16[1024,768]"];
	"reshape.1220" [label="reshape.1220 \n bf16[8,128,768]"];
	"p33.908" [label="p33.908 \n bf16[512,768]"];
	"p32.904" [label="p32.904 \n s64[1,512]"];
	"convert.3" [label="convert.3 \n u32[1,512]"];
	"slice.0" [label="slice.0 \n u32[1,128]"];
	"reshape.933" [label="reshape.933 \n u32[128]"];
	"gather.917" [label="gather.917 \n bf16[128,768]"];
	"broadcast.955" [label="broadcast.955 \n bf16[8,128,768]"];
	"add.956" [label="add.956 \n bf16[8,128,768]"];
	"reshape.957" [label="reshape.957 \n bf16[1,1024,768]"];
	"constant.894" [label="constant.894 \n bf16[] constant(1), metadata="];
	"broadcast.898" [label="broadcast.898 \n bf16[1024]"];
	"constant.889" [label="constant.889 \n bf16[] constant(0), metadata="];
	"broadcast.893" [label="broadcast.893 \n bf16[1024]"];
	"reshape.966" [label="reshape.966 \n bf16[8,128,768]"];
	"p31.878" [label="p31.878 \n bf16[768]"];
	"broadcast.969" [label="broadcast.969 \n bf16[8,128,768]"];
	"multiply.972" [label="multiply.972 \n bf16[8,128,768]"];
	"add.974" [label="add.974 \n bf16[8,128,768]"];
	"constant.8" [label="constant.8 \n s64[] constant(214013), metadata="];
	"p4.7" [label="p4.7 \n s64[] parameter(4), frontend_attributes="];
	"multiply.9" [label="multiply.9 \n s64[] multiply(s64[] %constant.8, s64[] %p4.7), metadata="];
	"constant.10" [label="constant.10 \n s64[] constant(2531011), metadata="];
	"add.11" [label="add.11 \n s64[] add(s64[] %multiply.9, s64[] %constant.10), metadata="];
	"convert.850" [label="convert.850 \n u64[] convert(s64[] %add.11), metadata="];
	"reshape.854" [label="reshape.854 \n u64[1]"];
	"constant.160" [label="constant.160 \n u64[1]"];
	"concatenate.856" [label="concatenate.856 \n u64[2]"];
	"constant.860" [label="constant.860 \n u32[] constant(9), metadata="];
	"broadcast.861" [label="broadcast.861 \n u32[8,128,768]"];
	"convert.863" [label="convert.863 \n f32[8,128,768]"];
	"constant.166" [label="constant.166 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.10" [label="broadcast.10 \n f32[8,128,768]"];
	"multiply.869" [label="multiply.869 \n f32[8,128,768]"];
	"convert.872" [label="convert.872 \n bf16[8,128,768]"];
	"p3.6" [label="p3.6 \n bf16[] parameter(3), frontend_attributes="];
	"broadcast.847" [label="broadcast.847 \n bf16[8,128,768]"];
	"compare.873" [label="compare.873 \n pred[8,128,768]"];
	"constant.6" [label="constant.6 \n bf16[] constant(1), metadata="];
	"broadcast.11" [label="broadcast.11 \n bf16[8,128,768]"];
	"broadcast.107" [label="broadcast.107 \n bf16[8,128,768]"];
	"select.2" [label="select.2 \n bf16[8,128,768]"];
	"multiply.976" [label="multiply.976 \n bf16[8,128,768]"];
	"reshape.1130" [label="reshape.1130 \n bf16[1024,768]"];
	"p49.1128" [label="p49.1128 \n bf16[768,768]"];
	"transpose.1129" [label="transpose.1129 \n bf16[768,768]"];
	"dot.1131" [label="dot.1131 \n bf16[1024,768]"];
	"reshape.1132" [label="reshape.1132 \n bf16[8,128,768]"];
	"p48.1126" [label="p48.1126 \n bf16[768]"];
	"broadcast.1133" [label="broadcast.1133 \n bf16[8,128,768]"];
	"add.1134" [label="add.1134 \n bf16[8,128,768]"];
	"reshape.1137" [label="reshape.1137 \n bf16[8,128,12,64]"];
	"transpose.1138" [label="transpose.1138 \n bf16[8,12,128,64]"];
	"reshape.1140" [label="reshape.1140 \n bf16[96,128,64]"];
	"reshape.1109" [label="reshape.1109 \n bf16[1024,768]"];
	"p47.1107" [label="p47.1107 \n bf16[768,768]"];
	"transpose.1108" [label="transpose.1108 \n bf16[768,768]"];
	"dot.1110" [label="dot.1110 \n bf16[1024,768]"];
	"reshape.1111" [label="reshape.1111 \n bf16[8,128,768]"];
	"p46.1105" [label="p46.1105 \n bf16[768]"];
	"broadcast.1112" [label="broadcast.1112 \n bf16[8,128,768]"];
	"add.1113" [label="add.1113 \n bf16[8,128,768]"];
	"reshape.1116" [label="reshape.1116 \n bf16[8,128,12,64]"];
	"transpose.1118" [label="transpose.1118 \n bf16[8,12,64,128]"];
	"reshape.1120" [label="reshape.1120 \n bf16[96,64,128]"];
	"dot.1141" [label="dot.1141 \n bf16[96,128,128]"];
	"p45.1099" [label="p45.1099 \n bf16[] parameter(45), frontend_attributes="];
	"broadcast.440" [label="broadcast.440 \n bf16[96,128,128]"];
	"divide.39" [label="divide.39 \n bf16[96,128,128]"];
	"reshape.1226" [label="reshape.1226 \n bf16[8,12,128,128]"];
	"constant.1090" [label="constant.1090 \n bf16[] constant(1), metadata="];
	"broadcast.442" [label="broadcast.442 \n bf16[8,128]"];
	"p44.1078" [label="p44.1078 \n s64[8,128]"];
	"convert.1" [label="convert.1 \n bf16[8,128]"];
	"subtract.2" [label="subtract.2 \n bf16[8,128]"];
	"p43.1077" [label="p43.1077 \n bf16[] parameter(43), frontend_attributes="];
	"broadcast.481" [label="broadcast.481 \n bf16[8,128]"];
	"multiply.152" [label="multiply.152 \n bf16[8,128]"];
	"broadcast.1147" [label="broadcast.1147 \n bf16[8,12,128,128]"];
	"add.1148" [label="add.1148 \n bf16[8,12,128,128]"];
	"constant.1149" [label="constant.1149 \n bf16[] constant(-inf), metadata="];
	"reduce.1154" [label="reduce.1154 \n bf16[8,12,128]"];
	"broadcast.1155" [label="broadcast.1155 \n bf16[8,12,128,128]"];
	"subtract.1156" [label="subtract.1156 \n bf16[8,12,128,128]"];
	"exponential.1157" [label="exponential.1157 \n bf16[8,12,128,128]"];
	"constant.1158" [label="constant.1158 \n bf16[] constant(0), metadata="];
	"reduce.1163" [label="reduce.1163 \n bf16[8,12,128]"];
	"broadcast.1164" [label="broadcast.1164 \n bf16[8,12,128,128]"];
	"divide.1165" [label="divide.1165 \n bf16[8,12,128,128]"];
	"constant.12" [label="constant.12 \n s64[] constant(214013), metadata="];
	"multiply.13" [label="multiply.13 \n s64[] multiply(s64[] %constant.12, s64[] %add.11), metadata="];
	"constant.14" [label="constant.14 \n s64[] constant(2531011), metadata="];
	"add.15" [label="add.15 \n s64[] add(s64[] %multiply.13, s64[] %constant.14), metadata="];
	"convert.1045" [label="convert.1045 \n u64[] convert(s64[] %add.15), metadata="];
	"reshape.1049" [label="reshape.1049 \n u64[1]"];
	"constant.167" [label="constant.167 \n u64[1]"];
	"concatenate.1051" [label="concatenate.1051 \n u64[2]"];
	"constant.1055" [label="constant.1055 \n u32[] constant(9), metadata="];
	"broadcast.1056" [label="broadcast.1056 \n u32[8,12,128,128]"];
	"convert.1058" [label="convert.1058 \n f32[8,12,128,128]"];
	"constant.172" [label="constant.172 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.15" [label="broadcast.15 \n f32[8,12,128,128]"];
	"multiply.1064" [label="multiply.1064 \n f32[8,12,128,128]"];
	"convert.1067" [label="convert.1067 \n bf16[8,12,128,128]"];
	"broadcast.1042" [label="broadcast.1042 \n bf16[8,12,128,128]"];
	"compare.1068" [label="compare.1068 \n pred[8,12,128,128]"];
	"constant.7" [label="constant.7 \n bf16[] constant(1), metadata="];
	"broadcast.16" [label="broadcast.16 \n bf16[8,12,128,128]"];
	"broadcast.114" [label="broadcast.114 \n bf16[8,12,128,128]"];
	"select.3" [label="select.3 \n bf16[8,12,128,128]"];
	"multiply.1166" [label="multiply.1166 \n bf16[8,12,128,128]"];
	"reshape.1168" [label="reshape.1168 \n bf16[96,128,128]"];
	"reshape.1028" [label="reshape.1028 \n bf16[1024,768]"];
	"p42.1026" [label="p42.1026 \n bf16[768,768]"];
	"transpose.1027" [label="transpose.1027 \n bf16[768,768]"];
	"dot.1029" [label="dot.1029 \n bf16[1024,768]"];
	"reshape.1030" [label="reshape.1030 \n bf16[8,128,768]"];
	"p41.1024" [label="p41.1024 \n bf16[768]"];
	"broadcast.1031" [label="broadcast.1031 \n bf16[8,128,768]"];
	"add.1032" [label="add.1032 \n bf16[8,128,768]"];
	"reshape.1035" [label="reshape.1035 \n bf16[8,128,12,64]"];
	"transpose.1036" [label="transpose.1036 \n bf16[8,12,128,64]"];
	"reshape.1038" [label="reshape.1038 \n bf16[96,128,64]"];
	"dot.1169" [label="dot.1169 \n bf16[96,128,64]"];
	"reshape.1170" [label="reshape.1170 \n bf16[8,12,128,64]"];
	"transpose.1171" [label="transpose.1171 \n bf16[8,128,12,64]"];
	"reshape.1173" [label="reshape.1173 \n bf16[1024,768]"];
	"p40.1017" [label="p40.1017 \n bf16[768,768]"];
	"transpose.1018" [label="transpose.1018 \n bf16[768,768]"];
	"dot.1174" [label="dot.1174 \n bf16[1024,768]"];
	"reshape.1175" [label="reshape.1175 \n bf16[8,128,768]"];
	"p39.1015" [label="p39.1015 \n bf16[768]"];
	"broadcast.1176" [label="broadcast.1176 \n bf16[8,128,768]"];
	"add.1177" [label="add.1177 \n bf16[8,128,768]"];
	"constant.16" [label="constant.16 \n s64[] constant(214013), metadata="];
	"multiply.17" [label="multiply.17 \n s64[] multiply(s64[] %constant.16, s64[] %add.15), metadata="];
	"constant.18" [label="constant.18 \n s64[] constant(2531011), metadata="];
	"add.19" [label="add.19 \n s64[] add(s64[] %multiply.17, s64[] %constant.18), metadata="];
	"convert.983" [label="convert.983 \n u64[] convert(s64[] %add.19), metadata="];
	"reshape.987" [label="reshape.987 \n u64[1]"];
	"constant.173" [label="constant.173 \n u64[1]"];
	"concatenate.989" [label="concatenate.989 \n u64[2]"];
	"constant.993" [label="constant.993 \n u32[] constant(9), metadata="];
	"broadcast.994" [label="broadcast.994 \n u32[8,128,768]"];
	"convert.996" [label="convert.996 \n f32[8,128,768]"];
	"constant.178" [label="constant.178 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.17" [label="broadcast.17 \n f32[8,128,768]"];
	"multiply.1002" [label="multiply.1002 \n f32[8,128,768]"];
	"convert.1005" [label="convert.1005 \n bf16[8,128,768]"];
	"broadcast.980" [label="broadcast.980 \n bf16[8,128,768]"];
	"compare.1006" [label="compare.1006 \n pred[8,128,768]"];
	"constant.9" [label="constant.9 \n bf16[] constant(1), metadata="];
	"broadcast.18" [label="broadcast.18 \n bf16[8,128,768]"];
	"broadcast.118" [label="broadcast.118 \n bf16[8,128,768]"];
	"select.4" [label="select.4 \n bf16[8,128,768]"];
	"multiply.1180" [label="multiply.1180 \n bf16[8,128,768]"];
	"add.1181" [label="add.1181 \n bf16[8,128,768]"];
	"reshape.1182" [label="reshape.1182 \n bf16[1,1024,768]"];
	"constant.834" [label="constant.834 \n bf16[] constant(1), metadata="];
	"broadcast.838" [label="broadcast.838 \n bf16[1024]"];
	"constant.829" [label="constant.829 \n bf16[] constant(0), metadata="];
	"broadcast.833" [label="broadcast.833 \n bf16[1024]"];
	"reshape.1191" [label="reshape.1191 \n bf16[8,128,768]"];
	"p30.818" [label="p30.818 \n bf16[768]"];
	"broadcast.1194" [label="broadcast.1194 \n bf16[8,128,768]"];
	"multiply.1197" [label="multiply.1197 \n bf16[8,128,768]"];
	"add.1199" [label="add.1199 \n bf16[8,128,768]"];
	"reshape.1252" [label="reshape.1252 \n bf16[1024,768]"];
	"p54.1250" [label="p54.1250 \n bf16[3072,768]"];
	"transpose.1251" [label="transpose.1251 \n bf16[768,3072]"];
	"dot.1253" [label="dot.1253 \n bf16[1024,3072]"];
	"reshape.1254" [label="reshape.1254 \n bf16[8,128,3072]"];
	"p53.1248" [label="p53.1248 \n bf16[3072]"];
	"broadcast.1255" [label="broadcast.1255 \n bf16[8,128,3072]"];
	"add.1256" [label="add.1256 \n bf16[8,128,3072]"];
	"reshape.1266" [label="reshape.1266 \n bf16[1024,3072]"];
	"p52.1241" [label="p52.1241 \n bf16[768,3072]"];
	"transpose.1242" [label="transpose.1242 \n bf16[3072,768]"];
	"dot.1267" [label="dot.1267 \n bf16[1024,768]"];
	"reshape.1268" [label="reshape.1268 \n bf16[8,128,768]"];
	"p51.1239" [label="p51.1239 \n bf16[768]"];
	"broadcast.1269" [label="broadcast.1269 \n bf16[8,128,768]"];
	"add.1270" [label="add.1270 \n bf16[8,128,768]"];
	"constant.20" [label="constant.20 \n s64[] constant(214013), metadata="];
	"multiply.21" [label="multiply.21 \n s64[] multiply(s64[] %constant.20, s64[] %add.19), metadata="];
	"constant.22" [label="constant.22 \n s64[] constant(2531011), metadata="];
	"add.23" [label="add.23 \n s64[] add(s64[] %multiply.21, s64[] %constant.22), metadata="];
	"convert.1207" [label="convert.1207 \n u64[] convert(s64[] %add.23), metadata="];
	"reshape.1211" [label="reshape.1211 \n u64[1]"];
	"constant.181" [label="constant.181 \n u64[1]"];
	"concatenate.1213" [label="concatenate.1213 \n u64[2]"];
	"constant.1217" [label="constant.1217 \n u32[] constant(9), metadata="];
	"broadcast.1218" [label="broadcast.1218 \n u32[8,128,768]"];
	"convert.1220" [label="convert.1220 \n f32[8,128,768]"];
	"constant.185" [label="constant.185 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.19" [label="broadcast.19 \n f32[8,128,768]"];
	"multiply.1226" [label="multiply.1226 \n f32[8,128,768]"];
	"convert.1229" [label="convert.1229 \n bf16[8,128,768]"];
	"broadcast.1204" [label="broadcast.1204 \n bf16[8,128,768]"];
	"compare.1230" [label="compare.1230 \n pred[8,128,768]"];
	"constant.11" [label="constant.11 \n bf16[] constant(1), metadata="];
	"broadcast.20" [label="broadcast.20 \n bf16[8,128,768]"];
	"broadcast.125" [label="broadcast.125 \n bf16[8,128,768]"];
	"select.5" [label="select.5 \n bf16[8,128,768]"];
	"multiply.1273" [label="multiply.1273 \n bf16[8,128,768]"];
	"add.1274" [label="add.1274 \n bf16[8,128,768]"];
	"reshape.1275" [label="reshape.1275 \n bf16[1,1024,768]"];
	"constant.807" [label="constant.807 \n bf16[] constant(1), metadata="];
	"broadcast.811" [label="broadcast.811 \n bf16[1024]"];
	"constant.802" [label="constant.802 \n bf16[] constant(0), metadata="];
	"broadcast.806" [label="broadcast.806 \n bf16[1024]"];
	"reshape.1284" [label="reshape.1284 \n bf16[8,128,768]"];
	"p29.791" [label="p29.791 \n bf16[768]"];
	"broadcast.1287" [label="broadcast.1287 \n bf16[8,128,768]"];
	"multiply.1290" [label="multiply.1290 \n bf16[8,128,768]"];
	"add.1292" [label="add.1292 \n bf16[8,128,768]"];
	"reshape.1425" [label="reshape.1425 \n bf16[1024,768]"];
	"p63.1423" [label="p63.1423 \n bf16[768,768]"];
	"transpose.1424" [label="transpose.1424 \n bf16[768,768]"];
	"dot.1426" [label="dot.1426 \n bf16[1024,768]"];
	"reshape.1427" [label="reshape.1427 \n bf16[8,128,768]"];
	"p62.1421" [label="p62.1421 \n bf16[768]"];
	"broadcast.1428" [label="broadcast.1428 \n bf16[8,128,768]"];
	"add.1429" [label="add.1429 \n bf16[8,128,768]"];
	"reshape.1432" [label="reshape.1432 \n bf16[8,128,12,64]"];
	"transpose.1433" [label="transpose.1433 \n bf16[8,12,128,64]"];
	"reshape.1435" [label="reshape.1435 \n bf16[96,128,64]"];
	"reshape.1404" [label="reshape.1404 \n bf16[1024,768]"];
	"p61.1402" [label="p61.1402 \n bf16[768,768]"];
	"transpose.1403" [label="transpose.1403 \n bf16[768,768]"];
	"dot.1405" [label="dot.1405 \n bf16[1024,768]"];
	"reshape.1406" [label="reshape.1406 \n bf16[8,128,768]"];
	"p60.1400" [label="p60.1400 \n bf16[768]"];
	"broadcast.1407" [label="broadcast.1407 \n bf16[8,128,768]"];
	"add.1408" [label="add.1408 \n bf16[8,128,768]"];
	"reshape.1411" [label="reshape.1411 \n bf16[8,128,12,64]"];
	"transpose.1413" [label="transpose.1413 \n bf16[8,12,64,128]"];
	"reshape.1415" [label="reshape.1415 \n bf16[96,64,128]"];
	"dot.1436" [label="dot.1436 \n bf16[96,128,128]"];
	"broadcast.446" [label="broadcast.446 \n bf16[96,128,128]"];
	"divide.40" [label="divide.40 \n bf16[96,128,128]"];
	"reshape.1229" [label="reshape.1229 \n bf16[8,12,128,128]"];
	"broadcast.1442" [label="broadcast.1442 \n bf16[8,12,128,128]"];
	"add.1443" [label="add.1443 \n bf16[8,12,128,128]"];
	"constant.1444" [label="constant.1444 \n bf16[] constant(-inf), metadata="];
	"reduce.1449" [label="reduce.1449 \n bf16[8,12,128]"];
	"broadcast.1450" [label="broadcast.1450 \n bf16[8,12,128,128]"];
	"subtract.1451" [label="subtract.1451 \n bf16[8,12,128,128]"];
	"exponential.1452" [label="exponential.1452 \n bf16[8,12,128,128]"];
	"constant.1453" [label="constant.1453 \n bf16[] constant(0), metadata="];
	"reduce.1458" [label="reduce.1458 \n bf16[8,12,128]"];
	"broadcast.1459" [label="broadcast.1459 \n bf16[8,12,128,128]"];
	"divide.1460" [label="divide.1460 \n bf16[8,12,128,128]"];
	"constant.24" [label="constant.24 \n s64[] constant(214013), metadata="];
	"multiply.25" [label="multiply.25 \n s64[] multiply(s64[] %constant.24, s64[] %add.23), metadata="];
	"constant.26" [label="constant.26 \n s64[] constant(2531011), metadata="];
	"add.27" [label="add.27 \n s64[] add(s64[] %multiply.25, s64[] %constant.26), metadata="];
	"convert.1362" [label="convert.1362 \n u64[] convert(s64[] %add.27), metadata="];
	"reshape.1366" [label="reshape.1366 \n u64[1]"];
	"constant.187" [label="constant.187 \n u64[1]"];
	"concatenate.1368" [label="concatenate.1368 \n u64[2]"];
	"constant.1372" [label="constant.1372 \n u32[] constant(9), metadata="];
	"broadcast.1373" [label="broadcast.1373 \n u32[8,12,128,128]"];
	"convert.1375" [label="convert.1375 \n f32[8,12,128,128]"];
	"constant.191" [label="constant.191 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.22" [label="broadcast.22 \n f32[8,12,128,128]"];
	"multiply.1381" [label="multiply.1381 \n f32[8,12,128,128]"];
	"convert.1384" [label="convert.1384 \n bf16[8,12,128,128]"];
	"broadcast.1359" [label="broadcast.1359 \n bf16[8,12,128,128]"];
	"compare.1385" [label="compare.1385 \n pred[8,12,128,128]"];
	"constant.13" [label="constant.13 \n bf16[] constant(1), metadata="];
	"broadcast.23" [label="broadcast.23 \n bf16[8,12,128,128]"];
	"broadcast.133" [label="broadcast.133 \n bf16[8,12,128,128]"];
	"select.6" [label="select.6 \n bf16[8,12,128,128]"];
	"multiply.1461" [label="multiply.1461 \n bf16[8,12,128,128]"];
	"reshape.1463" [label="reshape.1463 \n bf16[96,128,128]"];
	"reshape.1345" [label="reshape.1345 \n bf16[1024,768]"];
	"p59.1343" [label="p59.1343 \n bf16[768,768]"];
	"transpose.1344" [label="transpose.1344 \n bf16[768,768]"];
	"dot.1346" [label="dot.1346 \n bf16[1024,768]"];
	"reshape.1347" [label="reshape.1347 \n bf16[8,128,768]"];
	"p58.1341" [label="p58.1341 \n bf16[768]"];
	"broadcast.1348" [label="broadcast.1348 \n bf16[8,128,768]"];
	"add.1349" [label="add.1349 \n bf16[8,128,768]"];
	"reshape.1352" [label="reshape.1352 \n bf16[8,128,12,64]"];
	"transpose.1353" [label="transpose.1353 \n bf16[8,12,128,64]"];
	"reshape.1355" [label="reshape.1355 \n bf16[96,128,64]"];
	"dot.1464" [label="dot.1464 \n bf16[96,128,64]"];
	"reshape.1465" [label="reshape.1465 \n bf16[8,12,128,64]"];
	"transpose.1466" [label="transpose.1466 \n bf16[8,128,12,64]"];
	"reshape.1468" [label="reshape.1468 \n bf16[1024,768]"];
	"p57.1334" [label="p57.1334 \n bf16[768,768]"];
	"transpose.1335" [label="transpose.1335 \n bf16[768,768]"];
	"dot.1469" [label="dot.1469 \n bf16[1024,768]"];
	"reshape.1470" [label="reshape.1470 \n bf16[8,128,768]"];
	"p56.1332" [label="p56.1332 \n bf16[768]"];
	"broadcast.1471" [label="broadcast.1471 \n bf16[8,128,768]"];
	"add.1472" [label="add.1472 \n bf16[8,128,768]"];
	"constant.28" [label="constant.28 \n s64[] constant(214013), metadata="];
	"multiply.29" [label="multiply.29 \n s64[] multiply(s64[] %constant.28, s64[] %add.27), metadata="];
	"constant.30" [label="constant.30 \n s64[] constant(2531011), metadata="];
	"add.31" [label="add.31 \n s64[] add(s64[] %multiply.29, s64[] %constant.30), metadata="];
	"convert.1300" [label="convert.1300 \n u64[] convert(s64[] %add.31), metadata="];
	"reshape.1304" [label="reshape.1304 \n u64[1]"];
	"constant.192" [label="constant.192 \n u64[1]"];
	"concatenate.1306" [label="concatenate.1306 \n u64[2]"];
	"constant.1310" [label="constant.1310 \n u32[] constant(9), metadata="];
	"broadcast.1311" [label="broadcast.1311 \n u32[8,128,768]"];
	"convert.1313" [label="convert.1313 \n f32[8,128,768]"];
	"constant.197" [label="constant.197 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.24" [label="broadcast.24 \n f32[8,128,768]"];
	"multiply.1319" [label="multiply.1319 \n f32[8,128,768]"];
	"convert.1322" [label="convert.1322 \n bf16[8,128,768]"];
	"broadcast.1297" [label="broadcast.1297 \n bf16[8,128,768]"];
	"compare.1323" [label="compare.1323 \n pred[8,128,768]"];
	"constant.15" [label="constant.15 \n bf16[] constant(1), metadata="];
	"broadcast.25" [label="broadcast.25 \n bf16[8,128,768]"];
	"broadcast.137" [label="broadcast.137 \n bf16[8,128,768]"];
	"select.7" [label="select.7 \n bf16[8,128,768]"];
	"multiply.1475" [label="multiply.1475 \n bf16[8,128,768]"];
	"add.1476" [label="add.1476 \n bf16[8,128,768]"];
	"reshape.1477" [label="reshape.1477 \n bf16[1,1024,768]"];
	"constant.780" [label="constant.780 \n bf16[] constant(1), metadata="];
	"broadcast.784" [label="broadcast.784 \n bf16[1024]"];
	"constant.775" [label="constant.775 \n bf16[] constant(0), metadata="];
	"broadcast.779" [label="broadcast.779 \n bf16[1024]"];
	"reshape.1486" [label="reshape.1486 \n bf16[8,128,768]"];
	"p28.764" [label="p28.764 \n bf16[768]"];
	"broadcast.1489" [label="broadcast.1489 \n bf16[8,128,768]"];
	"multiply.1492" [label="multiply.1492 \n bf16[8,128,768]"];
	"add.1494" [label="add.1494 \n bf16[8,128,768]"];
	"reshape.1547" [label="reshape.1547 \n bf16[1024,768]"];
	"p68.1545" [label="p68.1545 \n bf16[3072,768]"];
	"transpose.1546" [label="transpose.1546 \n bf16[768,3072]"];
	"dot.1548" [label="dot.1548 \n bf16[1024,3072]"];
	"reshape.1549" [label="reshape.1549 \n bf16[8,128,3072]"];
	"p67.1543" [label="p67.1543 \n bf16[3072]"];
	"broadcast.1550" [label="broadcast.1550 \n bf16[8,128,3072]"];
	"add.1551" [label="add.1551 \n bf16[8,128,3072]"];
	"reshape.1561" [label="reshape.1561 \n bf16[1024,3072]"];
	"p66.1536" [label="p66.1536 \n bf16[768,3072]"];
	"transpose.1537" [label="transpose.1537 \n bf16[3072,768]"];
	"dot.1562" [label="dot.1562 \n bf16[1024,768]"];
	"reshape.1563" [label="reshape.1563 \n bf16[8,128,768]"];
	"p65.1534" [label="p65.1534 \n bf16[768]"];
	"broadcast.1564" [label="broadcast.1564 \n bf16[8,128,768]"];
	"add.1565" [label="add.1565 \n bf16[8,128,768]"];
	"constant.32" [label="constant.32 \n s64[] constant(214013), metadata="];
	"multiply.33" [label="multiply.33 \n s64[] multiply(s64[] %constant.32, s64[] %add.31), metadata="];
	"constant.34" [label="constant.34 \n s64[] constant(2531011), metadata="];
	"add.35" [label="add.35 \n s64[] add(s64[] %multiply.33, s64[] %constant.34), metadata="];
	"convert.1502" [label="convert.1502 \n u64[] convert(s64[] %add.35), metadata="];
	"reshape.1506" [label="reshape.1506 \n u64[1]"];
	"constant.200" [label="constant.200 \n u64[1]"];
	"concatenate.1508" [label="concatenate.1508 \n u64[2]"];
	"constant.1512" [label="constant.1512 \n u32[] constant(9), metadata="];
	"broadcast.1513" [label="broadcast.1513 \n u32[8,128,768]"];
	"convert.1515" [label="convert.1515 \n f32[8,128,768]"];
	"constant.205" [label="constant.205 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.26" [label="broadcast.26 \n f32[8,128,768]"];
	"multiply.1521" [label="multiply.1521 \n f32[8,128,768]"];
	"convert.1524" [label="convert.1524 \n bf16[8,128,768]"];
	"broadcast.1499" [label="broadcast.1499 \n bf16[8,128,768]"];
	"compare.1525" [label="compare.1525 \n pred[8,128,768]"];
	"constant.17" [label="constant.17 \n bf16[] constant(1), metadata="];
	"broadcast.27" [label="broadcast.27 \n bf16[8,128,768]"];
	"broadcast.144" [label="broadcast.144 \n bf16[8,128,768]"];
	"select.8" [label="select.8 \n bf16[8,128,768]"];
	"multiply.1568" [label="multiply.1568 \n bf16[8,128,768]"];
	"add.1569" [label="add.1569 \n bf16[8,128,768]"];
	"reshape.1570" [label="reshape.1570 \n bf16[1,1024,768]"];
	"constant.753" [label="constant.753 \n bf16[] constant(1), metadata="];
	"broadcast.757" [label="broadcast.757 \n bf16[1024]"];
	"constant.748" [label="constant.748 \n bf16[] constant(0), metadata="];
	"broadcast.752" [label="broadcast.752 \n bf16[1024]"];
	"reshape.1579" [label="reshape.1579 \n bf16[8,128,768]"];
	"p27.737" [label="p27.737 \n bf16[768]"];
	"broadcast.1582" [label="broadcast.1582 \n bf16[8,128,768]"];
	"multiply.1585" [label="multiply.1585 \n bf16[8,128,768]"];
	"add.1587" [label="add.1587 \n bf16[8,128,768]"];
	"reshape.1720" [label="reshape.1720 \n bf16[1024,768]"];
	"p77.1718" [label="p77.1718 \n bf16[768,768]"];
	"transpose.1719" [label="transpose.1719 \n bf16[768,768]"];
	"dot.1721" [label="dot.1721 \n bf16[1024,768]"];
	"reshape.1722" [label="reshape.1722 \n bf16[8,128,768]"];
	"p76.1716" [label="p76.1716 \n bf16[768]"];
	"broadcast.1723" [label="broadcast.1723 \n bf16[8,128,768]"];
	"add.1724" [label="add.1724 \n bf16[8,128,768]"];
	"reshape.1727" [label="reshape.1727 \n bf16[8,128,12,64]"];
	"transpose.1728" [label="transpose.1728 \n bf16[8,12,128,64]"];
	"reshape.1730" [label="reshape.1730 \n bf16[96,128,64]"];
	"reshape.1699" [label="reshape.1699 \n bf16[1024,768]"];
	"p75.1697" [label="p75.1697 \n bf16[768,768]"];
	"transpose.1698" [label="transpose.1698 \n bf16[768,768]"];
	"dot.1700" [label="dot.1700 \n bf16[1024,768]"];
	"reshape.1701" [label="reshape.1701 \n bf16[8,128,768]"];
	"p74.1695" [label="p74.1695 \n bf16[768]"];
	"broadcast.1702" [label="broadcast.1702 \n bf16[8,128,768]"];
	"add.1703" [label="add.1703 \n bf16[8,128,768]"];
	"reshape.1706" [label="reshape.1706 \n bf16[8,128,12,64]"];
	"transpose.1708" [label="transpose.1708 \n bf16[8,12,64,128]"];
	"reshape.1710" [label="reshape.1710 \n bf16[96,64,128]"];
	"dot.1731" [label="dot.1731 \n bf16[96,128,128]"];
	"broadcast.449" [label="broadcast.449 \n bf16[96,128,128]"];
	"divide.41" [label="divide.41 \n bf16[96,128,128]"];
	"reshape.1232" [label="reshape.1232 \n bf16[8,12,128,128]"];
	"broadcast.1737" [label="broadcast.1737 \n bf16[8,12,128,128]"];
	"add.1738" [label="add.1738 \n bf16[8,12,128,128]"];
	"constant.1739" [label="constant.1739 \n bf16[] constant(-inf), metadata="];
	"reduce.1744" [label="reduce.1744 \n bf16[8,12,128]"];
	"broadcast.1745" [label="broadcast.1745 \n bf16[8,12,128,128]"];
	"subtract.1746" [label="subtract.1746 \n bf16[8,12,128,128]"];
	"exponential.1747" [label="exponential.1747 \n bf16[8,12,128,128]"];
	"constant.1748" [label="constant.1748 \n bf16[] constant(0), metadata="];
	"reduce.1753" [label="reduce.1753 \n bf16[8,12,128]"];
	"broadcast.1754" [label="broadcast.1754 \n bf16[8,12,128,128]"];
	"divide.1755" [label="divide.1755 \n bf16[8,12,128,128]"];
	"constant.36" [label="constant.36 \n s64[] constant(214013), metadata="];
	"multiply.37" [label="multiply.37 \n s64[] multiply(s64[] %constant.36, s64[] %add.35), metadata="];
	"constant.38" [label="constant.38 \n s64[] constant(2531011), metadata="];
	"add.39" [label="add.39 \n s64[] add(s64[] %multiply.37, s64[] %constant.38), metadata="];
	"convert.1657" [label="convert.1657 \n u64[] convert(s64[] %add.39), metadata="];
	"reshape.1661" [label="reshape.1661 \n u64[1]"];
	"constant.207" [label="constant.207 \n u64[1]"];
	"concatenate.1663" [label="concatenate.1663 \n u64[2]"];
	"constant.1667" [label="constant.1667 \n u32[] constant(9), metadata="];
	"broadcast.1668" [label="broadcast.1668 \n u32[8,12,128,128]"];
	"convert.1670" [label="convert.1670 \n f32[8,12,128,128]"];
	"constant.212" [label="constant.212 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.29" [label="broadcast.29 \n f32[8,12,128,128]"];
	"multiply.1676" [label="multiply.1676 \n f32[8,12,128,128]"];
	"convert.1679" [label="convert.1679 \n bf16[8,12,128,128]"];
	"broadcast.1654" [label="broadcast.1654 \n bf16[8,12,128,128]"];
	"compare.1680" [label="compare.1680 \n pred[8,12,128,128]"];
	"constant.19" [label="constant.19 \n bf16[] constant(1), metadata="];
	"broadcast.30" [label="broadcast.30 \n bf16[8,12,128,128]"];
	"broadcast.152" [label="broadcast.152 \n bf16[8,12,128,128]"];
	"select.9" [label="select.9 \n bf16[8,12,128,128]"];
	"multiply.1756" [label="multiply.1756 \n bf16[8,12,128,128]"];
	"reshape.1758" [label="reshape.1758 \n bf16[96,128,128]"];
	"reshape.1640" [label="reshape.1640 \n bf16[1024,768]"];
	"p73.1638" [label="p73.1638 \n bf16[768,768]"];
	"transpose.1639" [label="transpose.1639 \n bf16[768,768]"];
	"dot.1641" [label="dot.1641 \n bf16[1024,768]"];
	"reshape.1642" [label="reshape.1642 \n bf16[8,128,768]"];
	"p72.1636" [label="p72.1636 \n bf16[768]"];
	"broadcast.1643" [label="broadcast.1643 \n bf16[8,128,768]"];
	"add.1644" [label="add.1644 \n bf16[8,128,768]"];
	"reshape.1647" [label="reshape.1647 \n bf16[8,128,12,64]"];
	"transpose.1648" [label="transpose.1648 \n bf16[8,12,128,64]"];
	"reshape.1650" [label="reshape.1650 \n bf16[96,128,64]"];
	"dot.1759" [label="dot.1759 \n bf16[96,128,64]"];
	"reshape.1760" [label="reshape.1760 \n bf16[8,12,128,64]"];
	"transpose.1761" [label="transpose.1761 \n bf16[8,128,12,64]"];
	"reshape.1763" [label="reshape.1763 \n bf16[1024,768]"];
	"p71.1629" [label="p71.1629 \n bf16[768,768]"];
	"transpose.1630" [label="transpose.1630 \n bf16[768,768]"];
	"dot.1764" [label="dot.1764 \n bf16[1024,768]"];
	"reshape.1765" [label="reshape.1765 \n bf16[8,128,768]"];
	"p70.1627" [label="p70.1627 \n bf16[768]"];
	"broadcast.1766" [label="broadcast.1766 \n bf16[8,128,768]"];
	"add.1767" [label="add.1767 \n bf16[8,128,768]"];
	"constant.40" [label="constant.40 \n s64[] constant(214013), metadata="];
	"multiply.41" [label="multiply.41 \n s64[] multiply(s64[] %constant.40, s64[] %add.39), metadata="];
	"constant.42" [label="constant.42 \n s64[] constant(2531011), metadata="];
	"add.43" [label="add.43 \n s64[] add(s64[] %multiply.41, s64[] %constant.42), metadata="];
	"convert.1595" [label="convert.1595 \n u64[] convert(s64[] %add.43), metadata="];
	"reshape.1599" [label="reshape.1599 \n u64[1]"];
	"constant.214" [label="constant.214 \n u64[1]"];
	"concatenate.1601" [label="concatenate.1601 \n u64[2]"];
	"constant.1605" [label="constant.1605 \n u32[] constant(9), metadata="];
	"broadcast.1606" [label="broadcast.1606 \n u32[8,128,768]"];
	"convert.1608" [label="convert.1608 \n f32[8,128,768]"];
	"constant.219" [label="constant.219 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.31" [label="broadcast.31 \n f32[8,128,768]"];
	"multiply.1614" [label="multiply.1614 \n f32[8,128,768]"];
	"convert.1617" [label="convert.1617 \n bf16[8,128,768]"];
	"broadcast.1592" [label="broadcast.1592 \n bf16[8,128,768]"];
	"compare.1618" [label="compare.1618 \n pred[8,128,768]"];
	"constant.21" [label="constant.21 \n bf16[] constant(1), metadata="];
	"broadcast.32" [label="broadcast.32 \n bf16[8,128,768]"];
	"broadcast.156" [label="broadcast.156 \n bf16[8,128,768]"];
	"select.10" [label="select.10 \n bf16[8,128,768]"];
	"multiply.1770" [label="multiply.1770 \n bf16[8,128,768]"];
	"add.1771" [label="add.1771 \n bf16[8,128,768]"];
	"reshape.1772" [label="reshape.1772 \n bf16[1,1024,768]"];
	"constant.726" [label="constant.726 \n bf16[] constant(1), metadata="];
	"broadcast.730" [label="broadcast.730 \n bf16[1024]"];
	"constant.721" [label="constant.721 \n bf16[] constant(0), metadata="];
	"broadcast.725" [label="broadcast.725 \n bf16[1024]"];
	"reshape.1781" [label="reshape.1781 \n bf16[8,128,768]"];
	"p26.710" [label="p26.710 \n bf16[768]"];
	"broadcast.1784" [label="broadcast.1784 \n bf16[8,128,768]"];
	"multiply.1787" [label="multiply.1787 \n bf16[8,128,768]"];
	"add.1789" [label="add.1789 \n bf16[8,128,768]"];
	"reshape.1842" [label="reshape.1842 \n bf16[1024,768]"];
	"p82.1840" [label="p82.1840 \n bf16[3072,768]"];
	"transpose.1841" [label="transpose.1841 \n bf16[768,3072]"];
	"dot.1843" [label="dot.1843 \n bf16[1024,3072]"];
	"reshape.1844" [label="reshape.1844 \n bf16[8,128,3072]"];
	"p81.1838" [label="p81.1838 \n bf16[3072]"];
	"broadcast.1845" [label="broadcast.1845 \n bf16[8,128,3072]"];
	"add.1846" [label="add.1846 \n bf16[8,128,3072]"];
	"reshape.1856" [label="reshape.1856 \n bf16[1024,3072]"];
	"p80.1831" [label="p80.1831 \n bf16[768,3072]"];
	"transpose.1832" [label="transpose.1832 \n bf16[3072,768]"];
	"dot.1857" [label="dot.1857 \n bf16[1024,768]"];
	"reshape.1858" [label="reshape.1858 \n bf16[8,128,768]"];
	"p79.1829" [label="p79.1829 \n bf16[768]"];
	"broadcast.1859" [label="broadcast.1859 \n bf16[8,128,768]"];
	"add.1860" [label="add.1860 \n bf16[8,128,768]"];
	"constant.44" [label="constant.44 \n s64[] constant(214013), metadata="];
	"multiply.45" [label="multiply.45 \n s64[] multiply(s64[] %constant.44, s64[] %add.43), metadata="];
	"constant.46" [label="constant.46 \n s64[] constant(2531011), metadata="];
	"add.47" [label="add.47 \n s64[] add(s64[] %multiply.45, s64[] %constant.46), metadata="];
	"convert.1797" [label="convert.1797 \n u64[] convert(s64[] %add.47), metadata="];
	"reshape.1801" [label="reshape.1801 \n u64[1]"];
	"constant.221" [label="constant.221 \n u64[1]"];
	"concatenate.1803" [label="concatenate.1803 \n u64[2]"];
	"constant.1807" [label="constant.1807 \n u32[] constant(9), metadata="];
	"broadcast.1808" [label="broadcast.1808 \n u32[8,128,768]"];
	"convert.1810" [label="convert.1810 \n f32[8,128,768]"];
	"constant.227" [label="constant.227 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.33" [label="broadcast.33 \n f32[8,128,768]"];
	"multiply.1816" [label="multiply.1816 \n f32[8,128,768]"];
	"convert.1819" [label="convert.1819 \n bf16[8,128,768]"];
	"broadcast.1794" [label="broadcast.1794 \n bf16[8,128,768]"];
	"compare.1820" [label="compare.1820 \n pred[8,128,768]"];
	"constant.23" [label="constant.23 \n bf16[] constant(1), metadata="];
	"broadcast.34" [label="broadcast.34 \n bf16[8,128,768]"];
	"broadcast.165" [label="broadcast.165 \n bf16[8,128,768]"];
	"select.11" [label="select.11 \n bf16[8,128,768]"];
	"multiply.1863" [label="multiply.1863 \n bf16[8,128,768]"];
	"add.1864" [label="add.1864 \n bf16[8,128,768]"];
	"reshape.1865" [label="reshape.1865 \n bf16[1,1024,768]"];
	"constant.699" [label="constant.699 \n bf16[] constant(1), metadata="];
	"broadcast.703" [label="broadcast.703 \n bf16[1024]"];
	"constant.694" [label="constant.694 \n bf16[] constant(0), metadata="];
	"broadcast.698" [label="broadcast.698 \n bf16[1024]"];
	"reshape.1874" [label="reshape.1874 \n bf16[8,128,768]"];
	"p25.683" [label="p25.683 \n bf16[768]"];
	"broadcast.1877" [label="broadcast.1877 \n bf16[8,128,768]"];
	"multiply.1880" [label="multiply.1880 \n bf16[8,128,768]"];
	"add.1882" [label="add.1882 \n bf16[8,128,768]"];
	"reshape.2015" [label="reshape.2015 \n bf16[1024,768]"];
	"p91.2013" [label="p91.2013 \n bf16[768,768]"];
	"transpose.2014" [label="transpose.2014 \n bf16[768,768]"];
	"dot.2016" [label="dot.2016 \n bf16[1024,768]"];
	"reshape.2017" [label="reshape.2017 \n bf16[8,128,768]"];
	"p90.2011" [label="p90.2011 \n bf16[768]"];
	"broadcast.2018" [label="broadcast.2018 \n bf16[8,128,768]"];
	"add.2019" [label="add.2019 \n bf16[8,128,768]"];
	"reshape.2022" [label="reshape.2022 \n bf16[8,128,12,64]"];
	"transpose.2023" [label="transpose.2023 \n bf16[8,12,128,64]"];
	"reshape.2025" [label="reshape.2025 \n bf16[96,128,64]"];
	"reshape.1994" [label="reshape.1994 \n bf16[1024,768]"];
	"p89.1992" [label="p89.1992 \n bf16[768,768]"];
	"transpose.1993" [label="transpose.1993 \n bf16[768,768]"];
	"dot.1995" [label="dot.1995 \n bf16[1024,768]"];
	"reshape.1996" [label="reshape.1996 \n bf16[8,128,768]"];
	"p88.1990" [label="p88.1990 \n bf16[768]"];
	"broadcast.1997" [label="broadcast.1997 \n bf16[8,128,768]"];
	"add.1998" [label="add.1998 \n bf16[8,128,768]"];
	"reshape.2001" [label="reshape.2001 \n bf16[8,128,12,64]"];
	"transpose.2003" [label="transpose.2003 \n bf16[8,12,64,128]"];
	"reshape.2005" [label="reshape.2005 \n bf16[96,64,128]"];
	"dot.2026" [label="dot.2026 \n bf16[96,128,128]"];
	"broadcast.452" [label="broadcast.452 \n bf16[96,128,128]"];
	"divide.42" [label="divide.42 \n bf16[96,128,128]"];
	"reshape.1236" [label="reshape.1236 \n bf16[8,12,128,128]"];
	"broadcast.2032" [label="broadcast.2032 \n bf16[8,12,128,128]"];
	"add.2033" [label="add.2033 \n bf16[8,12,128,128]"];
	"constant.2034" [label="constant.2034 \n bf16[] constant(-inf), metadata="];
	"reduce.2039" [label="reduce.2039 \n bf16[8,12,128]"];
	"broadcast.2040" [label="broadcast.2040 \n bf16[8,12,128,128]"];
	"subtract.2041" [label="subtract.2041 \n bf16[8,12,128,128]"];
	"exponential.2042" [label="exponential.2042 \n bf16[8,12,128,128]"];
	"constant.2043" [label="constant.2043 \n bf16[] constant(0), metadata="];
	"reduce.2048" [label="reduce.2048 \n bf16[8,12,128]"];
	"broadcast.2049" [label="broadcast.2049 \n bf16[8,12,128,128]"];
	"divide.2050" [label="divide.2050 \n bf16[8,12,128,128]"];
	"constant.48" [label="constant.48 \n s64[] constant(214013), metadata="];
	"multiply.49" [label="multiply.49 \n s64[] multiply(s64[] %constant.48, s64[] %add.47), metadata="];
	"constant.50" [label="constant.50 \n s64[] constant(2531011), metadata="];
	"add.51" [label="add.51 \n s64[] add(s64[] %multiply.49, s64[] %constant.50), metadata="];
	"convert.1952" [label="convert.1952 \n u64[] convert(s64[] %add.51), metadata="];
	"reshape.1956" [label="reshape.1956 \n u64[1]"];
	"constant.229" [label="constant.229 \n u64[1]"];
	"concatenate.1958" [label="concatenate.1958 \n u64[2]"];
	"constant.1962" [label="constant.1962 \n u32[] constant(9), metadata="];
	"broadcast.1963" [label="broadcast.1963 \n u32[8,12,128,128]"];
	"convert.1965" [label="convert.1965 \n f32[8,12,128,128]"];
	"constant.234" [label="constant.234 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.36" [label="broadcast.36 \n f32[8,12,128,128]"];
	"multiply.1971" [label="multiply.1971 \n f32[8,12,128,128]"];
	"convert.1974" [label="convert.1974 \n bf16[8,12,128,128]"];
	"broadcast.1949" [label="broadcast.1949 \n bf16[8,12,128,128]"];
	"compare.1975" [label="compare.1975 \n pred[8,12,128,128]"];
	"constant.25" [label="constant.25 \n bf16[] constant(1), metadata="];
	"broadcast.37" [label="broadcast.37 \n bf16[8,12,128,128]"];
	"broadcast.173" [label="broadcast.173 \n bf16[8,12,128,128]"];
	"select.12" [label="select.12 \n bf16[8,12,128,128]"];
	"multiply.2051" [label="multiply.2051 \n bf16[8,12,128,128]"];
	"reshape.2053" [label="reshape.2053 \n bf16[96,128,128]"];
	"reshape.1935" [label="reshape.1935 \n bf16[1024,768]"];
	"p87.1933" [label="p87.1933 \n bf16[768,768]"];
	"transpose.1934" [label="transpose.1934 \n bf16[768,768]"];
	"dot.1936" [label="dot.1936 \n bf16[1024,768]"];
	"reshape.1937" [label="reshape.1937 \n bf16[8,128,768]"];
	"p86.1931" [label="p86.1931 \n bf16[768]"];
	"broadcast.1938" [label="broadcast.1938 \n bf16[8,128,768]"];
	"add.1939" [label="add.1939 \n bf16[8,128,768]"];
	"reshape.1942" [label="reshape.1942 \n bf16[8,128,12,64]"];
	"transpose.1943" [label="transpose.1943 \n bf16[8,12,128,64]"];
	"reshape.1945" [label="reshape.1945 \n bf16[96,128,64]"];
	"dot.2054" [label="dot.2054 \n bf16[96,128,64]"];
	"reshape.2055" [label="reshape.2055 \n bf16[8,12,128,64]"];
	"transpose.2056" [label="transpose.2056 \n bf16[8,128,12,64]"];
	"reshape.2058" [label="reshape.2058 \n bf16[1024,768]"];
	"p85.1924" [label="p85.1924 \n bf16[768,768]"];
	"transpose.1925" [label="transpose.1925 \n bf16[768,768]"];
	"dot.2059" [label="dot.2059 \n bf16[1024,768]"];
	"reshape.2060" [label="reshape.2060 \n bf16[8,128,768]"];
	"p84.1922" [label="p84.1922 \n bf16[768]"];
	"broadcast.2061" [label="broadcast.2061 \n bf16[8,128,768]"];
	"add.2062" [label="add.2062 \n bf16[8,128,768]"];
	"constant.52" [label="constant.52 \n s64[] constant(214013), metadata="];
	"multiply.53" [label="multiply.53 \n s64[] multiply(s64[] %constant.52, s64[] %add.51), metadata="];
	"constant.54" [label="constant.54 \n s64[] constant(2531011), metadata="];
	"add.55" [label="add.55 \n s64[] add(s64[] %multiply.53, s64[] %constant.54), metadata="];
	"convert.1890" [label="convert.1890 \n u64[] convert(s64[] %add.55), metadata="];
	"reshape.1894" [label="reshape.1894 \n u64[1]"];
	"constant.236" [label="constant.236 \n u64[1]"];
	"concatenate.1896" [label="concatenate.1896 \n u64[2]"];
	"constant.1900" [label="constant.1900 \n u32[] constant(9), metadata="];
	"broadcast.1901" [label="broadcast.1901 \n u32[8,128,768]"];
	"convert.1903" [label="convert.1903 \n f32[8,128,768]"];
	"constant.241" [label="constant.241 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.38" [label="broadcast.38 \n f32[8,128,768]"];
	"multiply.1909" [label="multiply.1909 \n f32[8,128,768]"];
	"convert.1912" [label="convert.1912 \n bf16[8,128,768]"];
	"broadcast.1887" [label="broadcast.1887 \n bf16[8,128,768]"];
	"compare.1913" [label="compare.1913 \n pred[8,128,768]"];
	"constant.27" [label="constant.27 \n bf16[] constant(1), metadata="];
	"broadcast.39" [label="broadcast.39 \n bf16[8,128,768]"];
	"broadcast.178" [label="broadcast.178 \n bf16[8,128,768]"];
	"select.13" [label="select.13 \n bf16[8,128,768]"];
	"multiply.2065" [label="multiply.2065 \n bf16[8,128,768]"];
	"add.2066" [label="add.2066 \n bf16[8,128,768]"];
	"reshape.2067" [label="reshape.2067 \n bf16[1,1024,768]"];
	"constant.672" [label="constant.672 \n bf16[] constant(1), metadata="];
	"broadcast.676" [label="broadcast.676 \n bf16[1024]"];
	"constant.667" [label="constant.667 \n bf16[] constant(0), metadata="];
	"broadcast.671" [label="broadcast.671 \n bf16[1024]"];
	"reshape.2076" [label="reshape.2076 \n bf16[8,128,768]"];
	"p24.656" [label="p24.656 \n bf16[768]"];
	"broadcast.2079" [label="broadcast.2079 \n bf16[8,128,768]"];
	"multiply.2082" [label="multiply.2082 \n bf16[8,128,768]"];
	"add.2084" [label="add.2084 \n bf16[8,128,768]"];
	"reshape.2137" [label="reshape.2137 \n bf16[1024,768]"];
	"p96.2135" [label="p96.2135 \n bf16[3072,768]"];
	"transpose.2136" [label="transpose.2136 \n bf16[768,3072]"];
	"dot.2138" [label="dot.2138 \n bf16[1024,3072]"];
	"reshape.2139" [label="reshape.2139 \n bf16[8,128,3072]"];
	"p95.2133" [label="p95.2133 \n bf16[3072]"];
	"broadcast.2140" [label="broadcast.2140 \n bf16[8,128,3072]"];
	"add.2141" [label="add.2141 \n bf16[8,128,3072]"];
	"reshape.2151" [label="reshape.2151 \n bf16[1024,3072]"];
	"p94.2126" [label="p94.2126 \n bf16[768,3072]"];
	"transpose.2127" [label="transpose.2127 \n bf16[3072,768]"];
	"dot.2152" [label="dot.2152 \n bf16[1024,768]"];
	"reshape.2153" [label="reshape.2153 \n bf16[8,128,768]"];
	"p93.2124" [label="p93.2124 \n bf16[768]"];
	"broadcast.2154" [label="broadcast.2154 \n bf16[8,128,768]"];
	"add.2155" [label="add.2155 \n bf16[8,128,768]"];
	"constant.56" [label="constant.56 \n s64[] constant(214013), metadata="];
	"multiply.57" [label="multiply.57 \n s64[] multiply(s64[] %constant.56, s64[] %add.55), metadata="];
	"constant.58" [label="constant.58 \n s64[] constant(2531011), metadata="];
	"add.59" [label="add.59 \n s64[] add(s64[] %multiply.57, s64[] %constant.58), metadata="];
	"convert.2092" [label="convert.2092 \n u64[] convert(s64[] %add.59), metadata="];
	"reshape.2096" [label="reshape.2096 \n u64[1]"];
	"constant.243" [label="constant.243 \n u64[1]"];
	"concatenate.2098" [label="concatenate.2098 \n u64[2]"];
	"constant.2102" [label="constant.2102 \n u32[] constant(9), metadata="];
	"broadcast.2103" [label="broadcast.2103 \n u32[8,128,768]"];
	"convert.2105" [label="convert.2105 \n f32[8,128,768]"];
	"constant.248" [label="constant.248 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.40" [label="broadcast.40 \n f32[8,128,768]"];
	"multiply.2111" [label="multiply.2111 \n f32[8,128,768]"];
	"convert.2114" [label="convert.2114 \n bf16[8,128,768]"];
	"broadcast.2089" [label="broadcast.2089 \n bf16[8,128,768]"];
	"compare.2115" [label="compare.2115 \n pred[8,128,768]"];
	"constant.29" [label="constant.29 \n bf16[] constant(1), metadata="];
	"broadcast.41" [label="broadcast.41 \n bf16[8,128,768]"];
	"broadcast.188" [label="broadcast.188 \n bf16[8,128,768]"];
	"select.14" [label="select.14 \n bf16[8,128,768]"];
	"multiply.2158" [label="multiply.2158 \n bf16[8,128,768]"];
	"add.2159" [label="add.2159 \n bf16[8,128,768]"];
	"reshape.2160" [label="reshape.2160 \n bf16[1,1024,768]"];
	"constant.645" [label="constant.645 \n bf16[] constant(1), metadata="];
	"broadcast.649" [label="broadcast.649 \n bf16[1024]"];
	"constant.640" [label="constant.640 \n bf16[] constant(0), metadata="];
	"broadcast.644" [label="broadcast.644 \n bf16[1024]"];
	"reshape.2169" [label="reshape.2169 \n bf16[8,128,768]"];
	"p23.629" [label="p23.629 \n bf16[768]"];
	"broadcast.2172" [label="broadcast.2172 \n bf16[8,128,768]"];
	"multiply.2175" [label="multiply.2175 \n bf16[8,128,768]"];
	"add.2177" [label="add.2177 \n bf16[8,128,768]"];
	"reshape.2310" [label="reshape.2310 \n bf16[1024,768]"];
	"p105.2308" [label="p105.2308 \n bf16[768,768]"];
	"transpose.2309" [label="transpose.2309 \n bf16[768,768]"];
	"dot.2311" [label="dot.2311 \n bf16[1024,768]"];
	"reshape.2312" [label="reshape.2312 \n bf16[8,128,768]"];
	"p104.2306" [label="p104.2306 \n bf16[768]"];
	"broadcast.2313" [label="broadcast.2313 \n bf16[8,128,768]"];
	"add.2314" [label="add.2314 \n bf16[8,128,768]"];
	"reshape.2317" [label="reshape.2317 \n bf16[8,128,12,64]"];
	"transpose.2318" [label="transpose.2318 \n bf16[8,12,128,64]"];
	"reshape.2320" [label="reshape.2320 \n bf16[96,128,64]"];
	"reshape.2289" [label="reshape.2289 \n bf16[1024,768]"];
	"p103.2287" [label="p103.2287 \n bf16[768,768]"];
	"transpose.2288" [label="transpose.2288 \n bf16[768,768]"];
	"dot.2290" [label="dot.2290 \n bf16[1024,768]"];
	"reshape.2291" [label="reshape.2291 \n bf16[8,128,768]"];
	"p102.2285" [label="p102.2285 \n bf16[768]"];
	"broadcast.2292" [label="broadcast.2292 \n bf16[8,128,768]"];
	"add.2293" [label="add.2293 \n bf16[8,128,768]"];
	"reshape.2296" [label="reshape.2296 \n bf16[8,128,12,64]"];
	"transpose.2298" [label="transpose.2298 \n bf16[8,12,64,128]"];
	"reshape.2300" [label="reshape.2300 \n bf16[96,64,128]"];
	"dot.2321" [label="dot.2321 \n bf16[96,128,128]"];
	"broadcast.456" [label="broadcast.456 \n bf16[96,128,128]"];
	"divide.43" [label="divide.43 \n bf16[96,128,128]"];
	"reshape.1240" [label="reshape.1240 \n bf16[8,12,128,128]"];
	"broadcast.2327" [label="broadcast.2327 \n bf16[8,12,128,128]"];
	"add.2328" [label="add.2328 \n bf16[8,12,128,128]"];
	"constant.2329" [label="constant.2329 \n bf16[] constant(-inf), metadata="];
	"reduce.2334" [label="reduce.2334 \n bf16[8,12,128]"];
	"broadcast.2335" [label="broadcast.2335 \n bf16[8,12,128,128]"];
	"subtract.2336" [label="subtract.2336 \n bf16[8,12,128,128]"];
	"exponential.2337" [label="exponential.2337 \n bf16[8,12,128,128]"];
	"constant.2338" [label="constant.2338 \n bf16[] constant(0), metadata="];
	"reduce.2343" [label="reduce.2343 \n bf16[8,12,128]"];
	"broadcast.2344" [label="broadcast.2344 \n bf16[8,12,128,128]"];
	"divide.2345" [label="divide.2345 \n bf16[8,12,128,128]"];
	"constant.60" [label="constant.60 \n s64[] constant(214013), metadata="];
	"multiply.61" [label="multiply.61 \n s64[] multiply(s64[] %constant.60, s64[] %add.59), metadata="];
	"constant.62" [label="constant.62 \n s64[] constant(2531011), metadata="];
	"add.63" [label="add.63 \n s64[] add(s64[] %multiply.61, s64[] %constant.62), metadata="];
	"convert.2247" [label="convert.2247 \n u64[] convert(s64[] %add.63), metadata="];
	"reshape.2251" [label="reshape.2251 \n u64[1]"];
	"constant.251" [label="constant.251 \n u64[1]"];
	"concatenate.2253" [label="concatenate.2253 \n u64[2]"];
	"constant.2257" [label="constant.2257 \n u32[] constant(9), metadata="];
	"broadcast.2258" [label="broadcast.2258 \n u32[8,12,128,128]"];
	"convert.2260" [label="convert.2260 \n f32[8,12,128,128]"];
	"constant.256" [label="constant.256 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.43" [label="broadcast.43 \n f32[8,12,128,128]"];
	"multiply.2266" [label="multiply.2266 \n f32[8,12,128,128]"];
	"convert.2269" [label="convert.2269 \n bf16[8,12,128,128]"];
	"broadcast.2244" [label="broadcast.2244 \n bf16[8,12,128,128]"];
	"compare.2270" [label="compare.2270 \n pred[8,12,128,128]"];
	"constant.31" [label="constant.31 \n bf16[] constant(1), metadata="];
	"broadcast.44" [label="broadcast.44 \n bf16[8,12,128,128]"];
	"broadcast.197" [label="broadcast.197 \n bf16[8,12,128,128]"];
	"select.15" [label="select.15 \n bf16[8,12,128,128]"];
	"multiply.2346" [label="multiply.2346 \n bf16[8,12,128,128]"];
	"reshape.2348" [label="reshape.2348 \n bf16[96,128,128]"];
	"reshape.2230" [label="reshape.2230 \n bf16[1024,768]"];
	"p101.2228" [label="p101.2228 \n bf16[768,768]"];
	"transpose.2229" [label="transpose.2229 \n bf16[768,768]"];
	"dot.2231" [label="dot.2231 \n bf16[1024,768]"];
	"reshape.2232" [label="reshape.2232 \n bf16[8,128,768]"];
	"p100.2226" [label="p100.2226 \n bf16[768]"];
	"broadcast.2233" [label="broadcast.2233 \n bf16[8,128,768]"];
	"add.2234" [label="add.2234 \n bf16[8,128,768]"];
	"reshape.2237" [label="reshape.2237 \n bf16[8,128,12,64]"];
	"transpose.2238" [label="transpose.2238 \n bf16[8,12,128,64]"];
	"reshape.2240" [label="reshape.2240 \n bf16[96,128,64]"];
	"dot.2349" [label="dot.2349 \n bf16[96,128,64]"];
	"reshape.2350" [label="reshape.2350 \n bf16[8,12,128,64]"];
	"transpose.2351" [label="transpose.2351 \n bf16[8,128,12,64]"];
	"reshape.2353" [label="reshape.2353 \n bf16[1024,768]"];
	"p99.2219" [label="p99.2219 \n bf16[768,768]"];
	"transpose.2220" [label="transpose.2220 \n bf16[768,768]"];
	"dot.2354" [label="dot.2354 \n bf16[1024,768]"];
	"reshape.2355" [label="reshape.2355 \n bf16[8,128,768]"];
	"p98.2217" [label="p98.2217 \n bf16[768]"];
	"broadcast.2356" [label="broadcast.2356 \n bf16[8,128,768]"];
	"add.2357" [label="add.2357 \n bf16[8,128,768]"];
	"constant.64" [label="constant.64 \n s64[] constant(214013), metadata="];
	"multiply.65" [label="multiply.65 \n s64[] multiply(s64[] %constant.64, s64[] %add.63), metadata="];
	"constant.66" [label="constant.66 \n s64[] constant(2531011), metadata="];
	"add.67" [label="add.67 \n s64[] add(s64[] %multiply.65, s64[] %constant.66), metadata="];
	"convert.2185" [label="convert.2185 \n u64[] convert(s64[] %add.67), metadata="];
	"reshape.2189" [label="reshape.2189 \n u64[1]"];
	"constant.258" [label="constant.258 \n u64[1]"];
	"concatenate.2191" [label="concatenate.2191 \n u64[2]"];
	"constant.2195" [label="constant.2195 \n u32[] constant(9), metadata="];
	"broadcast.2196" [label="broadcast.2196 \n u32[8,128,768]"];
	"convert.2198" [label="convert.2198 \n f32[8,128,768]"];
	"constant.263" [label="constant.263 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.45" [label="broadcast.45 \n f32[8,128,768]"];
	"multiply.2204" [label="multiply.2204 \n f32[8,128,768]"];
	"convert.2207" [label="convert.2207 \n bf16[8,128,768]"];
	"broadcast.2182" [label="broadcast.2182 \n bf16[8,128,768]"];
	"compare.2208" [label="compare.2208 \n pred[8,128,768]"];
	"constant.33" [label="constant.33 \n bf16[] constant(1), metadata="];
	"broadcast.46" [label="broadcast.46 \n bf16[8,128,768]"];
	"broadcast.203" [label="broadcast.203 \n bf16[8,128,768]"];
	"select.16" [label="select.16 \n bf16[8,128,768]"];
	"multiply.2360" [label="multiply.2360 \n bf16[8,128,768]"];
	"add.2361" [label="add.2361 \n bf16[8,128,768]"];
	"reshape.2362" [label="reshape.2362 \n bf16[1,1024,768]"];
	"constant.618" [label="constant.618 \n bf16[] constant(1), metadata="];
	"broadcast.622" [label="broadcast.622 \n bf16[1024]"];
	"constant.613" [label="constant.613 \n bf16[] constant(0), metadata="];
	"broadcast.617" [label="broadcast.617 \n bf16[1024]"];
	"reshape.2371" [label="reshape.2371 \n bf16[8,128,768]"];
	"p22.602" [label="p22.602 \n bf16[768]"];
	"broadcast.2374" [label="broadcast.2374 \n bf16[8,128,768]"];
	"multiply.2377" [label="multiply.2377 \n bf16[8,128,768]"];
	"add.2379" [label="add.2379 \n bf16[8,128,768]"];
	"reshape.2432" [label="reshape.2432 \n bf16[1024,768]"];
	"p110.2430" [label="p110.2430 \n bf16[3072,768]"];
	"transpose.2431" [label="transpose.2431 \n bf16[768,3072]"];
	"dot.2433" [label="dot.2433 \n bf16[1024,3072]"];
	"reshape.2434" [label="reshape.2434 \n bf16[8,128,3072]"];
	"p109.2428" [label="p109.2428 \n bf16[3072]"];
	"broadcast.2435" [label="broadcast.2435 \n bf16[8,128,3072]"];
	"add.2436" [label="add.2436 \n bf16[8,128,3072]"];
	"reshape.2446" [label="reshape.2446 \n bf16[1024,3072]"];
	"p108.2421" [label="p108.2421 \n bf16[768,3072]"];
	"transpose.2422" [label="transpose.2422 \n bf16[3072,768]"];
	"dot.2447" [label="dot.2447 \n bf16[1024,768]"];
	"reshape.2448" [label="reshape.2448 \n bf16[8,128,768]"];
	"p107.2419" [label="p107.2419 \n bf16[768]"];
	"broadcast.2449" [label="broadcast.2449 \n bf16[8,128,768]"];
	"add.2450" [label="add.2450 \n bf16[8,128,768]"];
	"constant.68" [label="constant.68 \n s64[] constant(214013), metadata="];
	"multiply.69" [label="multiply.69 \n s64[] multiply(s64[] %constant.68, s64[] %add.67), metadata="];
	"constant.70" [label="constant.70 \n s64[] constant(2531011), metadata="];
	"add.71" [label="add.71 \n s64[] add(s64[] %multiply.69, s64[] %constant.70), metadata="];
	"convert.2387" [label="convert.2387 \n u64[] convert(s64[] %add.71), metadata="];
	"reshape.2391" [label="reshape.2391 \n u64[1]"];
	"constant.265" [label="constant.265 \n u64[1]"];
	"concatenate.2393" [label="concatenate.2393 \n u64[2]"];
	"constant.2397" [label="constant.2397 \n u32[] constant(9), metadata="];
	"broadcast.2398" [label="broadcast.2398 \n u32[8,128,768]"];
	"convert.2400" [label="convert.2400 \n f32[8,128,768]"];
	"constant.270" [label="constant.270 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.47" [label="broadcast.47 \n f32[8,128,768]"];
	"multiply.2406" [label="multiply.2406 \n f32[8,128,768]"];
	"convert.2409" [label="convert.2409 \n bf16[8,128,768]"];
	"broadcast.2384" [label="broadcast.2384 \n bf16[8,128,768]"];
	"compare.2410" [label="compare.2410 \n pred[8,128,768]"];
	"constant.35" [label="constant.35 \n bf16[] constant(1), metadata="];
	"broadcast.48" [label="broadcast.48 \n bf16[8,128,768]"];
	"broadcast.214" [label="broadcast.214 \n bf16[8,128,768]"];
	"select.17" [label="select.17 \n bf16[8,128,768]"];
	"multiply.2453" [label="multiply.2453 \n bf16[8,128,768]"];
	"add.2454" [label="add.2454 \n bf16[8,128,768]"];
	"reshape.2455" [label="reshape.2455 \n bf16[1,1024,768]"];
	"constant.591" [label="constant.591 \n bf16[] constant(1), metadata="];
	"broadcast.595" [label="broadcast.595 \n bf16[1024]"];
	"constant.586" [label="constant.586 \n bf16[] constant(0), metadata="];
	"broadcast.590" [label="broadcast.590 \n bf16[1024]"];
	"reshape.2464" [label="reshape.2464 \n bf16[8,128,768]"];
	"p21.575" [label="p21.575 \n bf16[768]"];
	"broadcast.2467" [label="broadcast.2467 \n bf16[8,128,768]"];
	"multiply.2470" [label="multiply.2470 \n bf16[8,128,768]"];
	"add.2472" [label="add.2472 \n bf16[8,128,768]"];
	"reshape.2605" [label="reshape.2605 \n bf16[1024,768]"];
	"p119.2603" [label="p119.2603 \n bf16[768,768]"];
	"transpose.2604" [label="transpose.2604 \n bf16[768,768]"];
	"dot.2606" [label="dot.2606 \n bf16[1024,768]"];
	"reshape.2607" [label="reshape.2607 \n bf16[8,128,768]"];
	"p118.2601" [label="p118.2601 \n bf16[768]"];
	"broadcast.2608" [label="broadcast.2608 \n bf16[8,128,768]"];
	"add.2609" [label="add.2609 \n bf16[8,128,768]"];
	"reshape.2612" [label="reshape.2612 \n bf16[8,128,12,64]"];
	"transpose.2613" [label="transpose.2613 \n bf16[8,12,128,64]"];
	"reshape.2615" [label="reshape.2615 \n bf16[96,128,64]"];
	"reshape.2584" [label="reshape.2584 \n bf16[1024,768]"];
	"p117.2582" [label="p117.2582 \n bf16[768,768]"];
	"transpose.2583" [label="transpose.2583 \n bf16[768,768]"];
	"dot.2585" [label="dot.2585 \n bf16[1024,768]"];
	"reshape.2586" [label="reshape.2586 \n bf16[8,128,768]"];
	"p116.2580" [label="p116.2580 \n bf16[768]"];
	"broadcast.2587" [label="broadcast.2587 \n bf16[8,128,768]"];
	"add.2588" [label="add.2588 \n bf16[8,128,768]"];
	"reshape.2591" [label="reshape.2591 \n bf16[8,128,12,64]"];
	"transpose.2593" [label="transpose.2593 \n bf16[8,12,64,128]"];
	"reshape.2595" [label="reshape.2595 \n bf16[96,64,128]"];
	"dot.2616" [label="dot.2616 \n bf16[96,128,128]"];
	"broadcast.459" [label="broadcast.459 \n bf16[96,128,128]"];
	"divide.44" [label="divide.44 \n bf16[96,128,128]"];
	"reshape.1243" [label="reshape.1243 \n bf16[8,12,128,128]"];
	"broadcast.2622" [label="broadcast.2622 \n bf16[8,12,128,128]"];
	"add.2623" [label="add.2623 \n bf16[8,12,128,128]"];
	"constant.2624" [label="constant.2624 \n bf16[] constant(-inf), metadata="];
	"reduce.2629" [label="reduce.2629 \n bf16[8,12,128]"];
	"broadcast.2630" [label="broadcast.2630 \n bf16[8,12,128,128]"];
	"subtract.2631" [label="subtract.2631 \n bf16[8,12,128,128]"];
	"exponential.2632" [label="exponential.2632 \n bf16[8,12,128,128]"];
	"constant.2633" [label="constant.2633 \n bf16[] constant(0), metadata="];
	"reduce.2638" [label="reduce.2638 \n bf16[8,12,128]"];
	"broadcast.2639" [label="broadcast.2639 \n bf16[8,12,128,128]"];
	"divide.2640" [label="divide.2640 \n bf16[8,12,128,128]"];
	"constant.72" [label="constant.72 \n s64[] constant(214013), metadata="];
	"multiply.73" [label="multiply.73 \n s64[] multiply(s64[] %constant.72, s64[] %add.71), metadata="];
	"constant.74" [label="constant.74 \n s64[] constant(2531011), metadata="];
	"add.75" [label="add.75 \n s64[] add(s64[] %multiply.73, s64[] %constant.74), metadata="];
	"convert.2542" [label="convert.2542 \n u64[] convert(s64[] %add.75), metadata="];
	"reshape.2546" [label="reshape.2546 \n u64[1]"];
	"constant.273" [label="constant.273 \n u64[1]"];
	"concatenate.2548" [label="concatenate.2548 \n u64[2]"];
	"constant.2552" [label="constant.2552 \n u32[] constant(9), metadata="];
	"broadcast.2553" [label="broadcast.2553 \n u32[8,12,128,128]"];
	"convert.2555" [label="convert.2555 \n f32[8,12,128,128]"];
	"constant.278" [label="constant.278 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.50" [label="broadcast.50 \n f32[8,12,128,128]"];
	"multiply.2561" [label="multiply.2561 \n f32[8,12,128,128]"];
	"convert.2564" [label="convert.2564 \n bf16[8,12,128,128]"];
	"broadcast.2539" [label="broadcast.2539 \n bf16[8,12,128,128]"];
	"compare.2565" [label="compare.2565 \n pred[8,12,128,128]"];
	"constant.37" [label="constant.37 \n bf16[] constant(1), metadata="];
	"broadcast.51" [label="broadcast.51 \n bf16[8,12,128,128]"];
	"broadcast.226" [label="broadcast.226 \n bf16[8,12,128,128]"];
	"select.18" [label="select.18 \n bf16[8,12,128,128]"];
	"multiply.2641" [label="multiply.2641 \n bf16[8,12,128,128]"];
	"reshape.2643" [label="reshape.2643 \n bf16[96,128,128]"];
	"reshape.2525" [label="reshape.2525 \n bf16[1024,768]"];
	"p115.2523" [label="p115.2523 \n bf16[768,768]"];
	"transpose.2524" [label="transpose.2524 \n bf16[768,768]"];
	"dot.2526" [label="dot.2526 \n bf16[1024,768]"];
	"reshape.2527" [label="reshape.2527 \n bf16[8,128,768]"];
	"p114.2521" [label="p114.2521 \n bf16[768]"];
	"broadcast.2528" [label="broadcast.2528 \n bf16[8,128,768]"];
	"add.2529" [label="add.2529 \n bf16[8,128,768]"];
	"reshape.2532" [label="reshape.2532 \n bf16[8,128,12,64]"];
	"transpose.2533" [label="transpose.2533 \n bf16[8,12,128,64]"];
	"reshape.2535" [label="reshape.2535 \n bf16[96,128,64]"];
	"dot.2644" [label="dot.2644 \n bf16[96,128,64]"];
	"reshape.2645" [label="reshape.2645 \n bf16[8,12,128,64]"];
	"transpose.2646" [label="transpose.2646 \n bf16[8,128,12,64]"];
	"reshape.2648" [label="reshape.2648 \n bf16[1024,768]"];
	"p113.2514" [label="p113.2514 \n bf16[768,768]"];
	"transpose.2515" [label="transpose.2515 \n bf16[768,768]"];
	"dot.2649" [label="dot.2649 \n bf16[1024,768]"];
	"reshape.2650" [label="reshape.2650 \n bf16[8,128,768]"];
	"p112.2512" [label="p112.2512 \n bf16[768]"];
	"broadcast.2651" [label="broadcast.2651 \n bf16[8,128,768]"];
	"add.2652" [label="add.2652 \n bf16[8,128,768]"];
	"constant.76" [label="constant.76 \n s64[] constant(214013), metadata="];
	"multiply.77" [label="multiply.77 \n s64[] multiply(s64[] %constant.76, s64[] %add.75), metadata="];
	"constant.78" [label="constant.78 \n s64[] constant(2531011), metadata="];
	"add.79" [label="add.79 \n s64[] add(s64[] %multiply.77, s64[] %constant.78), metadata="];
	"convert.2480" [label="convert.2480 \n u64[] convert(s64[] %add.79), metadata="];
	"reshape.2484" [label="reshape.2484 \n u64[1]"];
	"constant.280" [label="constant.280 \n u64[1]"];
	"concatenate.2486" [label="concatenate.2486 \n u64[2]"];
	"constant.2490" [label="constant.2490 \n u32[] constant(9), metadata="];
	"broadcast.2491" [label="broadcast.2491 \n u32[8,128,768]"];
	"convert.2493" [label="convert.2493 \n f32[8,128,768]"];
	"constant.285" [label="constant.285 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.52" [label="broadcast.52 \n f32[8,128,768]"];
	"multiply.2499" [label="multiply.2499 \n f32[8,128,768]"];
	"convert.2502" [label="convert.2502 \n bf16[8,128,768]"];
	"broadcast.2477" [label="broadcast.2477 \n bf16[8,128,768]"];
	"compare.2503" [label="compare.2503 \n pred[8,128,768]"];
	"constant.39" [label="constant.39 \n bf16[] constant(1), metadata="];
	"broadcast.53" [label="broadcast.53 \n bf16[8,128,768]"];
	"broadcast.233" [label="broadcast.233 \n bf16[8,128,768]"];
	"select.19" [label="select.19 \n bf16[8,128,768]"];
	"multiply.2655" [label="multiply.2655 \n bf16[8,128,768]"];
	"add.2656" [label="add.2656 \n bf16[8,128,768]"];
	"reshape.2657" [label="reshape.2657 \n bf16[1,1024,768]"];
	"constant.564" [label="constant.564 \n bf16[] constant(1), metadata="];
	"broadcast.568" [label="broadcast.568 \n bf16[1024]"];
	"constant.559" [label="constant.559 \n bf16[] constant(0), metadata="];
	"broadcast.563" [label="broadcast.563 \n bf16[1024]"];
	"reshape.2666" [label="reshape.2666 \n bf16[8,128,768]"];
	"p20.548" [label="p20.548 \n bf16[768]"];
	"broadcast.2669" [label="broadcast.2669 \n bf16[8,128,768]"];
	"multiply.2672" [label="multiply.2672 \n bf16[8,128,768]"];
	"add.2674" [label="add.2674 \n bf16[8,128,768]"];
	"reshape.2727" [label="reshape.2727 \n bf16[1024,768]"];
	"p124.2725" [label="p124.2725 \n bf16[3072,768]"];
	"transpose.2726" [label="transpose.2726 \n bf16[768,3072]"];
	"dot.2728" [label="dot.2728 \n bf16[1024,3072]"];
	"reshape.2729" [label="reshape.2729 \n bf16[8,128,3072]"];
	"p123.2723" [label="p123.2723 \n bf16[3072]"];
	"broadcast.2730" [label="broadcast.2730 \n bf16[8,128,3072]"];
	"add.2731" [label="add.2731 \n bf16[8,128,3072]"];
	"reshape.2741" [label="reshape.2741 \n bf16[1024,3072]"];
	"p122.2716" [label="p122.2716 \n bf16[768,3072]"];
	"transpose.2717" [label="transpose.2717 \n bf16[3072,768]"];
	"dot.2742" [label="dot.2742 \n bf16[1024,768]"];
	"reshape.2743" [label="reshape.2743 \n bf16[8,128,768]"];
	"p121.2714" [label="p121.2714 \n bf16[768]"];
	"broadcast.2744" [label="broadcast.2744 \n bf16[8,128,768]"];
	"add.2745" [label="add.2745 \n bf16[8,128,768]"];
	"constant.80" [label="constant.80 \n s64[] constant(214013), metadata="];
	"multiply.81" [label="multiply.81 \n s64[] multiply(s64[] %constant.80, s64[] %add.79), metadata="];
	"constant.82" [label="constant.82 \n s64[] constant(2531011), metadata="];
	"add.83" [label="add.83 \n s64[] add(s64[] %multiply.81, s64[] %constant.82), metadata="];
	"convert.2682" [label="convert.2682 \n u64[] convert(s64[] %add.83), metadata="];
	"reshape.2686" [label="reshape.2686 \n u64[1]"];
	"constant.287" [label="constant.287 \n u64[1]"];
	"concatenate.2688" [label="concatenate.2688 \n u64[2]"];
	"constant.2692" [label="constant.2692 \n u32[] constant(9), metadata="];
	"broadcast.2693" [label="broadcast.2693 \n u32[8,128,768]"];
	"convert.2695" [label="convert.2695 \n f32[8,128,768]"];
	"constant.292" [label="constant.292 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.54" [label="broadcast.54 \n f32[8,128,768]"];
	"multiply.2701" [label="multiply.2701 \n f32[8,128,768]"];
	"convert.2704" [label="convert.2704 \n bf16[8,128,768]"];
	"broadcast.2679" [label="broadcast.2679 \n bf16[8,128,768]"];
	"compare.2705" [label="compare.2705 \n pred[8,128,768]"];
	"constant.41" [label="constant.41 \n bf16[] constant(1), metadata="];
	"broadcast.55" [label="broadcast.55 \n bf16[8,128,768]"];
	"broadcast.245" [label="broadcast.245 \n bf16[8,128,768]"];
	"select.20" [label="select.20 \n bf16[8,128,768]"];
	"multiply.2748" [label="multiply.2748 \n bf16[8,128,768]"];
	"add.2749" [label="add.2749 \n bf16[8,128,768]"];
	"reshape.2750" [label="reshape.2750 \n bf16[1,1024,768]"];
	"constant.537" [label="constant.537 \n bf16[] constant(1), metadata="];
	"broadcast.541" [label="broadcast.541 \n bf16[1024]"];
	"constant.532" [label="constant.532 \n bf16[] constant(0), metadata="];
	"broadcast.536" [label="broadcast.536 \n bf16[1024]"];
	"reshape.2759" [label="reshape.2759 \n bf16[8,128,768]"];
	"p19.521" [label="p19.521 \n bf16[768]"];
	"broadcast.2762" [label="broadcast.2762 \n bf16[8,128,768]"];
	"multiply.2765" [label="multiply.2765 \n bf16[8,128,768]"];
	"add.2767" [label="add.2767 \n bf16[8,128,768]"];
	"reshape.2900" [label="reshape.2900 \n bf16[1024,768]"];
	"p133.2898" [label="p133.2898 \n bf16[768,768]"];
	"transpose.2899" [label="transpose.2899 \n bf16[768,768]"];
	"dot.2901" [label="dot.2901 \n bf16[1024,768]"];
	"reshape.2902" [label="reshape.2902 \n bf16[8,128,768]"];
	"p132.2896" [label="p132.2896 \n bf16[768]"];
	"broadcast.2903" [label="broadcast.2903 \n bf16[8,128,768]"];
	"add.2904" [label="add.2904 \n bf16[8,128,768]"];
	"reshape.2907" [label="reshape.2907 \n bf16[8,128,12,64]"];
	"transpose.2908" [label="transpose.2908 \n bf16[8,12,128,64]"];
	"reshape.2910" [label="reshape.2910 \n bf16[96,128,64]"];
	"reshape.2879" [label="reshape.2879 \n bf16[1024,768]"];
	"p131.2877" [label="p131.2877 \n bf16[768,768]"];
	"transpose.2878" [label="transpose.2878 \n bf16[768,768]"];
	"dot.2880" [label="dot.2880 \n bf16[1024,768]"];
	"reshape.2881" [label="reshape.2881 \n bf16[8,128,768]"];
	"p130.2875" [label="p130.2875 \n bf16[768]"];
	"broadcast.2882" [label="broadcast.2882 \n bf16[8,128,768]"];
	"add.2883" [label="add.2883 \n bf16[8,128,768]"];
	"reshape.2886" [label="reshape.2886 \n bf16[8,128,12,64]"];
	"transpose.2888" [label="transpose.2888 \n bf16[8,12,64,128]"];
	"reshape.2890" [label="reshape.2890 \n bf16[96,64,128]"];
	"dot.2911" [label="dot.2911 \n bf16[96,128,128]"];
	"broadcast.462" [label="broadcast.462 \n bf16[96,128,128]"];
	"divide.45" [label="divide.45 \n bf16[96,128,128]"];
	"reshape.1248" [label="reshape.1248 \n bf16[8,12,128,128]"];
	"broadcast.2917" [label="broadcast.2917 \n bf16[8,12,128,128]"];
	"add.2918" [label="add.2918 \n bf16[8,12,128,128]"];
	"constant.2919" [label="constant.2919 \n bf16[] constant(-inf), metadata="];
	"reduce.2924" [label="reduce.2924 \n bf16[8,12,128]"];
	"broadcast.2925" [label="broadcast.2925 \n bf16[8,12,128,128]"];
	"subtract.2926" [label="subtract.2926 \n bf16[8,12,128,128]"];
	"exponential.2927" [label="exponential.2927 \n bf16[8,12,128,128]"];
	"constant.2928" [label="constant.2928 \n bf16[] constant(0), metadata="];
	"reduce.2933" [label="reduce.2933 \n bf16[8,12,128]"];
	"broadcast.2934" [label="broadcast.2934 \n bf16[8,12,128,128]"];
	"divide.2935" [label="divide.2935 \n bf16[8,12,128,128]"];
	"constant.84" [label="constant.84 \n s64[] constant(214013), metadata="];
	"multiply.85" [label="multiply.85 \n s64[] multiply(s64[] %constant.84, s64[] %add.83), metadata="];
	"constant.86" [label="constant.86 \n s64[] constant(2531011), metadata="];
	"add.87" [label="add.87 \n s64[] add(s64[] %multiply.85, s64[] %constant.86), metadata="];
	"convert.2837" [label="convert.2837 \n u64[] convert(s64[] %add.87), metadata="];
	"reshape.2841" [label="reshape.2841 \n u64[1]"];
	"constant.295" [label="constant.295 \n u64[1]"];
	"concatenate.2843" [label="concatenate.2843 \n u64[2]"];
	"constant.2847" [label="constant.2847 \n u32[] constant(9), metadata="];
	"broadcast.2848" [label="broadcast.2848 \n u32[8,12,128,128]"];
	"convert.2850" [label="convert.2850 \n f32[8,12,128,128]"];
	"constant.300" [label="constant.300 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.57" [label="broadcast.57 \n f32[8,12,128,128]"];
	"multiply.2856" [label="multiply.2856 \n f32[8,12,128,128]"];
	"convert.2859" [label="convert.2859 \n bf16[8,12,128,128]"];
	"broadcast.2834" [label="broadcast.2834 \n bf16[8,12,128,128]"];
	"compare.2860" [label="compare.2860 \n pred[8,12,128,128]"];
	"constant.43" [label="constant.43 \n bf16[] constant(1), metadata="];
	"broadcast.58" [label="broadcast.58 \n bf16[8,12,128,128]"];
	"broadcast.257" [label="broadcast.257 \n bf16[8,12,128,128]"];
	"select.21" [label="select.21 \n bf16[8,12,128,128]"];
	"multiply.2936" [label="multiply.2936 \n bf16[8,12,128,128]"];
	"reshape.2938" [label="reshape.2938 \n bf16[96,128,128]"];
	"reshape.2820" [label="reshape.2820 \n bf16[1024,768]"];
	"p129.2818" [label="p129.2818 \n bf16[768,768]"];
	"transpose.2819" [label="transpose.2819 \n bf16[768,768]"];
	"dot.2821" [label="dot.2821 \n bf16[1024,768]"];
	"reshape.2822" [label="reshape.2822 \n bf16[8,128,768]"];
	"p128.2816" [label="p128.2816 \n bf16[768]"];
	"broadcast.2823" [label="broadcast.2823 \n bf16[8,128,768]"];
	"add.2824" [label="add.2824 \n bf16[8,128,768]"];
	"reshape.2827" [label="reshape.2827 \n bf16[8,128,12,64]"];
	"transpose.2828" [label="transpose.2828 \n bf16[8,12,128,64]"];
	"reshape.2830" [label="reshape.2830 \n bf16[96,128,64]"];
	"dot.2939" [label="dot.2939 \n bf16[96,128,64]"];
	"reshape.2940" [label="reshape.2940 \n bf16[8,12,128,64]"];
	"transpose.2941" [label="transpose.2941 \n bf16[8,128,12,64]"];
	"reshape.2943" [label="reshape.2943 \n bf16[1024,768]"];
	"p127.2809" [label="p127.2809 \n bf16[768,768]"];
	"transpose.2810" [label="transpose.2810 \n bf16[768,768]"];
	"dot.2944" [label="dot.2944 \n bf16[1024,768]"];
	"reshape.2945" [label="reshape.2945 \n bf16[8,128,768]"];
	"p126.2807" [label="p126.2807 \n bf16[768]"];
	"broadcast.2946" [label="broadcast.2946 \n bf16[8,128,768]"];
	"add.2947" [label="add.2947 \n bf16[8,128,768]"];
	"constant.88" [label="constant.88 \n s64[] constant(214013), metadata="];
	"multiply.89" [label="multiply.89 \n s64[] multiply(s64[] %constant.88, s64[] %add.87), metadata="];
	"constant.90" [label="constant.90 \n s64[] constant(2531011), metadata="];
	"add.91" [label="add.91 \n s64[] add(s64[] %multiply.89, s64[] %constant.90), metadata="];
	"convert.2775" [label="convert.2775 \n u64[] convert(s64[] %add.91), metadata="];
	"reshape.2779" [label="reshape.2779 \n u64[1]"];
	"constant.301" [label="constant.301 \n u64[1]"];
	"concatenate.2781" [label="concatenate.2781 \n u64[2]"];
	"constant.2785" [label="constant.2785 \n u32[] constant(9), metadata="];
	"broadcast.2786" [label="broadcast.2786 \n u32[8,128,768]"];
	"convert.2788" [label="convert.2788 \n f32[8,128,768]"];
	"constant.307" [label="constant.307 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.59" [label="broadcast.59 \n f32[8,128,768]"];
	"multiply.2794" [label="multiply.2794 \n f32[8,128,768]"];
	"convert.2797" [label="convert.2797 \n bf16[8,128,768]"];
	"broadcast.2772" [label="broadcast.2772 \n bf16[8,128,768]"];
	"compare.2798" [label="compare.2798 \n pred[8,128,768]"];
	"constant.45" [label="constant.45 \n bf16[] constant(1), metadata="];
	"broadcast.60" [label="broadcast.60 \n bf16[8,128,768]"];
	"broadcast.263" [label="broadcast.263 \n bf16[8,128,768]"];
	"select.22" [label="select.22 \n bf16[8,128,768]"];
	"multiply.2950" [label="multiply.2950 \n bf16[8,128,768]"];
	"add.2951" [label="add.2951 \n bf16[8,128,768]"];
	"reshape.2952" [label="reshape.2952 \n bf16[1,1024,768]"];
	"constant.510" [label="constant.510 \n bf16[] constant(1), metadata="];
	"broadcast.514" [label="broadcast.514 \n bf16[1024]"];
	"constant.505" [label="constant.505 \n bf16[] constant(0), metadata="];
	"broadcast.509" [label="broadcast.509 \n bf16[1024]"];
	"reshape.2961" [label="reshape.2961 \n bf16[8,128,768]"];
	"p18.494" [label="p18.494 \n bf16[768]"];
	"broadcast.2964" [label="broadcast.2964 \n bf16[8,128,768]"];
	"multiply.2967" [label="multiply.2967 \n bf16[8,128,768]"];
	"add.2969" [label="add.2969 \n bf16[8,128,768]"];
	"reshape.3022" [label="reshape.3022 \n bf16[1024,768]"];
	"p138.3020" [label="p138.3020 \n bf16[3072,768]"];
	"transpose.3021" [label="transpose.3021 \n bf16[768,3072]"];
	"dot.3023" [label="dot.3023 \n bf16[1024,3072]"];
	"reshape.3024" [label="reshape.3024 \n bf16[8,128,3072]"];
	"p137.3018" [label="p137.3018 \n bf16[3072]"];
	"broadcast.3025" [label="broadcast.3025 \n bf16[8,128,3072]"];
	"add.3026" [label="add.3026 \n bf16[8,128,3072]"];
	"reshape.3036" [label="reshape.3036 \n bf16[1024,3072]"];
	"p136.3011" [label="p136.3011 \n bf16[768,3072]"];
	"transpose.3012" [label="transpose.3012 \n bf16[3072,768]"];
	"dot.3037" [label="dot.3037 \n bf16[1024,768]"];
	"reshape.3038" [label="reshape.3038 \n bf16[8,128,768]"];
	"p135.3009" [label="p135.3009 \n bf16[768]"];
	"broadcast.3039" [label="broadcast.3039 \n bf16[8,128,768]"];
	"add.3040" [label="add.3040 \n bf16[8,128,768]"];
	"constant.92" [label="constant.92 \n s64[] constant(214013), metadata="];
	"multiply.93" [label="multiply.93 \n s64[] multiply(s64[] %constant.92, s64[] %add.91), metadata="];
	"constant.94" [label="constant.94 \n s64[] constant(2531011), metadata="];
	"add.95" [label="add.95 \n s64[] add(s64[] %multiply.93, s64[] %constant.94), metadata="];
	"convert.2977" [label="convert.2977 \n u64[] convert(s64[] %add.95), metadata="];
	"reshape.2981" [label="reshape.2981 \n u64[1]"];
	"constant.309" [label="constant.309 \n u64[1]"];
	"concatenate.2983" [label="concatenate.2983 \n u64[2]"];
	"constant.2987" [label="constant.2987 \n u32[] constant(9), metadata="];
	"broadcast.2988" [label="broadcast.2988 \n u32[8,128,768]"];
	"convert.2990" [label="convert.2990 \n f32[8,128,768]"];
	"constant.314" [label="constant.314 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.61" [label="broadcast.61 \n f32[8,128,768]"];
	"multiply.2996" [label="multiply.2996 \n f32[8,128,768]"];
	"convert.2999" [label="convert.2999 \n bf16[8,128,768]"];
	"broadcast.2974" [label="broadcast.2974 \n bf16[8,128,768]"];
	"compare.3000" [label="compare.3000 \n pred[8,128,768]"];
	"constant.47" [label="constant.47 \n bf16[] constant(1), metadata="];
	"broadcast.62" [label="broadcast.62 \n bf16[8,128,768]"];
	"broadcast.275" [label="broadcast.275 \n bf16[8,128,768]"];
	"select.23" [label="select.23 \n bf16[8,128,768]"];
	"multiply.3043" [label="multiply.3043 \n bf16[8,128,768]"];
	"add.3044" [label="add.3044 \n bf16[8,128,768]"];
	"reshape.3045" [label="reshape.3045 \n bf16[1,1024,768]"];
	"constant.483" [label="constant.483 \n bf16[] constant(1), metadata="];
	"broadcast.487" [label="broadcast.487 \n bf16[1024]"];
	"constant.478" [label="constant.478 \n bf16[] constant(0), metadata="];
	"broadcast.482" [label="broadcast.482 \n bf16[1024]"];
	"reshape.3054" [label="reshape.3054 \n bf16[8,128,768]"];
	"p17.467" [label="p17.467 \n bf16[768]"];
	"broadcast.3057" [label="broadcast.3057 \n bf16[8,128,768]"];
	"multiply.3060" [label="multiply.3060 \n bf16[8,128,768]"];
	"add.3062" [label="add.3062 \n bf16[8,128,768]"];
	"reshape.3195" [label="reshape.3195 \n bf16[1024,768]"];
	"p147.3193" [label="p147.3193 \n bf16[768,768]"];
	"transpose.3194" [label="transpose.3194 \n bf16[768,768]"];
	"dot.3196" [label="dot.3196 \n bf16[1024,768]"];
	"reshape.3197" [label="reshape.3197 \n bf16[8,128,768]"];
	"p146.3191" [label="p146.3191 \n bf16[768]"];
	"broadcast.3198" [label="broadcast.3198 \n bf16[8,128,768]"];
	"add.3199" [label="add.3199 \n bf16[8,128,768]"];
	"reshape.3202" [label="reshape.3202 \n bf16[8,128,12,64]"];
	"transpose.3203" [label="transpose.3203 \n bf16[8,12,128,64]"];
	"reshape.3205" [label="reshape.3205 \n bf16[96,128,64]"];
	"reshape.3174" [label="reshape.3174 \n bf16[1024,768]"];
	"p145.3172" [label="p145.3172 \n bf16[768,768]"];
	"transpose.3173" [label="transpose.3173 \n bf16[768,768]"];
	"dot.3175" [label="dot.3175 \n bf16[1024,768]"];
	"reshape.3176" [label="reshape.3176 \n bf16[8,128,768]"];
	"p144.3170" [label="p144.3170 \n bf16[768]"];
	"broadcast.3177" [label="broadcast.3177 \n bf16[8,128,768]"];
	"add.3178" [label="add.3178 \n bf16[8,128,768]"];
	"reshape.3181" [label="reshape.3181 \n bf16[8,128,12,64]"];
	"transpose.3183" [label="transpose.3183 \n bf16[8,12,64,128]"];
	"reshape.3185" [label="reshape.3185 \n bf16[96,64,128]"];
	"dot.3206" [label="dot.3206 \n bf16[96,128,128]"];
	"broadcast.466" [label="broadcast.466 \n bf16[96,128,128]"];
	"divide.46" [label="divide.46 \n bf16[96,128,128]"];
	"reshape.1251" [label="reshape.1251 \n bf16[8,12,128,128]"];
	"broadcast.3212" [label="broadcast.3212 \n bf16[8,12,128,128]"];
	"add.3213" [label="add.3213 \n bf16[8,12,128,128]"];
	"constant.3214" [label="constant.3214 \n bf16[] constant(-inf), metadata="];
	"reduce.3219" [label="reduce.3219 \n bf16[8,12,128]"];
	"broadcast.3220" [label="broadcast.3220 \n bf16[8,12,128,128]"];
	"subtract.3221" [label="subtract.3221 \n bf16[8,12,128,128]"];
	"exponential.3222" [label="exponential.3222 \n bf16[8,12,128,128]"];
	"constant.3223" [label="constant.3223 \n bf16[] constant(0), metadata="];
	"reduce.3228" [label="reduce.3228 \n bf16[8,12,128]"];
	"broadcast.3229" [label="broadcast.3229 \n bf16[8,12,128,128]"];
	"divide.3230" [label="divide.3230 \n bf16[8,12,128,128]"];
	"constant.96" [label="constant.96 \n s64[] constant(214013), metadata="];
	"multiply.97" [label="multiply.97 \n s64[] multiply(s64[] %constant.96, s64[] %add.95), metadata="];
	"constant.98" [label="constant.98 \n s64[] constant(2531011), metadata="];
	"add.99" [label="add.99 \n s64[] add(s64[] %multiply.97, s64[] %constant.98), metadata="];
	"convert.3132" [label="convert.3132 \n u64[] convert(s64[] %add.99), metadata="];
	"reshape.3136" [label="reshape.3136 \n u64[1]"];
	"constant.317" [label="constant.317 \n u64[1]"];
	"concatenate.3138" [label="concatenate.3138 \n u64[2]"];
	"constant.3142" [label="constant.3142 \n u32[] constant(9), metadata="];
	"broadcast.3143" [label="broadcast.3143 \n u32[8,12,128,128]"];
	"convert.3145" [label="convert.3145 \n f32[8,12,128,128]"];
	"constant.322" [label="constant.322 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.64" [label="broadcast.64 \n f32[8,12,128,128]"];
	"multiply.3151" [label="multiply.3151 \n f32[8,12,128,128]"];
	"convert.3154" [label="convert.3154 \n bf16[8,12,128,128]"];
	"broadcast.3129" [label="broadcast.3129 \n bf16[8,12,128,128]"];
	"compare.3155" [label="compare.3155 \n pred[8,12,128,128]"];
	"constant.49" [label="constant.49 \n bf16[] constant(1), metadata="];
	"broadcast.65" [label="broadcast.65 \n bf16[8,12,128,128]"];
	"broadcast.287" [label="broadcast.287 \n bf16[8,12,128,128]"];
	"select.24" [label="select.24 \n bf16[8,12,128,128]"];
	"multiply.3231" [label="multiply.3231 \n bf16[8,12,128,128]"];
	"reshape.3233" [label="reshape.3233 \n bf16[96,128,128]"];
	"reshape.3115" [label="reshape.3115 \n bf16[1024,768]"];
	"p143.3113" [label="p143.3113 \n bf16[768,768]"];
	"transpose.3114" [label="transpose.3114 \n bf16[768,768]"];
	"dot.3116" [label="dot.3116 \n bf16[1024,768]"];
	"reshape.3117" [label="reshape.3117 \n bf16[8,128,768]"];
	"p142.3111" [label="p142.3111 \n bf16[768]"];
	"broadcast.3118" [label="broadcast.3118 \n bf16[8,128,768]"];
	"add.3119" [label="add.3119 \n bf16[8,128,768]"];
	"reshape.3122" [label="reshape.3122 \n bf16[8,128,12,64]"];
	"transpose.3123" [label="transpose.3123 \n bf16[8,12,128,64]"];
	"reshape.3125" [label="reshape.3125 \n bf16[96,128,64]"];
	"dot.3234" [label="dot.3234 \n bf16[96,128,64]"];
	"reshape.3235" [label="reshape.3235 \n bf16[8,12,128,64]"];
	"transpose.3236" [label="transpose.3236 \n bf16[8,128,12,64]"];
	"reshape.3238" [label="reshape.3238 \n bf16[1024,768]"];
	"p141.3104" [label="p141.3104 \n bf16[768,768]"];
	"transpose.3105" [label="transpose.3105 \n bf16[768,768]"];
	"dot.3239" [label="dot.3239 \n bf16[1024,768]"];
	"reshape.3240" [label="reshape.3240 \n bf16[8,128,768]"];
	"p140.3102" [label="p140.3102 \n bf16[768]"];
	"broadcast.3241" [label="broadcast.3241 \n bf16[8,128,768]"];
	"add.3242" [label="add.3242 \n bf16[8,128,768]"];
	"constant.100" [label="constant.100 \n s64[] constant(214013), metadata="];
	"multiply.101" [label="multiply.101 \n s64[] multiply(s64[] %constant.100, s64[] %add.99), metadata="];
	"constant.102" [label="constant.102 \n s64[] constant(2531011), metadata="];
	"add.103" [label="add.103 \n s64[] add(s64[] %multiply.101, s64[] %constant.102), metadata="];
	"convert.3070" [label="convert.3070 \n u64[] convert(s64[] %add.103), metadata="];
	"reshape.3074" [label="reshape.3074 \n u64[1]"];
	"constant.323" [label="constant.323 \n u64[1]"];
	"concatenate.3076" [label="concatenate.3076 \n u64[2]"];
	"constant.3080" [label="constant.3080 \n u32[] constant(9), metadata="];
	"broadcast.3081" [label="broadcast.3081 \n u32[8,128,768]"];
	"convert.3083" [label="convert.3083 \n f32[8,128,768]"];
	"constant.328" [label="constant.328 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.66" [label="broadcast.66 \n f32[8,128,768]"];
	"multiply.3089" [label="multiply.3089 \n f32[8,128,768]"];
	"convert.3092" [label="convert.3092 \n bf16[8,128,768]"];
	"broadcast.3067" [label="broadcast.3067 \n bf16[8,128,768]"];
	"compare.3093" [label="compare.3093 \n pred[8,128,768]"];
	"constant.51" [label="constant.51 \n bf16[] constant(1), metadata="];
	"broadcast.67" [label="broadcast.67 \n bf16[8,128,768]"];
	"broadcast.294" [label="broadcast.294 \n bf16[8,128,768]"];
	"select.25" [label="select.25 \n bf16[8,128,768]"];
	"multiply.3245" [label="multiply.3245 \n bf16[8,128,768]"];
	"add.3246" [label="add.3246 \n bf16[8,128,768]"];
	"reshape.3247" [label="reshape.3247 \n bf16[1,1024,768]"];
	"constant.456" [label="constant.456 \n bf16[] constant(1), metadata="];
	"broadcast.460" [label="broadcast.460 \n bf16[1024]"];
	"constant.451" [label="constant.451 \n bf16[] constant(0), metadata="];
	"broadcast.455" [label="broadcast.455 \n bf16[1024]"];
	"reshape.3256" [label="reshape.3256 \n bf16[8,128,768]"];
	"p16.440" [label="p16.440 \n bf16[768]"];
	"broadcast.3259" [label="broadcast.3259 \n bf16[8,128,768]"];
	"multiply.3262" [label="multiply.3262 \n bf16[8,128,768]"];
	"add.3264" [label="add.3264 \n bf16[8,128,768]"];
	"reshape.3317" [label="reshape.3317 \n bf16[1024,768]"];
	"p152.3315" [label="p152.3315 \n bf16[3072,768]"];
	"transpose.3316" [label="transpose.3316 \n bf16[768,3072]"];
	"dot.3318" [label="dot.3318 \n bf16[1024,3072]"];
	"reshape.3319" [label="reshape.3319 \n bf16[8,128,3072]"];
	"p151.3313" [label="p151.3313 \n bf16[3072]"];
	"broadcast.3320" [label="broadcast.3320 \n bf16[8,128,3072]"];
	"add.3321" [label="add.3321 \n bf16[8,128,3072]"];
	"reshape.3331" [label="reshape.3331 \n bf16[1024,3072]"];
	"p150.3306" [label="p150.3306 \n bf16[768,3072]"];
	"transpose.3307" [label="transpose.3307 \n bf16[3072,768]"];
	"dot.3332" [label="dot.3332 \n bf16[1024,768]"];
	"reshape.3333" [label="reshape.3333 \n bf16[8,128,768]"];
	"p149.3304" [label="p149.3304 \n bf16[768]"];
	"broadcast.3334" [label="broadcast.3334 \n bf16[8,128,768]"];
	"add.3335" [label="add.3335 \n bf16[8,128,768]"];
	"constant.104" [label="constant.104 \n s64[] constant(214013), metadata="];
	"multiply.105" [label="multiply.105 \n s64[] multiply(s64[] %constant.104, s64[] %add.103), metadata="];
	"constant.106" [label="constant.106 \n s64[] constant(2531011), metadata="];
	"add.107" [label="add.107 \n s64[] add(s64[] %multiply.105, s64[] %constant.106), metadata="];
	"convert.3272" [label="convert.3272 \n u64[] convert(s64[] %add.107), metadata="];
	"reshape.3276" [label="reshape.3276 \n u64[1]"];
	"constant.330" [label="constant.330 \n u64[1]"];
	"concatenate.3278" [label="concatenate.3278 \n u64[2]"];
	"constant.3282" [label="constant.3282 \n u32[] constant(9), metadata="];
	"broadcast.3283" [label="broadcast.3283 \n u32[8,128,768]"];
	"convert.3285" [label="convert.3285 \n f32[8,128,768]"];
	"constant.336" [label="constant.336 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.68" [label="broadcast.68 \n f32[8,128,768]"];
	"multiply.3291" [label="multiply.3291 \n f32[8,128,768]"];
	"convert.3294" [label="convert.3294 \n bf16[8,128,768]"];
	"broadcast.3269" [label="broadcast.3269 \n bf16[8,128,768]"];
	"compare.3295" [label="compare.3295 \n pred[8,128,768]"];
	"constant.53" [label="constant.53 \n bf16[] constant(1), metadata="];
	"broadcast.69" [label="broadcast.69 \n bf16[8,128,768]"];
	"broadcast.305" [label="broadcast.305 \n bf16[8,128,768]"];
	"select.26" [label="select.26 \n bf16[8,128,768]"];
	"multiply.3338" [label="multiply.3338 \n bf16[8,128,768]"];
	"add.3339" [label="add.3339 \n bf16[8,128,768]"];
	"reshape.3340" [label="reshape.3340 \n bf16[1,1024,768]"];
	"constant.429" [label="constant.429 \n bf16[] constant(1), metadata="];
	"broadcast.433" [label="broadcast.433 \n bf16[1024]"];
	"constant.424" [label="constant.424 \n bf16[] constant(0), metadata="];
	"broadcast.428" [label="broadcast.428 \n bf16[1024]"];
	"reshape.3349" [label="reshape.3349 \n bf16[8,128,768]"];
	"p15.413" [label="p15.413 \n bf16[768]"];
	"broadcast.3352" [label="broadcast.3352 \n bf16[8,128,768]"];
	"multiply.3355" [label="multiply.3355 \n bf16[8,128,768]"];
	"add.3357" [label="add.3357 \n bf16[8,128,768]"];
	"reshape.3490" [label="reshape.3490 \n bf16[1024,768]"];
	"p161.3488" [label="p161.3488 \n bf16[768,768]"];
	"transpose.3489" [label="transpose.3489 \n bf16[768,768]"];
	"dot.3491" [label="dot.3491 \n bf16[1024,768]"];
	"reshape.3492" [label="reshape.3492 \n bf16[8,128,768]"];
	"p160.3486" [label="p160.3486 \n bf16[768]"];
	"broadcast.3493" [label="broadcast.3493 \n bf16[8,128,768]"];
	"add.3494" [label="add.3494 \n bf16[8,128,768]"];
	"reshape.3497" [label="reshape.3497 \n bf16[8,128,12,64]"];
	"transpose.3498" [label="transpose.3498 \n bf16[8,12,128,64]"];
	"reshape.3500" [label="reshape.3500 \n bf16[96,128,64]"];
	"reshape.3469" [label="reshape.3469 \n bf16[1024,768]"];
	"p159.3467" [label="p159.3467 \n bf16[768,768]"];
	"transpose.3468" [label="transpose.3468 \n bf16[768,768]"];
	"dot.3470" [label="dot.3470 \n bf16[1024,768]"];
	"reshape.3471" [label="reshape.3471 \n bf16[8,128,768]"];
	"p158.3465" [label="p158.3465 \n bf16[768]"];
	"broadcast.3472" [label="broadcast.3472 \n bf16[8,128,768]"];
	"add.3473" [label="add.3473 \n bf16[8,128,768]"];
	"reshape.3476" [label="reshape.3476 \n bf16[8,128,12,64]"];
	"transpose.3478" [label="transpose.3478 \n bf16[8,12,64,128]"];
	"reshape.3480" [label="reshape.3480 \n bf16[96,64,128]"];
	"dot.3501" [label="dot.3501 \n bf16[96,128,128]"];
	"broadcast.468" [label="broadcast.468 \n bf16[96,128,128]"];
	"divide.47" [label="divide.47 \n bf16[96,128,128]"];
	"reshape.1256" [label="reshape.1256 \n bf16[8,12,128,128]"];
	"broadcast.3507" [label="broadcast.3507 \n bf16[8,12,128,128]"];
	"add.3508" [label="add.3508 \n bf16[8,12,128,128]"];
	"constant.3509" [label="constant.3509 \n bf16[] constant(-inf), metadata="];
	"reduce.3514" [label="reduce.3514 \n bf16[8,12,128]"];
	"broadcast.3515" [label="broadcast.3515 \n bf16[8,12,128,128]"];
	"subtract.3516" [label="subtract.3516 \n bf16[8,12,128,128]"];
	"exponential.3517" [label="exponential.3517 \n bf16[8,12,128,128]"];
	"constant.3518" [label="constant.3518 \n bf16[] constant(0), metadata="];
	"reduce.3523" [label="reduce.3523 \n bf16[8,12,128]"];
	"broadcast.3524" [label="broadcast.3524 \n bf16[8,12,128,128]"];
	"divide.3525" [label="divide.3525 \n bf16[8,12,128,128]"];
	"constant.108" [label="constant.108 \n s64[] constant(214013), metadata="];
	"multiply.109" [label="multiply.109 \n s64[] multiply(s64[] %constant.108, s64[] %add.107), metadata="];
	"constant.110" [label="constant.110 \n s64[] constant(2531011), metadata="];
	"add.111" [label="add.111 \n s64[] add(s64[] %multiply.109, s64[] %constant.110), metadata="];
	"convert.3427" [label="convert.3427 \n u64[] convert(s64[] %add.111), metadata="];
	"reshape.3431" [label="reshape.3431 \n u64[1]"];
	"constant.339" [label="constant.339 \n u64[1]"];
	"concatenate.3433" [label="concatenate.3433 \n u64[2]"];
	"constant.3437" [label="constant.3437 \n u32[] constant(9), metadata="];
	"broadcast.3438" [label="broadcast.3438 \n u32[8,12,128,128]"];
	"convert.3440" [label="convert.3440 \n f32[8,12,128,128]"];
	"constant.344" [label="constant.344 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.71" [label="broadcast.71 \n f32[8,12,128,128]"];
	"multiply.3446" [label="multiply.3446 \n f32[8,12,128,128]"];
	"convert.3449" [label="convert.3449 \n bf16[8,12,128,128]"];
	"broadcast.3424" [label="broadcast.3424 \n bf16[8,12,128,128]"];
	"compare.3450" [label="compare.3450 \n pred[8,12,128,128]"];
	"constant.55" [label="constant.55 \n bf16[] constant(1), metadata="];
	"broadcast.72" [label="broadcast.72 \n bf16[8,12,128,128]"];
	"broadcast.317" [label="broadcast.317 \n bf16[8,12,128,128]"];
	"select.27" [label="select.27 \n bf16[8,12,128,128]"];
	"multiply.3526" [label="multiply.3526 \n bf16[8,12,128,128]"];
	"reshape.3528" [label="reshape.3528 \n bf16[96,128,128]"];
	"reshape.3410" [label="reshape.3410 \n bf16[1024,768]"];
	"p157.3408" [label="p157.3408 \n bf16[768,768]"];
	"transpose.3409" [label="transpose.3409 \n bf16[768,768]"];
	"dot.3411" [label="dot.3411 \n bf16[1024,768]"];
	"reshape.3412" [label="reshape.3412 \n bf16[8,128,768]"];
	"p156.3406" [label="p156.3406 \n bf16[768]"];
	"broadcast.3413" [label="broadcast.3413 \n bf16[8,128,768]"];
	"add.3414" [label="add.3414 \n bf16[8,128,768]"];
	"reshape.3417" [label="reshape.3417 \n bf16[8,128,12,64]"];
	"transpose.3418" [label="transpose.3418 \n bf16[8,12,128,64]"];
	"reshape.3420" [label="reshape.3420 \n bf16[96,128,64]"];
	"dot.3529" [label="dot.3529 \n bf16[96,128,64]"];
	"reshape.3530" [label="reshape.3530 \n bf16[8,12,128,64]"];
	"transpose.3531" [label="transpose.3531 \n bf16[8,128,12,64]"];
	"reshape.3533" [label="reshape.3533 \n bf16[1024,768]"];
	"p155.3399" [label="p155.3399 \n bf16[768,768]"];
	"transpose.3400" [label="transpose.3400 \n bf16[768,768]"];
	"dot.3534" [label="dot.3534 \n bf16[1024,768]"];
	"reshape.3535" [label="reshape.3535 \n bf16[8,128,768]"];
	"p154.3397" [label="p154.3397 \n bf16[768]"];
	"broadcast.3536" [label="broadcast.3536 \n bf16[8,128,768]"];
	"add.3537" [label="add.3537 \n bf16[8,128,768]"];
	"constant.112" [label="constant.112 \n s64[] constant(214013), metadata="];
	"multiply.113" [label="multiply.113 \n s64[] multiply(s64[] %constant.112, s64[] %add.111), metadata="];
	"constant.114" [label="constant.114 \n s64[] constant(2531011), metadata="];
	"add.115" [label="add.115 \n s64[] add(s64[] %multiply.113, s64[] %constant.114), metadata="];
	"convert.3365" [label="convert.3365 \n u64[] convert(s64[] %add.115), metadata="];
	"reshape.3369" [label="reshape.3369 \n u64[1]"];
	"constant.345" [label="constant.345 \n u64[1]"];
	"concatenate.3371" [label="concatenate.3371 \n u64[2]"];
	"constant.3375" [label="constant.3375 \n u32[] constant(9), metadata="];
	"broadcast.3376" [label="broadcast.3376 \n u32[8,128,768]"];
	"convert.3378" [label="convert.3378 \n f32[8,128,768]"];
	"constant.350" [label="constant.350 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.73" [label="broadcast.73 \n f32[8,128,768]"];
	"multiply.3384" [label="multiply.3384 \n f32[8,128,768]"];
	"convert.3387" [label="convert.3387 \n bf16[8,128,768]"];
	"broadcast.3362" [label="broadcast.3362 \n bf16[8,128,768]"];
	"compare.3388" [label="compare.3388 \n pred[8,128,768]"];
	"constant.57" [label="constant.57 \n bf16[] constant(1), metadata="];
	"broadcast.74" [label="broadcast.74 \n bf16[8,128,768]"];
	"broadcast.324" [label="broadcast.324 \n bf16[8,128,768]"];
	"select.28" [label="select.28 \n bf16[8,128,768]"];
	"multiply.3540" [label="multiply.3540 \n bf16[8,128,768]"];
	"add.3541" [label="add.3541 \n bf16[8,128,768]"];
	"reshape.3542" [label="reshape.3542 \n bf16[1,1024,768]"];
	"constant.402" [label="constant.402 \n bf16[] constant(1), metadata="];
	"broadcast.406" [label="broadcast.406 \n bf16[1024]"];
	"constant.397" [label="constant.397 \n bf16[] constant(0), metadata="];
	"broadcast.401" [label="broadcast.401 \n bf16[1024]"];
	"reshape.3551" [label="reshape.3551 \n bf16[8,128,768]"];
	"p14.386" [label="p14.386 \n bf16[768]"];
	"broadcast.3554" [label="broadcast.3554 \n bf16[8,128,768]"];
	"multiply.3557" [label="multiply.3557 \n bf16[8,128,768]"];
	"add.3559" [label="add.3559 \n bf16[8,128,768]"];
	"reshape.3612" [label="reshape.3612 \n bf16[1024,768]"];
	"p166.3610" [label="p166.3610 \n bf16[3072,768]"];
	"transpose.3611" [label="transpose.3611 \n bf16[768,3072]"];
	"dot.3613" [label="dot.3613 \n bf16[1024,3072]"];
	"reshape.3614" [label="reshape.3614 \n bf16[8,128,3072]"];
	"p165.3608" [label="p165.3608 \n bf16[3072]"];
	"broadcast.3615" [label="broadcast.3615 \n bf16[8,128,3072]"];
	"add.3616" [label="add.3616 \n bf16[8,128,3072]"];
	"reshape.3626" [label="reshape.3626 \n bf16[1024,3072]"];
	"p164.3601" [label="p164.3601 \n bf16[768,3072]"];
	"transpose.3602" [label="transpose.3602 \n bf16[3072,768]"];
	"dot.3627" [label="dot.3627 \n bf16[1024,768]"];
	"reshape.3628" [label="reshape.3628 \n bf16[8,128,768]"];
	"p163.3599" [label="p163.3599 \n bf16[768]"];
	"broadcast.3629" [label="broadcast.3629 \n bf16[8,128,768]"];
	"add.3630" [label="add.3630 \n bf16[8,128,768]"];
	"constant.116" [label="constant.116 \n s64[] constant(214013), metadata="];
	"multiply.117" [label="multiply.117 \n s64[] multiply(s64[] %constant.116, s64[] %add.115), metadata="];
	"constant.118" [label="constant.118 \n s64[] constant(2531011), metadata="];
	"add.119" [label="add.119 \n s64[] add(s64[] %multiply.117, s64[] %constant.118), metadata="];
	"convert.3567" [label="convert.3567 \n u64[] convert(s64[] %add.119), metadata="];
	"reshape.3571" [label="reshape.3571 \n u64[1]"];
	"constant.352" [label="constant.352 \n u64[1]"];
	"concatenate.3573" [label="concatenate.3573 \n u64[2]"];
	"constant.3577" [label="constant.3577 \n u32[] constant(9), metadata="];
	"broadcast.3578" [label="broadcast.3578 \n u32[8,128,768]"];
	"convert.3580" [label="convert.3580 \n f32[8,128,768]"];
	"constant.357" [label="constant.357 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.75" [label="broadcast.75 \n f32[8,128,768]"];
	"multiply.3586" [label="multiply.3586 \n f32[8,128,768]"];
	"convert.3589" [label="convert.3589 \n bf16[8,128,768]"];
	"broadcast.3564" [label="broadcast.3564 \n bf16[8,128,768]"];
	"compare.3590" [label="compare.3590 \n pred[8,128,768]"];
	"constant.59" [label="constant.59 \n bf16[] constant(1), metadata="];
	"broadcast.76" [label="broadcast.76 \n bf16[8,128,768]"];
	"broadcast.334" [label="broadcast.334 \n bf16[8,128,768]"];
	"select.29" [label="select.29 \n bf16[8,128,768]"];
	"multiply.3633" [label="multiply.3633 \n bf16[8,128,768]"];
	"add.3634" [label="add.3634 \n bf16[8,128,768]"];
	"reshape.3635" [label="reshape.3635 \n bf16[1,1024,768]"];
	"constant.375" [label="constant.375 \n bf16[] constant(1), metadata="];
	"broadcast.379" [label="broadcast.379 \n bf16[1024]"];
	"constant.370" [label="constant.370 \n bf16[] constant(0), metadata="];
	"broadcast.374" [label="broadcast.374 \n bf16[1024]"];
	"reshape.3644" [label="reshape.3644 \n bf16[8,128,768]"];
	"p13.359" [label="p13.359 \n bf16[768]"];
	"broadcast.3647" [label="broadcast.3647 \n bf16[8,128,768]"];
	"multiply.3650" [label="multiply.3650 \n bf16[8,128,768]"];
	"add.3652" [label="add.3652 \n bf16[8,128,768]"];
	"reshape.3785" [label="reshape.3785 \n bf16[1024,768]"];
	"p175.3783" [label="p175.3783 \n bf16[768,768]"];
	"transpose.3784" [label="transpose.3784 \n bf16[768,768]"];
	"dot.3786" [label="dot.3786 \n bf16[1024,768]"];
	"reshape.3787" [label="reshape.3787 \n bf16[8,128,768]"];
	"p174.3781" [label="p174.3781 \n bf16[768]"];
	"broadcast.3788" [label="broadcast.3788 \n bf16[8,128,768]"];
	"add.3789" [label="add.3789 \n bf16[8,128,768]"];
	"reshape.3792" [label="reshape.3792 \n bf16[8,128,12,64]"];
	"transpose.3793" [label="transpose.3793 \n bf16[8,12,128,64]"];
	"reshape.3795" [label="reshape.3795 \n bf16[96,128,64]"];
	"reshape.3764" [label="reshape.3764 \n bf16[1024,768]"];
	"p173.3762" [label="p173.3762 \n bf16[768,768]"];
	"transpose.3763" [label="transpose.3763 \n bf16[768,768]"];
	"dot.3765" [label="dot.3765 \n bf16[1024,768]"];
	"reshape.3766" [label="reshape.3766 \n bf16[8,128,768]"];
	"p172.3760" [label="p172.3760 \n bf16[768]"];
	"broadcast.3767" [label="broadcast.3767 \n bf16[8,128,768]"];
	"add.3768" [label="add.3768 \n bf16[8,128,768]"];
	"reshape.3771" [label="reshape.3771 \n bf16[8,128,12,64]"];
	"transpose.3773" [label="transpose.3773 \n bf16[8,12,64,128]"];
	"reshape.3775" [label="reshape.3775 \n bf16[96,64,128]"];
	"dot.3796" [label="dot.3796 \n bf16[96,128,128]"];
	"broadcast.471" [label="broadcast.471 \n bf16[96,128,128]"];
	"divide.48" [label="divide.48 \n bf16[96,128,128]"];
	"reshape.1261" [label="reshape.1261 \n bf16[8,12,128,128]"];
	"broadcast.3802" [label="broadcast.3802 \n bf16[8,12,128,128]"];
	"add.3803" [label="add.3803 \n bf16[8,12,128,128]"];
	"constant.3804" [label="constant.3804 \n bf16[] constant(-inf), metadata="];
	"reduce.3809" [label="reduce.3809 \n bf16[8,12,128]"];
	"broadcast.3810" [label="broadcast.3810 \n bf16[8,12,128,128]"];
	"subtract.3811" [label="subtract.3811 \n bf16[8,12,128,128]"];
	"exponential.3812" [label="exponential.3812 \n bf16[8,12,128,128]"];
	"constant.3813" [label="constant.3813 \n bf16[] constant(0), metadata="];
	"reduce.3818" [label="reduce.3818 \n bf16[8,12,128]"];
	"broadcast.3819" [label="broadcast.3819 \n bf16[8,12,128,128]"];
	"divide.3820" [label="divide.3820 \n bf16[8,12,128,128]"];
	"constant.120" [label="constant.120 \n s64[] constant(214013), metadata="];
	"multiply.121" [label="multiply.121 \n s64[] multiply(s64[] %constant.120, s64[] %add.119), metadata="];
	"constant.122" [label="constant.122 \n s64[] constant(2531011), metadata="];
	"add.123" [label="add.123 \n s64[] add(s64[] %multiply.121, s64[] %constant.122), metadata="];
	"convert.3722" [label="convert.3722 \n u64[] convert(s64[] %add.123), metadata="];
	"reshape.3726" [label="reshape.3726 \n u64[1]"];
	"constant.361" [label="constant.361 \n u64[1]"];
	"concatenate.3728" [label="concatenate.3728 \n u64[2]"];
	"constant.3732" [label="constant.3732 \n u32[] constant(9), metadata="];
	"broadcast.3733" [label="broadcast.3733 \n u32[8,12,128,128]"];
	"convert.3735" [label="convert.3735 \n f32[8,12,128,128]"];
	"constant.366" [label="constant.366 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.78" [label="broadcast.78 \n f32[8,12,128,128]"];
	"multiply.3741" [label="multiply.3741 \n f32[8,12,128,128]"];
	"convert.3744" [label="convert.3744 \n bf16[8,12,128,128]"];
	"broadcast.3719" [label="broadcast.3719 \n bf16[8,12,128,128]"];
	"compare.3745" [label="compare.3745 \n pred[8,12,128,128]"];
	"constant.61" [label="constant.61 \n bf16[] constant(1), metadata="];
	"broadcast.79" [label="broadcast.79 \n bf16[8,12,128,128]"];
	"broadcast.348" [label="broadcast.348 \n bf16[8,12,128,128]"];
	"select.30" [label="select.30 \n bf16[8,12,128,128]"];
	"multiply.3821" [label="multiply.3821 \n bf16[8,12,128,128]"];
	"reshape.3823" [label="reshape.3823 \n bf16[96,128,128]"];
	"reshape.3705" [label="reshape.3705 \n bf16[1024,768]"];
	"p171.3703" [label="p171.3703 \n bf16[768,768]"];
	"transpose.3704" [label="transpose.3704 \n bf16[768,768]"];
	"dot.3706" [label="dot.3706 \n bf16[1024,768]"];
	"reshape.3707" [label="reshape.3707 \n bf16[8,128,768]"];
	"p170.3701" [label="p170.3701 \n bf16[768]"];
	"broadcast.3708" [label="broadcast.3708 \n bf16[8,128,768]"];
	"add.3709" [label="add.3709 \n bf16[8,128,768]"];
	"reshape.3712" [label="reshape.3712 \n bf16[8,128,12,64]"];
	"transpose.3713" [label="transpose.3713 \n bf16[8,12,128,64]"];
	"reshape.3715" [label="reshape.3715 \n bf16[96,128,64]"];
	"dot.3824" [label="dot.3824 \n bf16[96,128,64]"];
	"reshape.3825" [label="reshape.3825 \n bf16[8,12,128,64]"];
	"transpose.3826" [label="transpose.3826 \n bf16[8,128,12,64]"];
	"reshape.3828" [label="reshape.3828 \n bf16[1024,768]"];
	"p169.3694" [label="p169.3694 \n bf16[768,768]"];
	"transpose.3695" [label="transpose.3695 \n bf16[768,768]"];
	"dot.3829" [label="dot.3829 \n bf16[1024,768]"];
	"reshape.3830" [label="reshape.3830 \n bf16[8,128,768]"];
	"p168.3692" [label="p168.3692 \n bf16[768]"];
	"broadcast.3831" [label="broadcast.3831 \n bf16[8,128,768]"];
	"add.3832" [label="add.3832 \n bf16[8,128,768]"];
	"constant.124" [label="constant.124 \n s64[] constant(214013), metadata="];
	"multiply.125" [label="multiply.125 \n s64[] multiply(s64[] %constant.124, s64[] %add.123), metadata="];
	"constant.126" [label="constant.126 \n s64[] constant(2531011), metadata="];
	"add.127" [label="add.127 \n s64[] add(s64[] %multiply.125, s64[] %constant.126), metadata="];
	"convert.3660" [label="convert.3660 \n u64[] convert(s64[] %add.127), metadata="];
	"reshape.3664" [label="reshape.3664 \n u64[1]"];
	"constant.367" [label="constant.367 \n u64[1]"];
	"concatenate.3666" [label="concatenate.3666 \n u64[2]"];
	"constant.3670" [label="constant.3670 \n u32[] constant(9), metadata="];
	"broadcast.3671" [label="broadcast.3671 \n u32[8,128,768]"];
	"convert.3673" [label="convert.3673 \n f32[8,128,768]"];
	"constant.372" [label="constant.372 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.80" [label="broadcast.80 \n f32[8,128,768]"];
	"multiply.3679" [label="multiply.3679 \n f32[8,128,768]"];
	"convert.3682" [label="convert.3682 \n bf16[8,128,768]"];
	"broadcast.3657" [label="broadcast.3657 \n bf16[8,128,768]"];
	"compare.3683" [label="compare.3683 \n pred[8,128,768]"];
	"constant.63" [label="constant.63 \n bf16[] constant(1), metadata="];
	"broadcast.81" [label="broadcast.81 \n bf16[8,128,768]"];
	"broadcast.354" [label="broadcast.354 \n bf16[8,128,768]"];
	"select.31" [label="select.31 \n bf16[8,128,768]"];
	"multiply.3835" [label="multiply.3835 \n bf16[8,128,768]"];
	"add.3836" [label="add.3836 \n bf16[8,128,768]"];
	"reshape.3837" [label="reshape.3837 \n bf16[1,1024,768]"];
	"constant.348" [label="constant.348 \n bf16[] constant(1), metadata="];
	"broadcast.352" [label="broadcast.352 \n bf16[1024]"];
	"constant.343" [label="constant.343 \n bf16[] constant(0), metadata="];
	"broadcast.347" [label="broadcast.347 \n bf16[1024]"];
	"reshape.3846" [label="reshape.3846 \n bf16[8,128,768]"];
	"p12.332" [label="p12.332 \n bf16[768]"];
	"broadcast.3849" [label="broadcast.3849 \n bf16[8,128,768]"];
	"multiply.3852" [label="multiply.3852 \n bf16[8,128,768]"];
	"add.3854" [label="add.3854 \n bf16[8,128,768]"];
	"reshape.3907" [label="reshape.3907 \n bf16[1024,768]"];
	"p180.3905" [label="p180.3905 \n bf16[3072,768]"];
	"transpose.3906" [label="transpose.3906 \n bf16[768,3072]"];
	"dot.3908" [label="dot.3908 \n bf16[1024,3072]"];
	"reshape.3909" [label="reshape.3909 \n bf16[8,128,3072]"];
	"p179.3903" [label="p179.3903 \n bf16[3072]"];
	"broadcast.3910" [label="broadcast.3910 \n bf16[8,128,3072]"];
	"add.3911" [label="add.3911 \n bf16[8,128,3072]"];
	"reshape.3921" [label="reshape.3921 \n bf16[1024,3072]"];
	"p178.3896" [label="p178.3896 \n bf16[768,3072]"];
	"transpose.3897" [label="transpose.3897 \n bf16[3072,768]"];
	"dot.3922" [label="dot.3922 \n bf16[1024,768]"];
	"reshape.3923" [label="reshape.3923 \n bf16[8,128,768]"];
	"p177.3894" [label="p177.3894 \n bf16[768]"];
	"broadcast.3924" [label="broadcast.3924 \n bf16[8,128,768]"];
	"add.3925" [label="add.3925 \n bf16[8,128,768]"];
	"constant.128" [label="constant.128 \n s64[] constant(214013), metadata="];
	"multiply.129" [label="multiply.129 \n s64[] multiply(s64[] %constant.128, s64[] %add.127), metadata="];
	"constant.130" [label="constant.130 \n s64[] constant(2531011), metadata="];
	"add.131" [label="add.131 \n s64[] add(s64[] %multiply.129, s64[] %constant.130), metadata="];
	"convert.3862" [label="convert.3862 \n u64[] convert(s64[] %add.131), metadata="];
	"reshape.3866" [label="reshape.3866 \n u64[1]"];
	"constant.374" [label="constant.374 \n u64[1]"];
	"concatenate.3868" [label="concatenate.3868 \n u64[2]"];
	"constant.3872" [label="constant.3872 \n u32[] constant(9), metadata="];
	"broadcast.3873" [label="broadcast.3873 \n u32[8,128,768]"];
	"convert.3875" [label="convert.3875 \n f32[8,128,768]"];
	"constant.379" [label="constant.379 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.82" [label="broadcast.82 \n f32[8,128,768]"];
	"multiply.3881" [label="multiply.3881 \n f32[8,128,768]"];
	"convert.3884" [label="convert.3884 \n bf16[8,128,768]"];
	"broadcast.3859" [label="broadcast.3859 \n bf16[8,128,768]"];
	"compare.3885" [label="compare.3885 \n pred[8,128,768]"];
	"constant.65" [label="constant.65 \n bf16[] constant(1), metadata="];
	"broadcast.83" [label="broadcast.83 \n bf16[8,128,768]"];
	"broadcast.365" [label="broadcast.365 \n bf16[8,128,768]"];
	"select.32" [label="select.32 \n bf16[8,128,768]"];
	"multiply.3928" [label="multiply.3928 \n bf16[8,128,768]"];
	"add.3929" [label="add.3929 \n bf16[8,128,768]"];
	"reshape.3930" [label="reshape.3930 \n bf16[1,1024,768]"];
	"constant.321" [label="constant.321 \n bf16[] constant(1), metadata="];
	"broadcast.325" [label="broadcast.325 \n bf16[1024]"];
	"constant.316" [label="constant.316 \n bf16[] constant(0), metadata="];
	"broadcast.320" [label="broadcast.320 \n bf16[1024]"];
	"reshape.3939" [label="reshape.3939 \n bf16[8,128,768]"];
	"p11.305" [label="p11.305 \n bf16[768]"];
	"broadcast.3942" [label="broadcast.3942 \n bf16[8,128,768]"];
	"multiply.3945" [label="multiply.3945 \n bf16[8,128,768]"];
	"add.3947" [label="add.3947 \n bf16[8,128,768]"];
	"reshape.4080" [label="reshape.4080 \n bf16[1024,768]"];
	"p189.4078" [label="p189.4078 \n bf16[768,768]"];
	"transpose.4079" [label="transpose.4079 \n bf16[768,768]"];
	"dot.4081" [label="dot.4081 \n bf16[1024,768]"];
	"reshape.4082" [label="reshape.4082 \n bf16[8,128,768]"];
	"p188.4076" [label="p188.4076 \n bf16[768]"];
	"broadcast.4083" [label="broadcast.4083 \n bf16[8,128,768]"];
	"add.4084" [label="add.4084 \n bf16[8,128,768]"];
	"reshape.4087" [label="reshape.4087 \n bf16[8,128,12,64]"];
	"transpose.4088" [label="transpose.4088 \n bf16[8,12,128,64]"];
	"reshape.4090" [label="reshape.4090 \n bf16[96,128,64]"];
	"reshape.4059" [label="reshape.4059 \n bf16[1024,768]"];
	"p187.4057" [label="p187.4057 \n bf16[768,768]"];
	"transpose.4058" [label="transpose.4058 \n bf16[768,768]"];
	"dot.4060" [label="dot.4060 \n bf16[1024,768]"];
	"reshape.4061" [label="reshape.4061 \n bf16[8,128,768]"];
	"p186.4055" [label="p186.4055 \n bf16[768]"];
	"broadcast.4062" [label="broadcast.4062 \n bf16[8,128,768]"];
	"add.4063" [label="add.4063 \n bf16[8,128,768]"];
	"reshape.4066" [label="reshape.4066 \n bf16[8,128,12,64]"];
	"transpose.4068" [label="transpose.4068 \n bf16[8,12,64,128]"];
	"reshape.4070" [label="reshape.4070 \n bf16[96,64,128]"];
	"dot.4091" [label="dot.4091 \n bf16[96,128,128]"];
	"broadcast.474" [label="broadcast.474 \n bf16[96,128,128]"];
	"divide.49" [label="divide.49 \n bf16[96,128,128]"];
	"reshape.1264" [label="reshape.1264 \n bf16[8,12,128,128]"];
	"broadcast.4097" [label="broadcast.4097 \n bf16[8,12,128,128]"];
	"add.4098" [label="add.4098 \n bf16[8,12,128,128]"];
	"constant.4099" [label="constant.4099 \n bf16[] constant(-inf), metadata="];
	"reduce.4104" [label="reduce.4104 \n bf16[8,12,128]"];
	"broadcast.4105" [label="broadcast.4105 \n bf16[8,12,128,128]"];
	"subtract.4106" [label="subtract.4106 \n bf16[8,12,128,128]"];
	"exponential.4107" [label="exponential.4107 \n bf16[8,12,128,128]"];
	"constant.4108" [label="constant.4108 \n bf16[] constant(0), metadata="];
	"reduce.4113" [label="reduce.4113 \n bf16[8,12,128]"];
	"broadcast.4114" [label="broadcast.4114 \n bf16[8,12,128,128]"];
	"divide.4115" [label="divide.4115 \n bf16[8,12,128,128]"];
	"constant.132" [label="constant.132 \n s64[] constant(214013), metadata="];
	"multiply.133" [label="multiply.133 \n s64[] multiply(s64[] %constant.132, s64[] %add.131), metadata="];
	"constant.134" [label="constant.134 \n s64[] constant(2531011), metadata="];
	"add.135" [label="add.135 \n s64[] add(s64[] %multiply.133, s64[] %constant.134), metadata="];
	"convert.4017" [label="convert.4017 \n u64[] convert(s64[] %add.135), metadata="];
	"reshape.4021" [label="reshape.4021 \n u64[1]"];
	"constant.382" [label="constant.382 \n u64[1]"];
	"concatenate.4023" [label="concatenate.4023 \n u64[2]"];
	"constant.4027" [label="constant.4027 \n u32[] constant(9), metadata="];
	"broadcast.4028" [label="broadcast.4028 \n u32[8,12,128,128]"];
	"convert.4030" [label="convert.4030 \n f32[8,12,128,128]"];
	"constant.388" [label="constant.388 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.85" [label="broadcast.85 \n f32[8,12,128,128]"];
	"multiply.4036" [label="multiply.4036 \n f32[8,12,128,128]"];
	"convert.4039" [label="convert.4039 \n bf16[8,12,128,128]"];
	"broadcast.4014" [label="broadcast.4014 \n bf16[8,12,128,128]"];
	"compare.4040" [label="compare.4040 \n pred[8,12,128,128]"];
	"constant.67" [label="constant.67 \n bf16[] constant(1), metadata="];
	"broadcast.86" [label="broadcast.86 \n bf16[8,12,128,128]"];
	"broadcast.378" [label="broadcast.378 \n bf16[8,12,128,128]"];
	"select.33" [label="select.33 \n bf16[8,12,128,128]"];
	"multiply.4116" [label="multiply.4116 \n bf16[8,12,128,128]"];
	"reshape.4118" [label="reshape.4118 \n bf16[96,128,128]"];
	"reshape.4000" [label="reshape.4000 \n bf16[1024,768]"];
	"p185.3998" [label="p185.3998 \n bf16[768,768]"];
	"transpose.3999" [label="transpose.3999 \n bf16[768,768]"];
	"dot.4001" [label="dot.4001 \n bf16[1024,768]"];
	"reshape.4002" [label="reshape.4002 \n bf16[8,128,768]"];
	"p184.3996" [label="p184.3996 \n bf16[768]"];
	"broadcast.4003" [label="broadcast.4003 \n bf16[8,128,768]"];
	"add.4004" [label="add.4004 \n bf16[8,128,768]"];
	"reshape.4007" [label="reshape.4007 \n bf16[8,128,12,64]"];
	"transpose.4008" [label="transpose.4008 \n bf16[8,12,128,64]"];
	"reshape.4010" [label="reshape.4010 \n bf16[96,128,64]"];
	"dot.4119" [label="dot.4119 \n bf16[96,128,64]"];
	"reshape.4120" [label="reshape.4120 \n bf16[8,12,128,64]"];
	"transpose.4121" [label="transpose.4121 \n bf16[8,128,12,64]"];
	"reshape.4123" [label="reshape.4123 \n bf16[1024,768]"];
	"p183.3989" [label="p183.3989 \n bf16[768,768]"];
	"transpose.3990" [label="transpose.3990 \n bf16[768,768]"];
	"dot.4124" [label="dot.4124 \n bf16[1024,768]"];
	"reshape.4125" [label="reshape.4125 \n bf16[8,128,768]"];
	"p182.3987" [label="p182.3987 \n bf16[768]"];
	"broadcast.4126" [label="broadcast.4126 \n bf16[8,128,768]"];
	"add.4127" [label="add.4127 \n bf16[8,128,768]"];
	"constant.136" [label="constant.136 \n s64[] constant(214013), metadata="];
	"multiply.137" [label="multiply.137 \n s64[] multiply(s64[] %constant.136, s64[] %add.135), metadata="];
	"constant.138" [label="constant.138 \n s64[] constant(2531011), metadata="];
	"add.139" [label="add.139 \n s64[] add(s64[] %multiply.137, s64[] %constant.138), metadata="];
	"convert.3955" [label="convert.3955 \n u64[] convert(s64[] %add.139), metadata="];
	"reshape.3959" [label="reshape.3959 \n u64[1]"];
	"constant.389" [label="constant.389 \n u64[1]"];
	"concatenate.3961" [label="concatenate.3961 \n u64[2]"];
	"constant.3965" [label="constant.3965 \n u32[] constant(9), metadata="];
	"broadcast.3966" [label="broadcast.3966 \n u32[8,128,768]"];
	"convert.3968" [label="convert.3968 \n f32[8,128,768]"];
	"constant.394" [label="constant.394 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.87" [label="broadcast.87 \n f32[8,128,768]"];
	"multiply.3974" [label="multiply.3974 \n f32[8,128,768]"];
	"convert.3977" [label="convert.3977 \n bf16[8,128,768]"];
	"broadcast.3952" [label="broadcast.3952 \n bf16[8,128,768]"];
	"compare.3978" [label="compare.3978 \n pred[8,128,768]"];
	"constant.69" [label="constant.69 \n bf16[] constant(1), metadata="];
	"broadcast.88" [label="broadcast.88 \n bf16[8,128,768]"];
	"broadcast.385" [label="broadcast.385 \n bf16[8,128,768]"];
	"select.34" [label="select.34 \n bf16[8,128,768]"];
	"multiply.4130" [label="multiply.4130 \n bf16[8,128,768]"];
	"add.4131" [label="add.4131 \n bf16[8,128,768]"];
	"reshape.4132" [label="reshape.4132 \n bf16[1,1024,768]"];
	"constant.294" [label="constant.294 \n bf16[] constant(1), metadata="];
	"broadcast.298" [label="broadcast.298 \n bf16[1024]"];
	"constant.289" [label="constant.289 \n bf16[] constant(0), metadata="];
	"broadcast.293" [label="broadcast.293 \n bf16[1024]"];
	"reshape.4141" [label="reshape.4141 \n bf16[8,128,768]"];
	"p10.278" [label="p10.278 \n bf16[768]"];
	"broadcast.4144" [label="broadcast.4144 \n bf16[8,128,768]"];
	"multiply.4147" [label="multiply.4147 \n bf16[8,128,768]"];
	"add.4149" [label="add.4149 \n bf16[8,128,768]"];
	"reshape.4202" [label="reshape.4202 \n bf16[1024,768]"];
	"p194.4200" [label="p194.4200 \n bf16[3072,768]"];
	"transpose.4201" [label="transpose.4201 \n bf16[768,3072]"];
	"dot.4203" [label="dot.4203 \n bf16[1024,3072]"];
	"reshape.4204" [label="reshape.4204 \n bf16[8,128,3072]"];
	"p193.4198" [label="p193.4198 \n bf16[3072]"];
	"broadcast.4205" [label="broadcast.4205 \n bf16[8,128,3072]"];
	"add.4206" [label="add.4206 \n bf16[8,128,3072]"];
	"reshape.4216" [label="reshape.4216 \n bf16[1024,3072]"];
	"p192.4191" [label="p192.4191 \n bf16[768,3072]"];
	"transpose.4192" [label="transpose.4192 \n bf16[3072,768]"];
	"dot.4217" [label="dot.4217 \n bf16[1024,768]"];
	"reshape.4218" [label="reshape.4218 \n bf16[8,128,768]"];
	"p191.4189" [label="p191.4189 \n bf16[768]"];
	"broadcast.4219" [label="broadcast.4219 \n bf16[8,128,768]"];
	"add.4220" [label="add.4220 \n bf16[8,128,768]"];
	"constant.140" [label="constant.140 \n s64[] constant(214013), metadata="];
	"multiply.141" [label="multiply.141 \n s64[] multiply(s64[] %constant.140, s64[] %add.139), metadata="];
	"constant.142" [label="constant.142 \n s64[] constant(2531011), metadata="];
	"add.143" [label="add.143 \n s64[] add(s64[] %multiply.141, s64[] %constant.142), metadata="];
	"convert.4157" [label="convert.4157 \n u64[] convert(s64[] %add.143), metadata="];
	"reshape.4161" [label="reshape.4161 \n u64[1]"];
	"constant.396" [label="constant.396 \n u64[1]"];
	"concatenate.4163" [label="concatenate.4163 \n u64[2]"];
	"constant.4167" [label="constant.4167 \n u32[] constant(9), metadata="];
	"broadcast.4168" [label="broadcast.4168 \n u32[8,128,768]"];
	"convert.4170" [label="convert.4170 \n f32[8,128,768]"];
	"constant.401" [label="constant.401 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.89" [label="broadcast.89 \n f32[8,128,768]"];
	"multiply.4176" [label="multiply.4176 \n f32[8,128,768]"];
	"convert.4179" [label="convert.4179 \n bf16[8,128,768]"];
	"broadcast.4154" [label="broadcast.4154 \n bf16[8,128,768]"];
	"compare.4180" [label="compare.4180 \n pred[8,128,768]"];
	"constant.71" [label="constant.71 \n bf16[] constant(1), metadata="];
	"broadcast.90" [label="broadcast.90 \n bf16[8,128,768]"];
	"broadcast.395" [label="broadcast.395 \n bf16[8,128,768]"];
	"select.35" [label="select.35 \n bf16[8,128,768]"];
	"multiply.4223" [label="multiply.4223 \n bf16[8,128,768]"];
	"add.4224" [label="add.4224 \n bf16[8,128,768]"];
	"reshape.4225" [label="reshape.4225 \n bf16[1,1024,768]"];
	"constant.267" [label="constant.267 \n bf16[] constant(1), metadata="];
	"broadcast.271" [label="broadcast.271 \n bf16[1024]"];
	"constant.262" [label="constant.262 \n bf16[] constant(0), metadata="];
	"broadcast.266" [label="broadcast.266 \n bf16[1024]"];
	"reshape.4234" [label="reshape.4234 \n bf16[8,128,768]"];
	"p9.251" [label="p9.251 \n bf16[768]"];
	"broadcast.4237" [label="broadcast.4237 \n bf16[8,128,768]"];
	"multiply.4240" [label="multiply.4240 \n bf16[8,128,768]"];
	"add.4242" [label="add.4242 \n bf16[8,128,768]"];
	"reshape.4375" [label="reshape.4375 \n bf16[1024,768]"];
	"p203.4373" [label="p203.4373 \n bf16[768,768]"];
	"transpose.4374" [label="transpose.4374 \n bf16[768,768]"];
	"dot.4376" [label="dot.4376 \n bf16[1024,768]"];
	"reshape.4377" [label="reshape.4377 \n bf16[8,128,768]"];
	"p202.4371" [label="p202.4371 \n bf16[768]"];
	"broadcast.4378" [label="broadcast.4378 \n bf16[8,128,768]"];
	"add.4379" [label="add.4379 \n bf16[8,128,768]"];
	"reshape.4382" [label="reshape.4382 \n bf16[8,128,12,64]"];
	"transpose.4383" [label="transpose.4383 \n bf16[8,12,128,64]"];
	"reshape.4385" [label="reshape.4385 \n bf16[96,128,64]"];
	"reshape.4354" [label="reshape.4354 \n bf16[1024,768]"];
	"p201.4352" [label="p201.4352 \n bf16[768,768]"];
	"transpose.4353" [label="transpose.4353 \n bf16[768,768]"];
	"dot.4355" [label="dot.4355 \n bf16[1024,768]"];
	"reshape.4356" [label="reshape.4356 \n bf16[8,128,768]"];
	"p200.4350" [label="p200.4350 \n bf16[768]"];
	"broadcast.4357" [label="broadcast.4357 \n bf16[8,128,768]"];
	"add.4358" [label="add.4358 \n bf16[8,128,768]"];
	"reshape.4361" [label="reshape.4361 \n bf16[8,128,12,64]"];
	"transpose.4363" [label="transpose.4363 \n bf16[8,12,64,128]"];
	"reshape.4365" [label="reshape.4365 \n bf16[96,64,128]"];
	"dot.4386" [label="dot.4386 \n bf16[96,128,128]"];
	"broadcast.478" [label="broadcast.478 \n bf16[96,128,128]"];
	"divide.50" [label="divide.50 \n bf16[96,128,128]"];
	"reshape.1269" [label="reshape.1269 \n bf16[8,12,128,128]"];
	"broadcast.4392" [label="broadcast.4392 \n bf16[8,12,128,128]"];
	"add.4393" [label="add.4393 \n bf16[8,12,128,128]"];
	"constant.4394" [label="constant.4394 \n bf16[] constant(-inf), metadata="];
	"reduce.4399" [label="reduce.4399 \n bf16[8,12,128]"];
	"broadcast.4400" [label="broadcast.4400 \n bf16[8,12,128,128]"];
	"subtract.4401" [label="subtract.4401 \n bf16[8,12,128,128]"];
	"exponential.4402" [label="exponential.4402 \n bf16[8,12,128,128]"];
	"constant.4403" [label="constant.4403 \n bf16[] constant(0), metadata="];
	"reduce.4408" [label="reduce.4408 \n bf16[8,12,128]"];
	"broadcast.4409" [label="broadcast.4409 \n bf16[8,12,128,128]"];
	"divide.4410" [label="divide.4410 \n bf16[8,12,128,128]"];
	"constant.144" [label="constant.144 \n s64[] constant(214013), metadata="];
	"multiply.145" [label="multiply.145 \n s64[] multiply(s64[] %constant.144, s64[] %add.143), metadata="];
	"constant.146" [label="constant.146 \n s64[] constant(2531011), metadata="];
	"add.147" [label="add.147 \n s64[] add(s64[] %multiply.145, s64[] %constant.146), metadata="];
	"convert.4312" [label="convert.4312 \n u64[] convert(s64[] %add.147), metadata="];
	"reshape.4316" [label="reshape.4316 \n u64[1]"];
	"constant.404" [label="constant.404 \n u64[1]"];
	"concatenate.4318" [label="concatenate.4318 \n u64[2]"];
	"constant.4322" [label="constant.4322 \n u32[] constant(9), metadata="];
	"broadcast.4323" [label="broadcast.4323 \n u32[8,12,128,128]"];
	"convert.4325" [label="convert.4325 \n f32[8,12,128,128]"];
	"constant.409" [label="constant.409 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.92" [label="broadcast.92 \n f32[8,12,128,128]"];
	"multiply.4331" [label="multiply.4331 \n f32[8,12,128,128]"];
	"convert.4334" [label="convert.4334 \n bf16[8,12,128,128]"];
	"broadcast.4309" [label="broadcast.4309 \n bf16[8,12,128,128]"];
	"compare.4335" [label="compare.4335 \n pred[8,12,128,128]"];
	"constant.73" [label="constant.73 \n bf16[] constant(1), metadata="];
	"broadcast.93" [label="broadcast.93 \n bf16[8,12,128,128]"];
	"broadcast.408" [label="broadcast.408 \n bf16[8,12,128,128]"];
	"select.36" [label="select.36 \n bf16[8,12,128,128]"];
	"multiply.4411" [label="multiply.4411 \n bf16[8,12,128,128]"];
	"reshape.4413" [label="reshape.4413 \n bf16[96,128,128]"];
	"reshape.4295" [label="reshape.4295 \n bf16[1024,768]"];
	"p199.4293" [label="p199.4293 \n bf16[768,768]"];
	"transpose.4294" [label="transpose.4294 \n bf16[768,768]"];
	"dot.4296" [label="dot.4296 \n bf16[1024,768]"];
	"reshape.4297" [label="reshape.4297 \n bf16[8,128,768]"];
	"p198.4291" [label="p198.4291 \n bf16[768]"];
	"broadcast.4298" [label="broadcast.4298 \n bf16[8,128,768]"];
	"add.4299" [label="add.4299 \n bf16[8,128,768]"];
	"reshape.4302" [label="reshape.4302 \n bf16[8,128,12,64]"];
	"transpose.4303" [label="transpose.4303 \n bf16[8,12,128,64]"];
	"reshape.4305" [label="reshape.4305 \n bf16[96,128,64]"];
	"dot.4414" [label="dot.4414 \n bf16[96,128,64]"];
	"reshape.4415" [label="reshape.4415 \n bf16[8,12,128,64]"];
	"transpose.4416" [label="transpose.4416 \n bf16[8,128,12,64]"];
	"reshape.4418" [label="reshape.4418 \n bf16[1024,768]"];
	"p197.4284" [label="p197.4284 \n bf16[768,768]"];
	"transpose.4285" [label="transpose.4285 \n bf16[768,768]"];
	"dot.4419" [label="dot.4419 \n bf16[1024,768]"];
	"reshape.4420" [label="reshape.4420 \n bf16[8,128,768]"];
	"p196.4282" [label="p196.4282 \n bf16[768]"];
	"broadcast.4421" [label="broadcast.4421 \n bf16[8,128,768]"];
	"add.4422" [label="add.4422 \n bf16[8,128,768]"];
	"constant.148" [label="constant.148 \n s64[] constant(214013), metadata="];
	"multiply.149" [label="multiply.149 \n s64[] multiply(s64[] %constant.148, s64[] %add.147), metadata="];
	"constant.150" [label="constant.150 \n s64[] constant(2531011), metadata="];
	"add.151" [label="add.151 \n s64[] add(s64[] %multiply.149, s64[] %constant.150), metadata="];
	"convert.4250" [label="convert.4250 \n u64[] convert(s64[] %add.151), metadata="];
	"reshape.4254" [label="reshape.4254 \n u64[1]"];
	"constant.410" [label="constant.410 \n u64[1]"];
	"concatenate.4256" [label="concatenate.4256 \n u64[2]"];
	"constant.4260" [label="constant.4260 \n u32[] constant(9), metadata="];
	"broadcast.4261" [label="broadcast.4261 \n u32[8,128,768]"];
	"convert.4263" [label="convert.4263 \n f32[8,128,768]"];
	"constant.416" [label="constant.416 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.94" [label="broadcast.94 \n f32[8,128,768]"];
	"multiply.4269" [label="multiply.4269 \n f32[8,128,768]"];
	"convert.4272" [label="convert.4272 \n bf16[8,128,768]"];
	"broadcast.4247" [label="broadcast.4247 \n bf16[8,128,768]"];
	"compare.4273" [label="compare.4273 \n pred[8,128,768]"];
	"constant.75" [label="constant.75 \n bf16[] constant(1), metadata="];
	"broadcast.95" [label="broadcast.95 \n bf16[8,128,768]"];
	"broadcast.414" [label="broadcast.414 \n bf16[8,128,768]"];
	"select.37" [label="select.37 \n bf16[8,128,768]"];
	"multiply.4425" [label="multiply.4425 \n bf16[8,128,768]"];
	"add.4426" [label="add.4426 \n bf16[8,128,768]"];
	"reshape.4427" [label="reshape.4427 \n bf16[1,1024,768]"];
	"constant.240" [label="constant.240 \n bf16[] constant(1), metadata="];
	"broadcast.244" [label="broadcast.244 \n bf16[1024]"];
	"constant.235" [label="constant.235 \n bf16[] constant(0), metadata="];
	"broadcast.239" [label="broadcast.239 \n bf16[1024]"];
	"reshape.4436" [label="reshape.4436 \n bf16[8,128,768]"];
	"p8.224" [label="p8.224 \n bf16[768]"];
	"broadcast.4439" [label="broadcast.4439 \n bf16[8,128,768]"];
	"multiply.4442" [label="multiply.4442 \n bf16[8,128,768]"];
	"add.4444" [label="add.4444 \n bf16[8,128,768]"];
	"reshape.4497" [label="reshape.4497 \n bf16[1024,768]"];
	"p208.4495" [label="p208.4495 \n bf16[3072,768]"];
	"transpose.4496" [label="transpose.4496 \n bf16[768,3072]"];
	"dot.4498" [label="dot.4498 \n bf16[1024,3072]"];
	"reshape.4499" [label="reshape.4499 \n bf16[8,128,3072]"];
	"p207.4493" [label="p207.4493 \n bf16[3072]"];
	"broadcast.4500" [label="broadcast.4500 \n bf16[8,128,3072]"];
	"add.4501" [label="add.4501 \n bf16[8,128,3072]"];
	"reshape.4511" [label="reshape.4511 \n bf16[1024,3072]"];
	"p206.4486" [label="p206.4486 \n bf16[768,3072]"];
	"transpose.4487" [label="transpose.4487 \n bf16[3072,768]"];
	"dot.4512" [label="dot.4512 \n bf16[1024,768]"];
	"reshape.4513" [label="reshape.4513 \n bf16[8,128,768]"];
	"p205.4484" [label="p205.4484 \n bf16[768]"];
	"broadcast.4514" [label="broadcast.4514 \n bf16[8,128,768]"];
	"add.4515" [label="add.4515 \n bf16[8,128,768]"];
	"constant.152" [label="constant.152 \n s64[] constant(214013), metadata="];
	"multiply.153" [label="multiply.153 \n s64[] multiply(s64[] %constant.152, s64[] %add.151), metadata="];
	"constant.154" [label="constant.154 \n s64[] constant(2531011), metadata="];
	"add.155" [label="add.155 \n s64[] add(s64[] %multiply.153, s64[] %constant.154), metadata="];
	"convert.4452" [label="convert.4452 \n u64[] convert(s64[] %add.155), metadata="];
	"reshape.4456" [label="reshape.4456 \n u64[1]"];
	"constant.418" [label="constant.418 \n u64[1]"];
	"concatenate.4458" [label="concatenate.4458 \n u64[2]"];
	"constant.4462" [label="constant.4462 \n u32[] constant(9), metadata="];
	"broadcast.4463" [label="broadcast.4463 \n u32[8,128,768]"];
	"convert.4465" [label="convert.4465 \n f32[8,128,768]"];
	"constant.423" [label="constant.423 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.96" [label="broadcast.96 \n f32[8,128,768]"];
	"multiply.4471" [label="multiply.4471 \n f32[8,128,768]"];
	"convert.4474" [label="convert.4474 \n bf16[8,128,768]"];
	"broadcast.4449" [label="broadcast.4449 \n bf16[8,128,768]"];
	"compare.4475" [label="compare.4475 \n pred[8,128,768]"];
	"constant.77" [label="constant.77 \n bf16[] constant(1), metadata="];
	"broadcast.97" [label="broadcast.97 \n bf16[8,128,768]"];
	"broadcast.425" [label="broadcast.425 \n bf16[8,128,768]"];
	"select.38" [label="select.38 \n bf16[8,128,768]"];
	"multiply.4518" [label="multiply.4518 \n bf16[8,128,768]"];
	"add.4519" [label="add.4519 \n bf16[8,128,768]"];
	"reshape.4520" [label="reshape.4520 \n bf16[1,1024,768]"];
	"constant.213" [label="constant.213 \n bf16[] constant(1), metadata="];
	"broadcast.217" [label="broadcast.217 \n bf16[1024]"];
	"constant.208" [label="constant.208 \n bf16[] constant(0), metadata="];
	"broadcast.212" [label="broadcast.212 \n bf16[1024]"];
	"reshape.4529" [label="reshape.4529 \n bf16[8,128,768]"];
	"p7.197" [label="p7.197 \n bf16[768]"];
	"broadcast.4532" [label="broadcast.4532 \n bf16[8,128,768]"];
	"multiply.4535" [label="multiply.4535 \n bf16[8,128,768]"];
	"add.4537" [label="add.4537 \n bf16[8,128,768]"];
	"slice.4539" [label="slice.4539 \n bf16[8,1,768]"];
	"reshape.4540" [label="reshape.4540 \n bf16[8,768]"];
	"p6.194" [label="p6.194 \n bf16[768,768]"];
	"transpose.195" [label="transpose.195 \n bf16[768,768]"];
	"dot.4541" [label="dot.4541 \n bf16[8,768]"];
	"p5.193" [label="p5.193 \n bf16[768]"];
	"broadcast.4545" [label="broadcast.4545 \n bf16[8,768]"];
	"add.4546" [label="add.4546 \n bf16[8,768]"];
	"tanh.4547" [label="tanh.4547 \n bf16[8,768]"];
	"constant.156" [label="constant.156 \n s64[] constant(214013), metadata="];
	"multiply.157" [label="multiply.157 \n s64[] multiply(s64[] %constant.156, s64[] %add.155), metadata="];
	"constant.158" [label="constant.158 \n s64[] constant(2531011), metadata="];
	"add.159" [label="add.159 \n s64[] add(s64[] %multiply.157, s64[] %constant.158), metadata="];
	"convert.166" [label="convert.166 \n u64[] convert(s64[] %add.159), metadata="];
	"reshape.170" [label="reshape.170 \n u64[1]"];
	"constant.426" [label="constant.426 \n u64[1]"];
	"concatenate.172" [label="concatenate.172 \n u64[2]"];
	"constant.176" [label="constant.176 \n u32[] constant(9), metadata="];
	"broadcast.177" [label="broadcast.177 \n u32[8,768]"];
	"convert.179" [label="convert.179 \n f32[8,768]"];
	"constant.431" [label="constant.431 \n f32[] constant(1.1920929e-07), metadata="];
	"broadcast.98" [label="broadcast.98 \n f32[8,768]"];
	"multiply.185" [label="multiply.185 \n f32[8,768]"];
	"convert.188" [label="convert.188 \n bf16[8,768]"];
	"broadcast.163" [label="broadcast.163 \n bf16[8,768]"];
	"compare.189" [label="compare.189 \n pred[8,768]"];
	"constant.79" [label="constant.79 \n bf16[] constant(1), metadata="];
	"broadcast.99" [label="broadcast.99 \n bf16[8,768]"];
	"broadcast.435" [label="broadcast.435 \n bf16[8,768]"];
	"select.39" [label="select.39 \n bf16[8,768]"];
	"multiply.4548" [label="multiply.4548 \n bf16[8,768]"];
	"p2.4" [label="p2.4 \n bf16[2,768]"];
	"transpose.5" [label="transpose.5 \n bf16[768,2]"];
	"dot.4549" [label="dot.4549 \n bf16[8,2]"];
	"p1.3" [label="p1.3 \n bf16[2]"];
	"broadcast.4553" [label="broadcast.4553 \n bf16[8,2]"];
	"add.4554" [label="add.4554 \n bf16[8,2]"];
	"reduce.0" [label="reduce.0 \n bf16[8]"];
	"broadcast.0" [label="broadcast.0 \n bf16[8,2]"];
	"subtract.0" [label="subtract.0 \n bf16[8,2]"];
	"exponential.0" [label="exponential.0 \n bf16[8,2]"];
	"reduce.1" [label="reduce.1 \n bf16[8]"];
	"log.0" [label="log.0 \n bf16[8]"];
	"broadcast.1" [label="broadcast.1 \n bf16[8,2]"];
	"subtract.1" [label="subtract.1 \n bf16[8,2]"];
	"broadcast.3" [label="broadcast.3 \n s64[8,2]"];
	"iota.2" [label="iota.2 \n s64[8,2]"];
	"compare.0" [label="compare.0 \n pred[8,2]"];
	"broadcast.6" [label="broadcast.6 \n bf16[8,2]"];
	"broadcast.7" [label="broadcast.7 \n bf16[8,2]"];
	"select.0" [label="select.0 \n bf16[8,2]"];
	"multiply.0" [label="multiply.0 \n bf16[8,2]"];
	"reduce.2" [label="reduce.2 \n bf16[8]"];
	"broadcast.100" [label="broadcast.100 \n bf16[8]"];
	"select.1" [label="select.1 \n bf16[8]"];
	"reduce.3" [label="reduce.3 \n bf16[] reduce(bf16[8]"];
	"convert.0" [label="convert.0 \n bf16[8]"];
	"reduce.4" [label="reduce.4 \n bf16[] reduce(bf16[8]"];
	"negate.0" [label="negate.0 \n bf16[] negate(bf16[] %divide.0), metadata="];
	"add.4620" [label="add.4620 \n bf16[] add(bf16[] %p210.4619, bf16[] %negate.0), metadata="];
	"tuple.4621" [label="tuple.4621 \n (bf16[]) tuple(bf16[] %add.4620), frontend_attributes="]; 
 	"constant.5" -> "broadcast.8";
	"p0.2" -> "compare.1";
	"broadcast.8" -> "compare.1";
	"p209.4530" -> "broadcast.4536";
	"p204.4437" -> "broadcast.4443";
	"p195.4235" -> "broadcast.4241";
	"p190.4142" -> "broadcast.4148";
	"p181.3940" -> "broadcast.3946";
	"p176.3847" -> "broadcast.3853";
	"p167.3645" -> "broadcast.3651";
	"p162.3552" -> "broadcast.3558";
	"p153.3350" -> "broadcast.3356";
	"p148.3257" -> "broadcast.3263";
	"p139.3055" -> "broadcast.3061";
	"p134.2962" -> "broadcast.2968";
	"p125.2760" -> "broadcast.2766";
	"p120.2667" -> "broadcast.2673";
	"p111.2465" -> "broadcast.2471";
	"p106.2372" -> "broadcast.2378";
	"p97.2170" -> "broadcast.2176";
	"p92.2077" -> "broadcast.2083";
	"p83.1875" -> "broadcast.1881";
	"p78.1782" -> "broadcast.1788";
	"p69.1580" -> "broadcast.1586";
	"p64.1487" -> "broadcast.1493";
	"p55.1285" -> "broadcast.1291";
	"p50.1192" -> "broadcast.1198";
	"p38.967" -> "broadcast.973";
	"p37.941" -> "custom-call.15";
	"p36.939" -> "convert.5";
	"convert.5" -> "reshape.935";
	"custom-call.15" -> "gather.950";
	"reshape.935" -> "gather.950";
	"p35.927" -> "custom-call.16";
	"p34.925" -> "convert.4";
	"convert.4" -> "reshape.934";
	"custom-call.16" -> "gather.936";
	"reshape.934" -> "gather.936";
	"gather.950" -> "add.48";
	"gather.936" -> "add.48";
	"add.48" -> "reshape.1220";
	"p33.908" -> "custom-call.17";
	"p32.904" -> "convert.3";
	"convert.3" -> "slice.0";
	"slice.0" -> "reshape.933";
	"custom-call.17" -> "gather.917";
	"reshape.933" -> "gather.917";
	"gather.917" -> "broadcast.955";
	"reshape.1220" -> "add.956";
	"broadcast.955" -> "add.956";
	"add.956" -> "reshape.957";
	"constant.894" -> "broadcast.898";
	"constant.889" -> "broadcast.893";
	"reshape.957" -> "batch-norm-training.958";
	"broadcast.898" -> "batch-norm-training.958";
	"broadcast.893" -> "batch-norm-training.958";
	"batch-norm-training.958" -> "get-tuple-element.959";
	"get-tuple-element.959" -> "reshape.966";
	"p31.878" -> "broadcast.969";
	"reshape.966" -> "multiply.972";
	"broadcast.969" -> "multiply.972";
	"broadcast.973" -> "add.974";
	"multiply.972" -> "add.974";
	"constant.8" -> "multiply.9";
	"p4.7" -> "multiply.9";
	"multiply.9" -> "add.11";
	"constant.10" -> "add.11";
	"add.11" -> "convert.850";
	"convert.850" -> "reshape.854";
	"reshape.854" -> "concatenate.856";
	"constant.160" -> "concatenate.856";
	"concatenate.856" -> "rng-bit-generator.857";
	"rng-bit-generator.857" -> "get-tuple-element.858";
	"constant.860" -> "broadcast.861";
	"get-tuple-element.858" -> "shift-right-logical.862";
	"broadcast.861" -> "shift-right-logical.862";
	"shift-right-logical.862" -> "convert.863";
	"constant.166" -> "broadcast.10";
	"convert.863" -> "multiply.869";
	"broadcast.10" -> "multiply.869";
	"multiply.869" -> "convert.872";
	"p3.6" -> "broadcast.847";
	"convert.872" -> "compare.873";
	"broadcast.847" -> "compare.873";
	"constant.6" -> "divide.1";
	"p3.6" -> "divide.1";
	"divide.1" -> "broadcast.11";
	"constant.83" -> "broadcast.107";
	"compare.873" -> "select.2";
	"broadcast.11" -> "select.2";
	"broadcast.107" -> "select.2";
	"add.974" -> "multiply.976";
	"select.2" -> "multiply.976";
	"multiply.976" -> "reshape.1130";
	"p49.1128" -> "transpose.1129";
	"reshape.1130" -> "dot.1131";
	"transpose.1129" -> "dot.1131";
	"dot.1131" -> "reshape.1132";
	"p48.1126" -> "broadcast.1133";
	"reshape.1132" -> "add.1134";
	"broadcast.1133" -> "add.1134";
	"add.1134" -> "reshape.1137";
	"reshape.1137" -> "transpose.1138";
	"transpose.1138" -> "reshape.1140";
	"multiply.976" -> "reshape.1109";
	"p47.1107" -> "transpose.1108";
	"reshape.1109" -> "dot.1110";
	"transpose.1108" -> "dot.1110";
	"dot.1110" -> "reshape.1111";
	"p46.1105" -> "broadcast.1112";
	"reshape.1111" -> "add.1113";
	"broadcast.1112" -> "add.1113";
	"add.1113" -> "reshape.1116";
	"reshape.1116" -> "transpose.1118";
	"transpose.1118" -> "reshape.1120";
	"reshape.1140" -> "dot.1141";
	"reshape.1120" -> "dot.1141";
	"p45.1099" -> "broadcast.440";
	"dot.1141" -> "divide.39";
	"broadcast.440" -> "divide.39";
	"divide.39" -> "reshape.1226";
	"constant.1090" -> "broadcast.442";
	"p44.1078" -> "convert.1";
	"broadcast.442" -> "subtract.2";
	"convert.1" -> "subtract.2";
	"p43.1077" -> "broadcast.481";
	"subtract.2" -> "multiply.152";
	"broadcast.481" -> "multiply.152";
	"multiply.152" -> "broadcast.1147";
	"reshape.1226" -> "add.1148";
	"broadcast.1147" -> "add.1148";
	"add.1148" -> "reduce.1154";
	"constant.1149" -> "reduce.1154";
	"MaxComputation.1150" -> "reduce.1154";
	"reduce.1154" -> "broadcast.1155";
	"add.1148" -> "subtract.1156";
	"broadcast.1155" -> "subtract.1156";
	"subtract.1156" -> "exponential.1157";
	"exponential.1157" -> "reduce.1163";
	"constant.1158" -> "reduce.1163";
	"AddComputation.1159" -> "reduce.1163";
	"reduce.1163" -> "broadcast.1164";
	"exponential.1157" -> "divide.1165";
	"broadcast.1164" -> "divide.1165";
	"constant.12" -> "multiply.13";
	"add.11" -> "multiply.13";
	"multiply.13" -> "add.15";
	"constant.14" -> "add.15";
	"add.15" -> "convert.1045";
	"convert.1045" -> "reshape.1049";
	"reshape.1049" -> "concatenate.1051";
	"constant.167" -> "concatenate.1051";
	"concatenate.1051" -> "rng-bit-generator.1052";
	"rng-bit-generator.1052" -> "get-tuple-element.1053";
	"constant.1055" -> "broadcast.1056";
	"get-tuple-element.1053" -> "shift-right-logical.1057";
	"broadcast.1056" -> "shift-right-logical.1057";
	"shift-right-logical.1057" -> "convert.1058";
	"constant.172" -> "broadcast.15";
	"convert.1058" -> "multiply.1064";
	"broadcast.15" -> "multiply.1064";
	"multiply.1064" -> "convert.1067";
	"p3.6" -> "broadcast.1042";
	"convert.1067" -> "compare.1068";
	"broadcast.1042" -> "compare.1068";
	"constant.7" -> "divide.2";
	"p3.6" -> "divide.2";
	"divide.2" -> "broadcast.16";
	"constant.85" -> "broadcast.114";
	"compare.1068" -> "select.3";
	"broadcast.16" -> "select.3";
	"broadcast.114" -> "select.3";
	"divide.1165" -> "multiply.1166";
	"select.3" -> "multiply.1166";
	"multiply.1166" -> "reshape.1168";
	"multiply.976" -> "reshape.1028";
	"p42.1026" -> "transpose.1027";
	"reshape.1028" -> "dot.1029";
	"transpose.1027" -> "dot.1029";
	"dot.1029" -> "reshape.1030";
	"p41.1024" -> "broadcast.1031";
	"reshape.1030" -> "add.1032";
	"broadcast.1031" -> "add.1032";
	"add.1032" -> "reshape.1035";
	"reshape.1035" -> "transpose.1036";
	"transpose.1036" -> "reshape.1038";
	"reshape.1168" -> "dot.1169";
	"reshape.1038" -> "dot.1169";
	"dot.1169" -> "reshape.1170";
	"reshape.1170" -> "transpose.1171";
	"transpose.1171" -> "reshape.1173";
	"p40.1017" -> "transpose.1018";
	"reshape.1173" -> "dot.1174";
	"transpose.1018" -> "dot.1174";
	"dot.1174" -> "reshape.1175";
	"p39.1015" -> "broadcast.1176";
	"reshape.1175" -> "add.1177";
	"broadcast.1176" -> "add.1177";
	"constant.16" -> "multiply.17";
	"add.15" -> "multiply.17";
	"multiply.17" -> "add.19";
	"constant.18" -> "add.19";
	"add.19" -> "convert.983";
	"convert.983" -> "reshape.987";
	"reshape.987" -> "concatenate.989";
	"constant.173" -> "concatenate.989";
	"concatenate.989" -> "rng-bit-generator.990";
	"rng-bit-generator.990" -> "get-tuple-element.991";
	"constant.993" -> "broadcast.994";
	"get-tuple-element.991" -> "shift-right-logical.995";
	"broadcast.994" -> "shift-right-logical.995";
	"shift-right-logical.995" -> "convert.996";
	"constant.178" -> "broadcast.17";
	"convert.996" -> "multiply.1002";
	"broadcast.17" -> "multiply.1002";
	"multiply.1002" -> "convert.1005";
	"p3.6" -> "broadcast.980";
	"convert.1005" -> "compare.1006";
	"broadcast.980" -> "compare.1006";
	"constant.9" -> "divide.3";
	"p3.6" -> "divide.3";
	"divide.3" -> "broadcast.18";
	"constant.87" -> "broadcast.118";
	"compare.1006" -> "select.4";
	"broadcast.18" -> "select.4";
	"broadcast.118" -> "select.4";
	"add.1177" -> "multiply.1180";
	"select.4" -> "multiply.1180";
	"multiply.1180" -> "add.1181";
	"multiply.976" -> "add.1181";
	"add.1181" -> "reshape.1182";
	"constant.834" -> "broadcast.838";
	"constant.829" -> "broadcast.833";
	"reshape.1182" -> "batch-norm-training.1183";
	"broadcast.838" -> "batch-norm-training.1183";
	"broadcast.833" -> "batch-norm-training.1183";
	"batch-norm-training.1183" -> "get-tuple-element.1184";
	"get-tuple-element.1184" -> "reshape.1191";
	"p30.818" -> "broadcast.1194";
	"reshape.1191" -> "multiply.1197";
	"broadcast.1194" -> "multiply.1197";
	"broadcast.1198" -> "add.1199";
	"multiply.1197" -> "add.1199";
	"add.1199" -> "reshape.1252";
	"p54.1250" -> "transpose.1251";
	"reshape.1252" -> "dot.1253";
	"transpose.1251" -> "dot.1253";
	"dot.1253" -> "reshape.1254";
	"p53.1248" -> "broadcast.1255";
	"reshape.1254" -> "add.1256";
	"broadcast.1255" -> "add.1256";
	"add.1256" -> "custom-call.18";
	"custom-call.18" -> "reshape.1266";
	"p52.1241" -> "transpose.1242";
	"reshape.1266" -> "dot.1267";
	"transpose.1242" -> "dot.1267";
	"dot.1267" -> "reshape.1268";
	"p51.1239" -> "broadcast.1269";
	"reshape.1268" -> "add.1270";
	"broadcast.1269" -> "add.1270";
	"constant.20" -> "multiply.21";
	"add.19" -> "multiply.21";
	"multiply.21" -> "add.23";
	"constant.22" -> "add.23";
	"add.23" -> "convert.1207";
	"convert.1207" -> "reshape.1211";
	"reshape.1211" -> "concatenate.1213";
	"constant.181" -> "concatenate.1213";
	"concatenate.1213" -> "rng-bit-generator.1214";
	"rng-bit-generator.1214" -> "get-tuple-element.1215";
	"constant.1217" -> "broadcast.1218";
	"get-tuple-element.1215" -> "shift-right-logical.1219";
	"broadcast.1218" -> "shift-right-logical.1219";
	"shift-right-logical.1219" -> "convert.1220";
	"constant.185" -> "broadcast.19";
	"convert.1220" -> "multiply.1226";
	"broadcast.19" -> "multiply.1226";
	"multiply.1226" -> "convert.1229";
	"p3.6" -> "broadcast.1204";
	"convert.1229" -> "compare.1230";
	"broadcast.1204" -> "compare.1230";
	"constant.11" -> "divide.4";
	"p3.6" -> "divide.4";
	"divide.4" -> "broadcast.20";
	"constant.89" -> "broadcast.125";
	"compare.1230" -> "select.5";
	"broadcast.20" -> "select.5";
	"broadcast.125" -> "select.5";
	"add.1270" -> "multiply.1273";
	"select.5" -> "multiply.1273";
	"multiply.1273" -> "add.1274";
	"add.1199" -> "add.1274";
	"add.1274" -> "reshape.1275";
	"constant.807" -> "broadcast.811";
	"constant.802" -> "broadcast.806";
	"reshape.1275" -> "batch-norm-training.1276";
	"broadcast.811" -> "batch-norm-training.1276";
	"broadcast.806" -> "batch-norm-training.1276";
	"batch-norm-training.1276" -> "get-tuple-element.1277";
	"get-tuple-element.1277" -> "reshape.1284";
	"p29.791" -> "broadcast.1287";
	"reshape.1284" -> "multiply.1290";
	"broadcast.1287" -> "multiply.1290";
	"broadcast.1291" -> "add.1292";
	"multiply.1290" -> "add.1292";
	"add.1292" -> "reshape.1425";
	"p63.1423" -> "transpose.1424";
	"reshape.1425" -> "dot.1426";
	"transpose.1424" -> "dot.1426";
	"dot.1426" -> "reshape.1427";
	"p62.1421" -> "broadcast.1428";
	"reshape.1427" -> "add.1429";
	"broadcast.1428" -> "add.1429";
	"add.1429" -> "reshape.1432";
	"reshape.1432" -> "transpose.1433";
	"transpose.1433" -> "reshape.1435";
	"add.1292" -> "reshape.1404";
	"p61.1402" -> "transpose.1403";
	"reshape.1404" -> "dot.1405";
	"transpose.1403" -> "dot.1405";
	"dot.1405" -> "reshape.1406";
	"p60.1400" -> "broadcast.1407";
	"reshape.1406" -> "add.1408";
	"broadcast.1407" -> "add.1408";
	"add.1408" -> "reshape.1411";
	"reshape.1411" -> "transpose.1413";
	"transpose.1413" -> "reshape.1415";
	"reshape.1435" -> "dot.1436";
	"reshape.1415" -> "dot.1436";
	"p45.1099" -> "broadcast.446";
	"dot.1436" -> "divide.40";
	"broadcast.446" -> "divide.40";
	"divide.40" -> "reshape.1229";
	"multiply.152" -> "broadcast.1442";
	"reshape.1229" -> "add.1443";
	"broadcast.1442" -> "add.1443";
	"add.1443" -> "reduce.1449";
	"constant.1444" -> "reduce.1449";
	"MaxComputation.1445" -> "reduce.1449";
	"reduce.1449" -> "broadcast.1450";
	"add.1443" -> "subtract.1451";
	"broadcast.1450" -> "subtract.1451";
	"subtract.1451" -> "exponential.1452";
	"exponential.1452" -> "reduce.1458";
	"constant.1453" -> "reduce.1458";
	"AddComputation.1454" -> "reduce.1458";
	"reduce.1458" -> "broadcast.1459";
	"exponential.1452" -> "divide.1460";
	"broadcast.1459" -> "divide.1460";
	"constant.24" -> "multiply.25";
	"add.23" -> "multiply.25";
	"multiply.25" -> "add.27";
	"constant.26" -> "add.27";
	"add.27" -> "convert.1362";
	"convert.1362" -> "reshape.1366";
	"reshape.1366" -> "concatenate.1368";
	"constant.187" -> "concatenate.1368";
	"concatenate.1368" -> "rng-bit-generator.1369";
	"rng-bit-generator.1369" -> "get-tuple-element.1370";
	"constant.1372" -> "broadcast.1373";
	"get-tuple-element.1370" -> "shift-right-logical.1374";
	"broadcast.1373" -> "shift-right-logical.1374";
	"shift-right-logical.1374" -> "convert.1375";
	"constant.191" -> "broadcast.22";
	"convert.1375" -> "multiply.1381";
	"broadcast.22" -> "multiply.1381";
	"multiply.1381" -> "convert.1384";
	"p3.6" -> "broadcast.1359";
	"convert.1384" -> "compare.1385";
	"broadcast.1359" -> "compare.1385";
	"constant.13" -> "divide.5";
	"p3.6" -> "divide.5";
	"divide.5" -> "broadcast.23";
	"constant.91" -> "broadcast.133";
	"compare.1385" -> "select.6";
	"broadcast.23" -> "select.6";
	"broadcast.133" -> "select.6";
	"divide.1460" -> "multiply.1461";
	"select.6" -> "multiply.1461";
	"multiply.1461" -> "reshape.1463";
	"add.1292" -> "reshape.1345";
	"p59.1343" -> "transpose.1344";
	"reshape.1345" -> "dot.1346";
	"transpose.1344" -> "dot.1346";
	"dot.1346" -> "reshape.1347";
	"p58.1341" -> "broadcast.1348";
	"reshape.1347" -> "add.1349";
	"broadcast.1348" -> "add.1349";
	"add.1349" -> "reshape.1352";
	"reshape.1352" -> "transpose.1353";
	"transpose.1353" -> "reshape.1355";
	"reshape.1463" -> "dot.1464";
	"reshape.1355" -> "dot.1464";
	"dot.1464" -> "reshape.1465";
	"reshape.1465" -> "transpose.1466";
	"transpose.1466" -> "reshape.1468";
	"p57.1334" -> "transpose.1335";
	"reshape.1468" -> "dot.1469";
	"transpose.1335" -> "dot.1469";
	"dot.1469" -> "reshape.1470";
	"p56.1332" -> "broadcast.1471";
	"reshape.1470" -> "add.1472";
	"broadcast.1471" -> "add.1472";
	"constant.28" -> "multiply.29";
	"add.27" -> "multiply.29";
	"multiply.29" -> "add.31";
	"constant.30" -> "add.31";
	"add.31" -> "convert.1300";
	"convert.1300" -> "reshape.1304";
	"reshape.1304" -> "concatenate.1306";
	"constant.192" -> "concatenate.1306";
	"concatenate.1306" -> "rng-bit-generator.1307";
	"rng-bit-generator.1307" -> "get-tuple-element.1308";
	"constant.1310" -> "broadcast.1311";
	"get-tuple-element.1308" -> "shift-right-logical.1312";
	"broadcast.1311" -> "shift-right-logical.1312";
	"shift-right-logical.1312" -> "convert.1313";
	"constant.197" -> "broadcast.24";
	"convert.1313" -> "multiply.1319";
	"broadcast.24" -> "multiply.1319";
	"multiply.1319" -> "convert.1322";
	"p3.6" -> "broadcast.1297";
	"convert.1322" -> "compare.1323";
	"broadcast.1297" -> "compare.1323";
	"constant.15" -> "divide.6";
	"p3.6" -> "divide.6";
	"divide.6" -> "broadcast.25";
	"constant.93" -> "broadcast.137";
	"compare.1323" -> "select.7";
	"broadcast.25" -> "select.7";
	"broadcast.137" -> "select.7";
	"add.1472" -> "multiply.1475";
	"select.7" -> "multiply.1475";
	"multiply.1475" -> "add.1476";
	"add.1292" -> "add.1476";
	"add.1476" -> "reshape.1477";
	"constant.780" -> "broadcast.784";
	"constant.775" -> "broadcast.779";
	"reshape.1477" -> "batch-norm-training.1478";
	"broadcast.784" -> "batch-norm-training.1478";
	"broadcast.779" -> "batch-norm-training.1478";
	"batch-norm-training.1478" -> "get-tuple-element.1479";
	"get-tuple-element.1479" -> "reshape.1486";
	"p28.764" -> "broadcast.1489";
	"reshape.1486" -> "multiply.1492";
	"broadcast.1489" -> "multiply.1492";
	"broadcast.1493" -> "add.1494";
	"multiply.1492" -> "add.1494";
	"add.1494" -> "reshape.1547";
	"p68.1545" -> "transpose.1546";
	"reshape.1547" -> "dot.1548";
	"transpose.1546" -> "dot.1548";
	"dot.1548" -> "reshape.1549";
	"p67.1543" -> "broadcast.1550";
	"reshape.1549" -> "add.1551";
	"broadcast.1550" -> "add.1551";
	"add.1551" -> "custom-call.19";
	"custom-call.19" -> "reshape.1561";
	"p66.1536" -> "transpose.1537";
	"reshape.1561" -> "dot.1562";
	"transpose.1537" -> "dot.1562";
	"dot.1562" -> "reshape.1563";
	"p65.1534" -> "broadcast.1564";
	"reshape.1563" -> "add.1565";
	"broadcast.1564" -> "add.1565";
	"constant.32" -> "multiply.33";
	"add.31" -> "multiply.33";
	"multiply.33" -> "add.35";
	"constant.34" -> "add.35";
	"add.35" -> "convert.1502";
	"convert.1502" -> "reshape.1506";
	"reshape.1506" -> "concatenate.1508";
	"constant.200" -> "concatenate.1508";
	"concatenate.1508" -> "rng-bit-generator.1509";
	"rng-bit-generator.1509" -> "get-tuple-element.1510";
	"constant.1512" -> "broadcast.1513";
	"get-tuple-element.1510" -> "shift-right-logical.1514";
	"broadcast.1513" -> "shift-right-logical.1514";
	"shift-right-logical.1514" -> "convert.1515";
	"constant.205" -> "broadcast.26";
	"convert.1515" -> "multiply.1521";
	"broadcast.26" -> "multiply.1521";
	"multiply.1521" -> "convert.1524";
	"p3.6" -> "broadcast.1499";
	"convert.1524" -> "compare.1525";
	"broadcast.1499" -> "compare.1525";
	"constant.17" -> "divide.7";
	"p3.6" -> "divide.7";
	"divide.7" -> "broadcast.27";
	"constant.95" -> "broadcast.144";
	"compare.1525" -> "select.8";
	"broadcast.27" -> "select.8";
	"broadcast.144" -> "select.8";
	"add.1565" -> "multiply.1568";
	"select.8" -> "multiply.1568";
	"multiply.1568" -> "add.1569";
	"add.1494" -> "add.1569";
	"add.1569" -> "reshape.1570";
	"constant.753" -> "broadcast.757";
	"constant.748" -> "broadcast.752";
	"reshape.1570" -> "batch-norm-training.1571";
	"broadcast.757" -> "batch-norm-training.1571";
	"broadcast.752" -> "batch-norm-training.1571";
	"batch-norm-training.1571" -> "get-tuple-element.1572";
	"get-tuple-element.1572" -> "reshape.1579";
	"p27.737" -> "broadcast.1582";
	"reshape.1579" -> "multiply.1585";
	"broadcast.1582" -> "multiply.1585";
	"broadcast.1586" -> "add.1587";
	"multiply.1585" -> "add.1587";
	"add.1587" -> "reshape.1720";
	"p77.1718" -> "transpose.1719";
	"reshape.1720" -> "dot.1721";
	"transpose.1719" -> "dot.1721";
	"dot.1721" -> "reshape.1722";
	"p76.1716" -> "broadcast.1723";
	"reshape.1722" -> "add.1724";
	"broadcast.1723" -> "add.1724";
	"add.1724" -> "reshape.1727";
	"reshape.1727" -> "transpose.1728";
	"transpose.1728" -> "reshape.1730";
	"add.1587" -> "reshape.1699";
	"p75.1697" -> "transpose.1698";
	"reshape.1699" -> "dot.1700";
	"transpose.1698" -> "dot.1700";
	"dot.1700" -> "reshape.1701";
	"p74.1695" -> "broadcast.1702";
	"reshape.1701" -> "add.1703";
	"broadcast.1702" -> "add.1703";
	"add.1703" -> "reshape.1706";
	"reshape.1706" -> "transpose.1708";
	"transpose.1708" -> "reshape.1710";
	"reshape.1730" -> "dot.1731";
	"reshape.1710" -> "dot.1731";
	"p45.1099" -> "broadcast.449";
	"dot.1731" -> "divide.41";
	"broadcast.449" -> "divide.41";
	"divide.41" -> "reshape.1232";
	"multiply.152" -> "broadcast.1737";
	"reshape.1232" -> "add.1738";
	"broadcast.1737" -> "add.1738";
	"add.1738" -> "reduce.1744";
	"constant.1739" -> "reduce.1744";
	"MaxComputation.1740" -> "reduce.1744";
	"reduce.1744" -> "broadcast.1745";
	"add.1738" -> "subtract.1746";
	"broadcast.1745" -> "subtract.1746";
	"subtract.1746" -> "exponential.1747";
	"exponential.1747" -> "reduce.1753";
	"constant.1748" -> "reduce.1753";
	"AddComputation.1749" -> "reduce.1753";
	"reduce.1753" -> "broadcast.1754";
	"exponential.1747" -> "divide.1755";
	"broadcast.1754" -> "divide.1755";
	"constant.36" -> "multiply.37";
	"add.35" -> "multiply.37";
	"multiply.37" -> "add.39";
	"constant.38" -> "add.39";
	"add.39" -> "convert.1657";
	"convert.1657" -> "reshape.1661";
	"reshape.1661" -> "concatenate.1663";
	"constant.207" -> "concatenate.1663";
	"concatenate.1663" -> "rng-bit-generator.1664";
	"rng-bit-generator.1664" -> "get-tuple-element.1665";
	"constant.1667" -> "broadcast.1668";
	"get-tuple-element.1665" -> "shift-right-logical.1669";
	"broadcast.1668" -> "shift-right-logical.1669";
	"shift-right-logical.1669" -> "convert.1670";
	"constant.212" -> "broadcast.29";
	"convert.1670" -> "multiply.1676";
	"broadcast.29" -> "multiply.1676";
	"multiply.1676" -> "convert.1679";
	"p3.6" -> "broadcast.1654";
	"convert.1679" -> "compare.1680";
	"broadcast.1654" -> "compare.1680";
	"constant.19" -> "divide.8";
	"p3.6" -> "divide.8";
	"divide.8" -> "broadcast.30";
	"constant.97" -> "broadcast.152";
	"compare.1680" -> "select.9";
	"broadcast.30" -> "select.9";
	"broadcast.152" -> "select.9";
	"divide.1755" -> "multiply.1756";
	"select.9" -> "multiply.1756";
	"multiply.1756" -> "reshape.1758";
	"add.1587" -> "reshape.1640";
	"p73.1638" -> "transpose.1639";
	"reshape.1640" -> "dot.1641";
	"transpose.1639" -> "dot.1641";
	"dot.1641" -> "reshape.1642";
	"p72.1636" -> "broadcast.1643";
	"reshape.1642" -> "add.1644";
	"broadcast.1643" -> "add.1644";
	"add.1644" -> "reshape.1647";
	"reshape.1647" -> "transpose.1648";
	"transpose.1648" -> "reshape.1650";
	"reshape.1758" -> "dot.1759";
	"reshape.1650" -> "dot.1759";
	"dot.1759" -> "reshape.1760";
	"reshape.1760" -> "transpose.1761";
	"transpose.1761" -> "reshape.1763";
	"p71.1629" -> "transpose.1630";
	"reshape.1763" -> "dot.1764";
	"transpose.1630" -> "dot.1764";
	"dot.1764" -> "reshape.1765";
	"p70.1627" -> "broadcast.1766";
	"reshape.1765" -> "add.1767";
	"broadcast.1766" -> "add.1767";
	"constant.40" -> "multiply.41";
	"add.39" -> "multiply.41";
	"multiply.41" -> "add.43";
	"constant.42" -> "add.43";
	"add.43" -> "convert.1595";
	"convert.1595" -> "reshape.1599";
	"reshape.1599" -> "concatenate.1601";
	"constant.214" -> "concatenate.1601";
	"concatenate.1601" -> "rng-bit-generator.1602";
	"rng-bit-generator.1602" -> "get-tuple-element.1603";
	"constant.1605" -> "broadcast.1606";
	"get-tuple-element.1603" -> "shift-right-logical.1607";
	"broadcast.1606" -> "shift-right-logical.1607";
	"shift-right-logical.1607" -> "convert.1608";
	"constant.219" -> "broadcast.31";
	"convert.1608" -> "multiply.1614";
	"broadcast.31" -> "multiply.1614";
	"multiply.1614" -> "convert.1617";
	"p3.6" -> "broadcast.1592";
	"convert.1617" -> "compare.1618";
	"broadcast.1592" -> "compare.1618";
	"constant.21" -> "divide.9";
	"p3.6" -> "divide.9";
	"divide.9" -> "broadcast.32";
	"constant.99" -> "broadcast.156";
	"compare.1618" -> "select.10";
	"broadcast.32" -> "select.10";
	"broadcast.156" -> "select.10";
	"add.1767" -> "multiply.1770";
	"select.10" -> "multiply.1770";
	"multiply.1770" -> "add.1771";
	"add.1587" -> "add.1771";
	"add.1771" -> "reshape.1772";
	"constant.726" -> "broadcast.730";
	"constant.721" -> "broadcast.725";
	"reshape.1772" -> "batch-norm-training.1773";
	"broadcast.730" -> "batch-norm-training.1773";
	"broadcast.725" -> "batch-norm-training.1773";
	"batch-norm-training.1773" -> "get-tuple-element.1774";
	"get-tuple-element.1774" -> "reshape.1781";
	"p26.710" -> "broadcast.1784";
	"reshape.1781" -> "multiply.1787";
	"broadcast.1784" -> "multiply.1787";
	"broadcast.1788" -> "add.1789";
	"multiply.1787" -> "add.1789";
	"add.1789" -> "reshape.1842";
	"p82.1840" -> "transpose.1841";
	"reshape.1842" -> "dot.1843";
	"transpose.1841" -> "dot.1843";
	"dot.1843" -> "reshape.1844";
	"p81.1838" -> "broadcast.1845";
	"reshape.1844" -> "add.1846";
	"broadcast.1845" -> "add.1846";
	"add.1846" -> "custom-call.20";
	"custom-call.20" -> "reshape.1856";
	"p80.1831" -> "transpose.1832";
	"reshape.1856" -> "dot.1857";
	"transpose.1832" -> "dot.1857";
	"dot.1857" -> "reshape.1858";
	"p79.1829" -> "broadcast.1859";
	"reshape.1858" -> "add.1860";
	"broadcast.1859" -> "add.1860";
	"constant.44" -> "multiply.45";
	"add.43" -> "multiply.45";
	"multiply.45" -> "add.47";
	"constant.46" -> "add.47";
	"add.47" -> "convert.1797";
	"convert.1797" -> "reshape.1801";
	"reshape.1801" -> "concatenate.1803";
	"constant.221" -> "concatenate.1803";
	"concatenate.1803" -> "rng-bit-generator.1804";
	"rng-bit-generator.1804" -> "get-tuple-element.1805";
	"constant.1807" -> "broadcast.1808";
	"get-tuple-element.1805" -> "shift-right-logical.1809";
	"broadcast.1808" -> "shift-right-logical.1809";
	"shift-right-logical.1809" -> "convert.1810";
	"constant.227" -> "broadcast.33";
	"convert.1810" -> "multiply.1816";
	"broadcast.33" -> "multiply.1816";
	"multiply.1816" -> "convert.1819";
	"p3.6" -> "broadcast.1794";
	"convert.1819" -> "compare.1820";
	"broadcast.1794" -> "compare.1820";
	"constant.23" -> "divide.10";
	"p3.6" -> "divide.10";
	"divide.10" -> "broadcast.34";
	"constant.101" -> "broadcast.165";
	"compare.1820" -> "select.11";
	"broadcast.34" -> "select.11";
	"broadcast.165" -> "select.11";
	"add.1860" -> "multiply.1863";
	"select.11" -> "multiply.1863";
	"multiply.1863" -> "add.1864";
	"add.1789" -> "add.1864";
	"add.1864" -> "reshape.1865";
	"constant.699" -> "broadcast.703";
	"constant.694" -> "broadcast.698";
	"reshape.1865" -> "batch-norm-training.1866";
	"broadcast.703" -> "batch-norm-training.1866";
	"broadcast.698" -> "batch-norm-training.1866";
	"batch-norm-training.1866" -> "get-tuple-element.1867";
	"get-tuple-element.1867" -> "reshape.1874";
	"p25.683" -> "broadcast.1877";
	"reshape.1874" -> "multiply.1880";
	"broadcast.1877" -> "multiply.1880";
	"broadcast.1881" -> "add.1882";
	"multiply.1880" -> "add.1882";
	"add.1882" -> "reshape.2015";
	"p91.2013" -> "transpose.2014";
	"reshape.2015" -> "dot.2016";
	"transpose.2014" -> "dot.2016";
	"dot.2016" -> "reshape.2017";
	"p90.2011" -> "broadcast.2018";
	"reshape.2017" -> "add.2019";
	"broadcast.2018" -> "add.2019";
	"add.2019" -> "reshape.2022";
	"reshape.2022" -> "transpose.2023";
	"transpose.2023" -> "reshape.2025";
	"add.1882" -> "reshape.1994";
	"p89.1992" -> "transpose.1993";
	"reshape.1994" -> "dot.1995";
	"transpose.1993" -> "dot.1995";
	"dot.1995" -> "reshape.1996";
	"p88.1990" -> "broadcast.1997";
	"reshape.1996" -> "add.1998";
	"broadcast.1997" -> "add.1998";
	"add.1998" -> "reshape.2001";
	"reshape.2001" -> "transpose.2003";
	"transpose.2003" -> "reshape.2005";
	"reshape.2025" -> "dot.2026";
	"reshape.2005" -> "dot.2026";
	"p45.1099" -> "broadcast.452";
	"dot.2026" -> "divide.42";
	"broadcast.452" -> "divide.42";
	"divide.42" -> "reshape.1236";
	"multiply.152" -> "broadcast.2032";
	"reshape.1236" -> "add.2033";
	"broadcast.2032" -> "add.2033";
	"add.2033" -> "reduce.2039";
	"constant.2034" -> "reduce.2039";
	"MaxComputation.2035" -> "reduce.2039";
	"reduce.2039" -> "broadcast.2040";
	"add.2033" -> "subtract.2041";
	"broadcast.2040" -> "subtract.2041";
	"subtract.2041" -> "exponential.2042";
	"exponential.2042" -> "reduce.2048";
	"constant.2043" -> "reduce.2048";
	"AddComputation.2044" -> "reduce.2048";
	"reduce.2048" -> "broadcast.2049";
	"exponential.2042" -> "divide.2050";
	"broadcast.2049" -> "divide.2050";
	"constant.48" -> "multiply.49";
	"add.47" -> "multiply.49";
	"multiply.49" -> "add.51";
	"constant.50" -> "add.51";
	"add.51" -> "convert.1952";
	"convert.1952" -> "reshape.1956";
	"reshape.1956" -> "concatenate.1958";
	"constant.229" -> "concatenate.1958";
	"concatenate.1958" -> "rng-bit-generator.1959";
	"rng-bit-generator.1959" -> "get-tuple-element.1960";
	"constant.1962" -> "broadcast.1963";
	"get-tuple-element.1960" -> "shift-right-logical.1964";
	"broadcast.1963" -> "shift-right-logical.1964";
	"shift-right-logical.1964" -> "convert.1965";
	"constant.234" -> "broadcast.36";
	"convert.1965" -> "multiply.1971";
	"broadcast.36" -> "multiply.1971";
	"multiply.1971" -> "convert.1974";
	"p3.6" -> "broadcast.1949";
	"convert.1974" -> "compare.1975";
	"broadcast.1949" -> "compare.1975";
	"constant.25" -> "divide.11";
	"p3.6" -> "divide.11";
	"divide.11" -> "broadcast.37";
	"constant.103" -> "broadcast.173";
	"compare.1975" -> "select.12";
	"broadcast.37" -> "select.12";
	"broadcast.173" -> "select.12";
	"divide.2050" -> "multiply.2051";
	"select.12" -> "multiply.2051";
	"multiply.2051" -> "reshape.2053";
	"add.1882" -> "reshape.1935";
	"p87.1933" -> "transpose.1934";
	"reshape.1935" -> "dot.1936";
	"transpose.1934" -> "dot.1936";
	"dot.1936" -> "reshape.1937";
	"p86.1931" -> "broadcast.1938";
	"reshape.1937" -> "add.1939";
	"broadcast.1938" -> "add.1939";
	"add.1939" -> "reshape.1942";
	"reshape.1942" -> "transpose.1943";
	"transpose.1943" -> "reshape.1945";
	"reshape.2053" -> "dot.2054";
	"reshape.1945" -> "dot.2054";
	"dot.2054" -> "reshape.2055";
	"reshape.2055" -> "transpose.2056";
	"transpose.2056" -> "reshape.2058";
	"p85.1924" -> "transpose.1925";
	"reshape.2058" -> "dot.2059";
	"transpose.1925" -> "dot.2059";
	"dot.2059" -> "reshape.2060";
	"p84.1922" -> "broadcast.2061";
	"reshape.2060" -> "add.2062";
	"broadcast.2061" -> "add.2062";
	"constant.52" -> "multiply.53";
	"add.51" -> "multiply.53";
	"multiply.53" -> "add.55";
	"constant.54" -> "add.55";
	"add.55" -> "convert.1890";
	"convert.1890" -> "reshape.1894";
	"reshape.1894" -> "concatenate.1896";
	"constant.236" -> "concatenate.1896";
	"concatenate.1896" -> "rng-bit-generator.1897";
	"rng-bit-generator.1897" -> "get-tuple-element.1898";
	"constant.1900" -> "broadcast.1901";
	"get-tuple-element.1898" -> "shift-right-logical.1902";
	"broadcast.1901" -> "shift-right-logical.1902";
	"shift-right-logical.1902" -> "convert.1903";
	"constant.241" -> "broadcast.38";
	"convert.1903" -> "multiply.1909";
	"broadcast.38" -> "multiply.1909";
	"multiply.1909" -> "convert.1912";
	"p3.6" -> "broadcast.1887";
	"convert.1912" -> "compare.1913";
	"broadcast.1887" -> "compare.1913";
	"constant.27" -> "divide.12";
	"p3.6" -> "divide.12";
	"divide.12" -> "broadcast.39";
	"constant.105" -> "broadcast.178";
	"compare.1913" -> "select.13";
	"broadcast.39" -> "select.13";
	"broadcast.178" -> "select.13";
	"add.2062" -> "multiply.2065";
	"select.13" -> "multiply.2065";
	"multiply.2065" -> "add.2066";
	"add.1882" -> "add.2066";
	"add.2066" -> "reshape.2067";
	"constant.672" -> "broadcast.676";
	"constant.667" -> "broadcast.671";
	"reshape.2067" -> "batch-norm-training.2068";
	"broadcast.676" -> "batch-norm-training.2068";
	"broadcast.671" -> "batch-norm-training.2068";
	"batch-norm-training.2068" -> "get-tuple-element.2069";
	"get-tuple-element.2069" -> "reshape.2076";
	"p24.656" -> "broadcast.2079";
	"reshape.2076" -> "multiply.2082";
	"broadcast.2079" -> "multiply.2082";
	"broadcast.2083" -> "add.2084";
	"multiply.2082" -> "add.2084";
	"add.2084" -> "reshape.2137";
	"p96.2135" -> "transpose.2136";
	"reshape.2137" -> "dot.2138";
	"transpose.2136" -> "dot.2138";
	"dot.2138" -> "reshape.2139";
	"p95.2133" -> "broadcast.2140";
	"reshape.2139" -> "add.2141";
	"broadcast.2140" -> "add.2141";
	"add.2141" -> "custom-call.21";
	"custom-call.21" -> "reshape.2151";
	"p94.2126" -> "transpose.2127";
	"reshape.2151" -> "dot.2152";
	"transpose.2127" -> "dot.2152";
	"dot.2152" -> "reshape.2153";
	"p93.2124" -> "broadcast.2154";
	"reshape.2153" -> "add.2155";
	"broadcast.2154" -> "add.2155";
	"constant.56" -> "multiply.57";
	"add.55" -> "multiply.57";
	"multiply.57" -> "add.59";
	"constant.58" -> "add.59";
	"add.59" -> "convert.2092";
	"convert.2092" -> "reshape.2096";
	"reshape.2096" -> "concatenate.2098";
	"constant.243" -> "concatenate.2098";
	"concatenate.2098" -> "rng-bit-generator.2099";
	"rng-bit-generator.2099" -> "get-tuple-element.2100";
	"constant.2102" -> "broadcast.2103";
	"get-tuple-element.2100" -> "shift-right-logical.2104";
	"broadcast.2103" -> "shift-right-logical.2104";
	"shift-right-logical.2104" -> "convert.2105";
	"constant.248" -> "broadcast.40";
	"convert.2105" -> "multiply.2111";
	"broadcast.40" -> "multiply.2111";
	"multiply.2111" -> "convert.2114";
	"p3.6" -> "broadcast.2089";
	"convert.2114" -> "compare.2115";
	"broadcast.2089" -> "compare.2115";
	"constant.29" -> "divide.13";
	"p3.6" -> "divide.13";
	"divide.13" -> "broadcast.41";
	"constant.107" -> "broadcast.188";
	"compare.2115" -> "select.14";
	"broadcast.41" -> "select.14";
	"broadcast.188" -> "select.14";
	"add.2155" -> "multiply.2158";
	"select.14" -> "multiply.2158";
	"multiply.2158" -> "add.2159";
	"add.2084" -> "add.2159";
	"add.2159" -> "reshape.2160";
	"constant.645" -> "broadcast.649";
	"constant.640" -> "broadcast.644";
	"reshape.2160" -> "batch-norm-training.2161";
	"broadcast.649" -> "batch-norm-training.2161";
	"broadcast.644" -> "batch-norm-training.2161";
	"batch-norm-training.2161" -> "get-tuple-element.2162";
	"get-tuple-element.2162" -> "reshape.2169";
	"p23.629" -> "broadcast.2172";
	"reshape.2169" -> "multiply.2175";
	"broadcast.2172" -> "multiply.2175";
	"broadcast.2176" -> "add.2177";
	"multiply.2175" -> "add.2177";
	"add.2177" -> "reshape.2310";
	"p105.2308" -> "transpose.2309";
	"reshape.2310" -> "dot.2311";
	"transpose.2309" -> "dot.2311";
	"dot.2311" -> "reshape.2312";
	"p104.2306" -> "broadcast.2313";
	"reshape.2312" -> "add.2314";
	"broadcast.2313" -> "add.2314";
	"add.2314" -> "reshape.2317";
	"reshape.2317" -> "transpose.2318";
	"transpose.2318" -> "reshape.2320";
	"add.2177" -> "reshape.2289";
	"p103.2287" -> "transpose.2288";
	"reshape.2289" -> "dot.2290";
	"transpose.2288" -> "dot.2290";
	"dot.2290" -> "reshape.2291";
	"p102.2285" -> "broadcast.2292";
	"reshape.2291" -> "add.2293";
	"broadcast.2292" -> "add.2293";
	"add.2293" -> "reshape.2296";
	"reshape.2296" -> "transpose.2298";
	"transpose.2298" -> "reshape.2300";
	"reshape.2320" -> "dot.2321";
	"reshape.2300" -> "dot.2321";
	"p45.1099" -> "broadcast.456";
	"dot.2321" -> "divide.43";
	"broadcast.456" -> "divide.43";
	"divide.43" -> "reshape.1240";
	"multiply.152" -> "broadcast.2327";
	"reshape.1240" -> "add.2328";
	"broadcast.2327" -> "add.2328";
	"add.2328" -> "reduce.2334";
	"constant.2329" -> "reduce.2334";
	"MaxComputation.2330" -> "reduce.2334";
	"reduce.2334" -> "broadcast.2335";
	"add.2328" -> "subtract.2336";
	"broadcast.2335" -> "subtract.2336";
	"subtract.2336" -> "exponential.2337";
	"exponential.2337" -> "reduce.2343";
	"constant.2338" -> "reduce.2343";
	"AddComputation.2339" -> "reduce.2343";
	"reduce.2343" -> "broadcast.2344";
	"exponential.2337" -> "divide.2345";
	"broadcast.2344" -> "divide.2345";
	"constant.60" -> "multiply.61";
	"add.59" -> "multiply.61";
	"multiply.61" -> "add.63";
	"constant.62" -> "add.63";
	"add.63" -> "convert.2247";
	"convert.2247" -> "reshape.2251";
	"reshape.2251" -> "concatenate.2253";
	"constant.251" -> "concatenate.2253";
	"concatenate.2253" -> "rng-bit-generator.2254";
	"rng-bit-generator.2254" -> "get-tuple-element.2255";
	"constant.2257" -> "broadcast.2258";
	"get-tuple-element.2255" -> "shift-right-logical.2259";
	"broadcast.2258" -> "shift-right-logical.2259";
	"shift-right-logical.2259" -> "convert.2260";
	"constant.256" -> "broadcast.43";
	"convert.2260" -> "multiply.2266";
	"broadcast.43" -> "multiply.2266";
	"multiply.2266" -> "convert.2269";
	"p3.6" -> "broadcast.2244";
	"convert.2269" -> "compare.2270";
	"broadcast.2244" -> "compare.2270";
	"constant.31" -> "divide.14";
	"p3.6" -> "divide.14";
	"divide.14" -> "broadcast.44";
	"constant.109" -> "broadcast.197";
	"compare.2270" -> "select.15";
	"broadcast.44" -> "select.15";
	"broadcast.197" -> "select.15";
	"divide.2345" -> "multiply.2346";
	"select.15" -> "multiply.2346";
	"multiply.2346" -> "reshape.2348";
	"add.2177" -> "reshape.2230";
	"p101.2228" -> "transpose.2229";
	"reshape.2230" -> "dot.2231";
	"transpose.2229" -> "dot.2231";
	"dot.2231" -> "reshape.2232";
	"p100.2226" -> "broadcast.2233";
	"reshape.2232" -> "add.2234";
	"broadcast.2233" -> "add.2234";
	"add.2234" -> "reshape.2237";
	"reshape.2237" -> "transpose.2238";
	"transpose.2238" -> "reshape.2240";
	"reshape.2348" -> "dot.2349";
	"reshape.2240" -> "dot.2349";
	"dot.2349" -> "reshape.2350";
	"reshape.2350" -> "transpose.2351";
	"transpose.2351" -> "reshape.2353";
	"p99.2219" -> "transpose.2220";
	"reshape.2353" -> "dot.2354";
	"transpose.2220" -> "dot.2354";
	"dot.2354" -> "reshape.2355";
	"p98.2217" -> "broadcast.2356";
	"reshape.2355" -> "add.2357";
	"broadcast.2356" -> "add.2357";
	"constant.64" -> "multiply.65";
	"add.63" -> "multiply.65";
	"multiply.65" -> "add.67";
	"constant.66" -> "add.67";
	"add.67" -> "convert.2185";
	"convert.2185" -> "reshape.2189";
	"reshape.2189" -> "concatenate.2191";
	"constant.258" -> "concatenate.2191";
	"concatenate.2191" -> "rng-bit-generator.2192";
	"rng-bit-generator.2192" -> "get-tuple-element.2193";
	"constant.2195" -> "broadcast.2196";
	"get-tuple-element.2193" -> "shift-right-logical.2197";
	"broadcast.2196" -> "shift-right-logical.2197";
	"shift-right-logical.2197" -> "convert.2198";
	"constant.263" -> "broadcast.45";
	"convert.2198" -> "multiply.2204";
	"broadcast.45" -> "multiply.2204";
	"multiply.2204" -> "convert.2207";
	"p3.6" -> "broadcast.2182";
	"convert.2207" -> "compare.2208";
	"broadcast.2182" -> "compare.2208";
	"constant.33" -> "divide.15";
	"p3.6" -> "divide.15";
	"divide.15" -> "broadcast.46";
	"constant.111" -> "broadcast.203";
	"compare.2208" -> "select.16";
	"broadcast.46" -> "select.16";
	"broadcast.203" -> "select.16";
	"add.2357" -> "multiply.2360";
	"select.16" -> "multiply.2360";
	"multiply.2360" -> "add.2361";
	"add.2177" -> "add.2361";
	"add.2361" -> "reshape.2362";
	"constant.618" -> "broadcast.622";
	"constant.613" -> "broadcast.617";
	"reshape.2362" -> "batch-norm-training.2363";
	"broadcast.622" -> "batch-norm-training.2363";
	"broadcast.617" -> "batch-norm-training.2363";
	"batch-norm-training.2363" -> "get-tuple-element.2364";
	"get-tuple-element.2364" -> "reshape.2371";
	"p22.602" -> "broadcast.2374";
	"reshape.2371" -> "multiply.2377";
	"broadcast.2374" -> "multiply.2377";
	"broadcast.2378" -> "add.2379";
	"multiply.2377" -> "add.2379";
	"add.2379" -> "reshape.2432";
	"p110.2430" -> "transpose.2431";
	"reshape.2432" -> "dot.2433";
	"transpose.2431" -> "dot.2433";
	"dot.2433" -> "reshape.2434";
	"p109.2428" -> "broadcast.2435";
	"reshape.2434" -> "add.2436";
	"broadcast.2435" -> "add.2436";
	"add.2436" -> "custom-call.22";
	"custom-call.22" -> "reshape.2446";
	"p108.2421" -> "transpose.2422";
	"reshape.2446" -> "dot.2447";
	"transpose.2422" -> "dot.2447";
	"dot.2447" -> "reshape.2448";
	"p107.2419" -> "broadcast.2449";
	"reshape.2448" -> "add.2450";
	"broadcast.2449" -> "add.2450";
	"constant.68" -> "multiply.69";
	"add.67" -> "multiply.69";
	"multiply.69" -> "add.71";
	"constant.70" -> "add.71";
	"add.71" -> "convert.2387";
	"convert.2387" -> "reshape.2391";
	"reshape.2391" -> "concatenate.2393";
	"constant.265" -> "concatenate.2393";
	"concatenate.2393" -> "rng-bit-generator.2394";
	"rng-bit-generator.2394" -> "get-tuple-element.2395";
	"constant.2397" -> "broadcast.2398";
	"get-tuple-element.2395" -> "shift-right-logical.2399";
	"broadcast.2398" -> "shift-right-logical.2399";
	"shift-right-logical.2399" -> "convert.2400";
	"constant.270" -> "broadcast.47";
	"convert.2400" -> "multiply.2406";
	"broadcast.47" -> "multiply.2406";
	"multiply.2406" -> "convert.2409";
	"p3.6" -> "broadcast.2384";
	"convert.2409" -> "compare.2410";
	"broadcast.2384" -> "compare.2410";
	"constant.35" -> "divide.16";
	"p3.6" -> "divide.16";
	"divide.16" -> "broadcast.48";
	"constant.113" -> "broadcast.214";
	"compare.2410" -> "select.17";
	"broadcast.48" -> "select.17";
	"broadcast.214" -> "select.17";
	"add.2450" -> "multiply.2453";
	"select.17" -> "multiply.2453";
	"multiply.2453" -> "add.2454";
	"add.2379" -> "add.2454";
	"add.2454" -> "reshape.2455";
	"constant.591" -> "broadcast.595";
	"constant.586" -> "broadcast.590";
	"reshape.2455" -> "batch-norm-training.2456";
	"broadcast.595" -> "batch-norm-training.2456";
	"broadcast.590" -> "batch-norm-training.2456";
	"batch-norm-training.2456" -> "get-tuple-element.2457";
	"get-tuple-element.2457" -> "reshape.2464";
	"p21.575" -> "broadcast.2467";
	"reshape.2464" -> "multiply.2470";
	"broadcast.2467" -> "multiply.2470";
	"broadcast.2471" -> "add.2472";
	"multiply.2470" -> "add.2472";
	"add.2472" -> "reshape.2605";
	"p119.2603" -> "transpose.2604";
	"reshape.2605" -> "dot.2606";
	"transpose.2604" -> "dot.2606";
	"dot.2606" -> "reshape.2607";
	"p118.2601" -> "broadcast.2608";
	"reshape.2607" -> "add.2609";
	"broadcast.2608" -> "add.2609";
	"add.2609" -> "reshape.2612";
	"reshape.2612" -> "transpose.2613";
	"transpose.2613" -> "reshape.2615";
	"add.2472" -> "reshape.2584";
	"p117.2582" -> "transpose.2583";
	"reshape.2584" -> "dot.2585";
	"transpose.2583" -> "dot.2585";
	"dot.2585" -> "reshape.2586";
	"p116.2580" -> "broadcast.2587";
	"reshape.2586" -> "add.2588";
	"broadcast.2587" -> "add.2588";
	"add.2588" -> "reshape.2591";
	"reshape.2591" -> "transpose.2593";
	"transpose.2593" -> "reshape.2595";
	"reshape.2615" -> "dot.2616";
	"reshape.2595" -> "dot.2616";
	"p45.1099" -> "broadcast.459";
	"dot.2616" -> "divide.44";
	"broadcast.459" -> "divide.44";
	"divide.44" -> "reshape.1243";
	"multiply.152" -> "broadcast.2622";
	"reshape.1243" -> "add.2623";
	"broadcast.2622" -> "add.2623";
	"add.2623" -> "reduce.2629";
	"constant.2624" -> "reduce.2629";
	"MaxComputation.2625" -> "reduce.2629";
	"reduce.2629" -> "broadcast.2630";
	"add.2623" -> "subtract.2631";
	"broadcast.2630" -> "subtract.2631";
	"subtract.2631" -> "exponential.2632";
	"exponential.2632" -> "reduce.2638";
	"constant.2633" -> "reduce.2638";
	"AddComputation.2634" -> "reduce.2638";
	"reduce.2638" -> "broadcast.2639";
	"exponential.2632" -> "divide.2640";
	"broadcast.2639" -> "divide.2640";
	"constant.72" -> "multiply.73";
	"add.71" -> "multiply.73";
	"multiply.73" -> "add.75";
	"constant.74" -> "add.75";
	"add.75" -> "convert.2542";
	"convert.2542" -> "reshape.2546";
	"reshape.2546" -> "concatenate.2548";
	"constant.273" -> "concatenate.2548";
	"concatenate.2548" -> "rng-bit-generator.2549";
	"rng-bit-generator.2549" -> "get-tuple-element.2550";
	"constant.2552" -> "broadcast.2553";
	"get-tuple-element.2550" -> "shift-right-logical.2554";
	"broadcast.2553" -> "shift-right-logical.2554";
	"shift-right-logical.2554" -> "convert.2555";
	"constant.278" -> "broadcast.50";
	"convert.2555" -> "multiply.2561";
	"broadcast.50" -> "multiply.2561";
	"multiply.2561" -> "convert.2564";
	"p3.6" -> "broadcast.2539";
	"convert.2564" -> "compare.2565";
	"broadcast.2539" -> "compare.2565";
	"constant.37" -> "divide.17";
	"p3.6" -> "divide.17";
	"divide.17" -> "broadcast.51";
	"constant.115" -> "broadcast.226";
	"compare.2565" -> "select.18";
	"broadcast.51" -> "select.18";
	"broadcast.226" -> "select.18";
	"divide.2640" -> "multiply.2641";
	"select.18" -> "multiply.2641";
	"multiply.2641" -> "reshape.2643";
	"add.2472" -> "reshape.2525";
	"p115.2523" -> "transpose.2524";
	"reshape.2525" -> "dot.2526";
	"transpose.2524" -> "dot.2526";
	"dot.2526" -> "reshape.2527";
	"p114.2521" -> "broadcast.2528";
	"reshape.2527" -> "add.2529";
	"broadcast.2528" -> "add.2529";
	"add.2529" -> "reshape.2532";
	"reshape.2532" -> "transpose.2533";
	"transpose.2533" -> "reshape.2535";
	"reshape.2643" -> "dot.2644";
	"reshape.2535" -> "dot.2644";
	"dot.2644" -> "reshape.2645";
	"reshape.2645" -> "transpose.2646";
	"transpose.2646" -> "reshape.2648";
	"p113.2514" -> "transpose.2515";
	"reshape.2648" -> "dot.2649";
	"transpose.2515" -> "dot.2649";
	"dot.2649" -> "reshape.2650";
	"p112.2512" -> "broadcast.2651";
	"reshape.2650" -> "add.2652";
	"broadcast.2651" -> "add.2652";
	"constant.76" -> "multiply.77";
	"add.75" -> "multiply.77";
	"multiply.77" -> "add.79";
	"constant.78" -> "add.79";
	"add.79" -> "convert.2480";
	"convert.2480" -> "reshape.2484";
	"reshape.2484" -> "concatenate.2486";
	"constant.280" -> "concatenate.2486";
	"concatenate.2486" -> "rng-bit-generator.2487";
	"rng-bit-generator.2487" -> "get-tuple-element.2488";
	"constant.2490" -> "broadcast.2491";
	"get-tuple-element.2488" -> "shift-right-logical.2492";
	"broadcast.2491" -> "shift-right-logical.2492";
	"shift-right-logical.2492" -> "convert.2493";
	"constant.285" -> "broadcast.52";
	"convert.2493" -> "multiply.2499";
	"broadcast.52" -> "multiply.2499";
	"multiply.2499" -> "convert.2502";
	"p3.6" -> "broadcast.2477";
	"convert.2502" -> "compare.2503";
	"broadcast.2477" -> "compare.2503";
	"constant.39" -> "divide.18";
	"p3.6" -> "divide.18";
	"divide.18" -> "broadcast.53";
	"constant.117" -> "broadcast.233";
	"compare.2503" -> "select.19";
	"broadcast.53" -> "select.19";
	"broadcast.233" -> "select.19";
	"add.2652" -> "multiply.2655";
	"select.19" -> "multiply.2655";
	"multiply.2655" -> "add.2656";
	"add.2472" -> "add.2656";
	"add.2656" -> "reshape.2657";
	"constant.564" -> "broadcast.568";
	"constant.559" -> "broadcast.563";
	"reshape.2657" -> "batch-norm-training.2658";
	"broadcast.568" -> "batch-norm-training.2658";
	"broadcast.563" -> "batch-norm-training.2658";
	"batch-norm-training.2658" -> "get-tuple-element.2659";
	"get-tuple-element.2659" -> "reshape.2666";
	"p20.548" -> "broadcast.2669";
	"reshape.2666" -> "multiply.2672";
	"broadcast.2669" -> "multiply.2672";
	"broadcast.2673" -> "add.2674";
	"multiply.2672" -> "add.2674";
	"add.2674" -> "reshape.2727";
	"p124.2725" -> "transpose.2726";
	"reshape.2727" -> "dot.2728";
	"transpose.2726" -> "dot.2728";
	"dot.2728" -> "reshape.2729";
	"p123.2723" -> "broadcast.2730";
	"reshape.2729" -> "add.2731";
	"broadcast.2730" -> "add.2731";
	"add.2731" -> "custom-call.23";
	"custom-call.23" -> "reshape.2741";
	"p122.2716" -> "transpose.2717";
	"reshape.2741" -> "dot.2742";
	"transpose.2717" -> "dot.2742";
	"dot.2742" -> "reshape.2743";
	"p121.2714" -> "broadcast.2744";
	"reshape.2743" -> "add.2745";
	"broadcast.2744" -> "add.2745";
	"constant.80" -> "multiply.81";
	"add.79" -> "multiply.81";
	"multiply.81" -> "add.83";
	"constant.82" -> "add.83";
	"add.83" -> "convert.2682";
	"convert.2682" -> "reshape.2686";
	"reshape.2686" -> "concatenate.2688";
	"constant.287" -> "concatenate.2688";
	"concatenate.2688" -> "rng-bit-generator.2689";
	"rng-bit-generator.2689" -> "get-tuple-element.2690";
	"constant.2692" -> "broadcast.2693";
	"get-tuple-element.2690" -> "shift-right-logical.2694";
	"broadcast.2693" -> "shift-right-logical.2694";
	"shift-right-logical.2694" -> "convert.2695";
	"constant.292" -> "broadcast.54";
	"convert.2695" -> "multiply.2701";
	"broadcast.54" -> "multiply.2701";
	"multiply.2701" -> "convert.2704";
	"p3.6" -> "broadcast.2679";
	"convert.2704" -> "compare.2705";
	"broadcast.2679" -> "compare.2705";
	"constant.41" -> "divide.19";
	"p3.6" -> "divide.19";
	"divide.19" -> "broadcast.55";
	"constant.119" -> "broadcast.245";
	"compare.2705" -> "select.20";
	"broadcast.55" -> "select.20";
	"broadcast.245" -> "select.20";
	"add.2745" -> "multiply.2748";
	"select.20" -> "multiply.2748";
	"multiply.2748" -> "add.2749";
	"add.2674" -> "add.2749";
	"add.2749" -> "reshape.2750";
	"constant.537" -> "broadcast.541";
	"constant.532" -> "broadcast.536";
	"reshape.2750" -> "batch-norm-training.2751";
	"broadcast.541" -> "batch-norm-training.2751";
	"broadcast.536" -> "batch-norm-training.2751";
	"batch-norm-training.2751" -> "get-tuple-element.2752";
	"get-tuple-element.2752" -> "reshape.2759";
	"p19.521" -> "broadcast.2762";
	"reshape.2759" -> "multiply.2765";
	"broadcast.2762" -> "multiply.2765";
	"broadcast.2766" -> "add.2767";
	"multiply.2765" -> "add.2767";
	"add.2767" -> "reshape.2900";
	"p133.2898" -> "transpose.2899";
	"reshape.2900" -> "dot.2901";
	"transpose.2899" -> "dot.2901";
	"dot.2901" -> "reshape.2902";
	"p132.2896" -> "broadcast.2903";
	"reshape.2902" -> "add.2904";
	"broadcast.2903" -> "add.2904";
	"add.2904" -> "reshape.2907";
	"reshape.2907" -> "transpose.2908";
	"transpose.2908" -> "reshape.2910";
	"add.2767" -> "reshape.2879";
	"p131.2877" -> "transpose.2878";
	"reshape.2879" -> "dot.2880";
	"transpose.2878" -> "dot.2880";
	"dot.2880" -> "reshape.2881";
	"p130.2875" -> "broadcast.2882";
	"reshape.2881" -> "add.2883";
	"broadcast.2882" -> "add.2883";
	"add.2883" -> "reshape.2886";
	"reshape.2886" -> "transpose.2888";
	"transpose.2888" -> "reshape.2890";
	"reshape.2910" -> "dot.2911";
	"reshape.2890" -> "dot.2911";
	"p45.1099" -> "broadcast.462";
	"dot.2911" -> "divide.45";
	"broadcast.462" -> "divide.45";
	"divide.45" -> "reshape.1248";
	"multiply.152" -> "broadcast.2917";
	"reshape.1248" -> "add.2918";
	"broadcast.2917" -> "add.2918";
	"add.2918" -> "reduce.2924";
	"constant.2919" -> "reduce.2924";
	"MaxComputation.2920" -> "reduce.2924";
	"reduce.2924" -> "broadcast.2925";
	"add.2918" -> "subtract.2926";
	"broadcast.2925" -> "subtract.2926";
	"subtract.2926" -> "exponential.2927";
	"exponential.2927" -> "reduce.2933";
	"constant.2928" -> "reduce.2933";
	"AddComputation.2929" -> "reduce.2933";
	"reduce.2933" -> "broadcast.2934";
	"exponential.2927" -> "divide.2935";
	"broadcast.2934" -> "divide.2935";
	"constant.84" -> "multiply.85";
	"add.83" -> "multiply.85";
	"multiply.85" -> "add.87";
	"constant.86" -> "add.87";
	"add.87" -> "convert.2837";
	"convert.2837" -> "reshape.2841";
	"reshape.2841" -> "concatenate.2843";
	"constant.295" -> "concatenate.2843";
	"concatenate.2843" -> "rng-bit-generator.2844";
	"rng-bit-generator.2844" -> "get-tuple-element.2845";
	"constant.2847" -> "broadcast.2848";
	"get-tuple-element.2845" -> "shift-right-logical.2849";
	"broadcast.2848" -> "shift-right-logical.2849";
	"shift-right-logical.2849" -> "convert.2850";
	"constant.300" -> "broadcast.57";
	"convert.2850" -> "multiply.2856";
	"broadcast.57" -> "multiply.2856";
	"multiply.2856" -> "convert.2859";
	"p3.6" -> "broadcast.2834";
	"convert.2859" -> "compare.2860";
	"broadcast.2834" -> "compare.2860";
	"constant.43" -> "divide.20";
	"p3.6" -> "divide.20";
	"divide.20" -> "broadcast.58";
	"constant.121" -> "broadcast.257";
	"compare.2860" -> "select.21";
	"broadcast.58" -> "select.21";
	"broadcast.257" -> "select.21";
	"divide.2935" -> "multiply.2936";
	"select.21" -> "multiply.2936";
	"multiply.2936" -> "reshape.2938";
	"add.2767" -> "reshape.2820";
	"p129.2818" -> "transpose.2819";
	"reshape.2820" -> "dot.2821";
	"transpose.2819" -> "dot.2821";
	"dot.2821" -> "reshape.2822";
	"p128.2816" -> "broadcast.2823";
	"reshape.2822" -> "add.2824";
	"broadcast.2823" -> "add.2824";
	"add.2824" -> "reshape.2827";
	"reshape.2827" -> "transpose.2828";
	"transpose.2828" -> "reshape.2830";
	"reshape.2938" -> "dot.2939";
	"reshape.2830" -> "dot.2939";
	"dot.2939" -> "reshape.2940";
	"reshape.2940" -> "transpose.2941";
	"transpose.2941" -> "reshape.2943";
	"p127.2809" -> "transpose.2810";
	"reshape.2943" -> "dot.2944";
	"transpose.2810" -> "dot.2944";
	"dot.2944" -> "reshape.2945";
	"p126.2807" -> "broadcast.2946";
	"reshape.2945" -> "add.2947";
	"broadcast.2946" -> "add.2947";
	"constant.88" -> "multiply.89";
	"add.87" -> "multiply.89";
	"multiply.89" -> "add.91";
	"constant.90" -> "add.91";
	"add.91" -> "convert.2775";
	"convert.2775" -> "reshape.2779";
	"reshape.2779" -> "concatenate.2781";
	"constant.301" -> "concatenate.2781";
	"concatenate.2781" -> "rng-bit-generator.2782";
	"rng-bit-generator.2782" -> "get-tuple-element.2783";
	"constant.2785" -> "broadcast.2786";
	"get-tuple-element.2783" -> "shift-right-logical.2787";
	"broadcast.2786" -> "shift-right-logical.2787";
	"shift-right-logical.2787" -> "convert.2788";
	"constant.307" -> "broadcast.59";
	"convert.2788" -> "multiply.2794";
	"broadcast.59" -> "multiply.2794";
	"multiply.2794" -> "convert.2797";
	"p3.6" -> "broadcast.2772";
	"convert.2797" -> "compare.2798";
	"broadcast.2772" -> "compare.2798";
	"constant.45" -> "divide.21";
	"p3.6" -> "divide.21";
	"divide.21" -> "broadcast.60";
	"constant.123" -> "broadcast.263";
	"compare.2798" -> "select.22";
	"broadcast.60" -> "select.22";
	"broadcast.263" -> "select.22";
	"add.2947" -> "multiply.2950";
	"select.22" -> "multiply.2950";
	"multiply.2950" -> "add.2951";
	"add.2767" -> "add.2951";
	"add.2951" -> "reshape.2952";
	"constant.510" -> "broadcast.514";
	"constant.505" -> "broadcast.509";
	"reshape.2952" -> "batch-norm-training.2953";
	"broadcast.514" -> "batch-norm-training.2953";
	"broadcast.509" -> "batch-norm-training.2953";
	"batch-norm-training.2953" -> "get-tuple-element.2954";
	"get-tuple-element.2954" -> "reshape.2961";
	"p18.494" -> "broadcast.2964";
	"reshape.2961" -> "multiply.2967";
	"broadcast.2964" -> "multiply.2967";
	"broadcast.2968" -> "add.2969";
	"multiply.2967" -> "add.2969";
	"add.2969" -> "reshape.3022";
	"p138.3020" -> "transpose.3021";
	"reshape.3022" -> "dot.3023";
	"transpose.3021" -> "dot.3023";
	"dot.3023" -> "reshape.3024";
	"p137.3018" -> "broadcast.3025";
	"reshape.3024" -> "add.3026";
	"broadcast.3025" -> "add.3026";
	"add.3026" -> "custom-call.24";
	"custom-call.24" -> "reshape.3036";
	"p136.3011" -> "transpose.3012";
	"reshape.3036" -> "dot.3037";
	"transpose.3012" -> "dot.3037";
	"dot.3037" -> "reshape.3038";
	"p135.3009" -> "broadcast.3039";
	"reshape.3038" -> "add.3040";
	"broadcast.3039" -> "add.3040";
	"constant.92" -> "multiply.93";
	"add.91" -> "multiply.93";
	"multiply.93" -> "add.95";
	"constant.94" -> "add.95";
	"add.95" -> "convert.2977";
	"convert.2977" -> "reshape.2981";
	"reshape.2981" -> "concatenate.2983";
	"constant.309" -> "concatenate.2983";
	"concatenate.2983" -> "rng-bit-generator.2984";
	"rng-bit-generator.2984" -> "get-tuple-element.2985";
	"constant.2987" -> "broadcast.2988";
	"get-tuple-element.2985" -> "shift-right-logical.2989";
	"broadcast.2988" -> "shift-right-logical.2989";
	"shift-right-logical.2989" -> "convert.2990";
	"constant.314" -> "broadcast.61";
	"convert.2990" -> "multiply.2996";
	"broadcast.61" -> "multiply.2996";
	"multiply.2996" -> "convert.2999";
	"p3.6" -> "broadcast.2974";
	"convert.2999" -> "compare.3000";
	"broadcast.2974" -> "compare.3000";
	"constant.47" -> "divide.22";
	"p3.6" -> "divide.22";
	"divide.22" -> "broadcast.62";
	"constant.125" -> "broadcast.275";
	"compare.3000" -> "select.23";
	"broadcast.62" -> "select.23";
	"broadcast.275" -> "select.23";
	"add.3040" -> "multiply.3043";
	"select.23" -> "multiply.3043";
	"multiply.3043" -> "add.3044";
	"add.2969" -> "add.3044";
	"add.3044" -> "reshape.3045";
	"constant.483" -> "broadcast.487";
	"constant.478" -> "broadcast.482";
	"reshape.3045" -> "batch-norm-training.3046";
	"broadcast.487" -> "batch-norm-training.3046";
	"broadcast.482" -> "batch-norm-training.3046";
	"batch-norm-training.3046" -> "get-tuple-element.3047";
	"get-tuple-element.3047" -> "reshape.3054";
	"p17.467" -> "broadcast.3057";
	"reshape.3054" -> "multiply.3060";
	"broadcast.3057" -> "multiply.3060";
	"broadcast.3061" -> "add.3062";
	"multiply.3060" -> "add.3062";
	"add.3062" -> "reshape.3195";
	"p147.3193" -> "transpose.3194";
	"reshape.3195" -> "dot.3196";
	"transpose.3194" -> "dot.3196";
	"dot.3196" -> "reshape.3197";
	"p146.3191" -> "broadcast.3198";
	"reshape.3197" -> "add.3199";
	"broadcast.3198" -> "add.3199";
	"add.3199" -> "reshape.3202";
	"reshape.3202" -> "transpose.3203";
	"transpose.3203" -> "reshape.3205";
	"add.3062" -> "reshape.3174";
	"p145.3172" -> "transpose.3173";
	"reshape.3174" -> "dot.3175";
	"transpose.3173" -> "dot.3175";
	"dot.3175" -> "reshape.3176";
	"p144.3170" -> "broadcast.3177";
	"reshape.3176" -> "add.3178";
	"broadcast.3177" -> "add.3178";
	"add.3178" -> "reshape.3181";
	"reshape.3181" -> "transpose.3183";
	"transpose.3183" -> "reshape.3185";
	"reshape.3205" -> "dot.3206";
	"reshape.3185" -> "dot.3206";
	"p45.1099" -> "broadcast.466";
	"dot.3206" -> "divide.46";
	"broadcast.466" -> "divide.46";
	"divide.46" -> "reshape.1251";
	"multiply.152" -> "broadcast.3212";
	"reshape.1251" -> "add.3213";
	"broadcast.3212" -> "add.3213";
	"add.3213" -> "reduce.3219";
	"constant.3214" -> "reduce.3219";
	"MaxComputation.3215" -> "reduce.3219";
	"reduce.3219" -> "broadcast.3220";
	"add.3213" -> "subtract.3221";
	"broadcast.3220" -> "subtract.3221";
	"subtract.3221" -> "exponential.3222";
	"exponential.3222" -> "reduce.3228";
	"constant.3223" -> "reduce.3228";
	"AddComputation.3224" -> "reduce.3228";
	"reduce.3228" -> "broadcast.3229";
	"exponential.3222" -> "divide.3230";
	"broadcast.3229" -> "divide.3230";
	"constant.96" -> "multiply.97";
	"add.95" -> "multiply.97";
	"multiply.97" -> "add.99";
	"constant.98" -> "add.99";
	"add.99" -> "convert.3132";
	"convert.3132" -> "reshape.3136";
	"reshape.3136" -> "concatenate.3138";
	"constant.317" -> "concatenate.3138";
	"concatenate.3138" -> "rng-bit-generator.3139";
	"rng-bit-generator.3139" -> "get-tuple-element.3140";
	"constant.3142" -> "broadcast.3143";
	"get-tuple-element.3140" -> "shift-right-logical.3144";
	"broadcast.3143" -> "shift-right-logical.3144";
	"shift-right-logical.3144" -> "convert.3145";
	"constant.322" -> "broadcast.64";
	"convert.3145" -> "multiply.3151";
	"broadcast.64" -> "multiply.3151";
	"multiply.3151" -> "convert.3154";
	"p3.6" -> "broadcast.3129";
	"convert.3154" -> "compare.3155";
	"broadcast.3129" -> "compare.3155";
	"constant.49" -> "divide.23";
	"p3.6" -> "divide.23";
	"divide.23" -> "broadcast.65";
	"constant.127" -> "broadcast.287";
	"compare.3155" -> "select.24";
	"broadcast.65" -> "select.24";
	"broadcast.287" -> "select.24";
	"divide.3230" -> "multiply.3231";
	"select.24" -> "multiply.3231";
	"multiply.3231" -> "reshape.3233";
	"add.3062" -> "reshape.3115";
	"p143.3113" -> "transpose.3114";
	"reshape.3115" -> "dot.3116";
	"transpose.3114" -> "dot.3116";
	"dot.3116" -> "reshape.3117";
	"p142.3111" -> "broadcast.3118";
	"reshape.3117" -> "add.3119";
	"broadcast.3118" -> "add.3119";
	"add.3119" -> "reshape.3122";
	"reshape.3122" -> "transpose.3123";
	"transpose.3123" -> "reshape.3125";
	"reshape.3233" -> "dot.3234";
	"reshape.3125" -> "dot.3234";
	"dot.3234" -> "reshape.3235";
	"reshape.3235" -> "transpose.3236";
	"transpose.3236" -> "reshape.3238";
	"p141.3104" -> "transpose.3105";
	"reshape.3238" -> "dot.3239";
	"transpose.3105" -> "dot.3239";
	"dot.3239" -> "reshape.3240";
	"p140.3102" -> "broadcast.3241";
	"reshape.3240" -> "add.3242";
	"broadcast.3241" -> "add.3242";
	"constant.100" -> "multiply.101";
	"add.99" -> "multiply.101";
	"multiply.101" -> "add.103";
	"constant.102" -> "add.103";
	"add.103" -> "convert.3070";
	"convert.3070" -> "reshape.3074";
	"reshape.3074" -> "concatenate.3076";
	"constant.323" -> "concatenate.3076";
	"concatenate.3076" -> "rng-bit-generator.3077";
	"rng-bit-generator.3077" -> "get-tuple-element.3078";
	"constant.3080" -> "broadcast.3081";
	"get-tuple-element.3078" -> "shift-right-logical.3082";
	"broadcast.3081" -> "shift-right-logical.3082";
	"shift-right-logical.3082" -> "convert.3083";
	"constant.328" -> "broadcast.66";
	"convert.3083" -> "multiply.3089";
	"broadcast.66" -> "multiply.3089";
	"multiply.3089" -> "convert.3092";
	"p3.6" -> "broadcast.3067";
	"convert.3092" -> "compare.3093";
	"broadcast.3067" -> "compare.3093";
	"constant.51" -> "divide.24";
	"p3.6" -> "divide.24";
	"divide.24" -> "broadcast.67";
	"constant.129" -> "broadcast.294";
	"compare.3093" -> "select.25";
	"broadcast.67" -> "select.25";
	"broadcast.294" -> "select.25";
	"add.3242" -> "multiply.3245";
	"select.25" -> "multiply.3245";
	"multiply.3245" -> "add.3246";
	"add.3062" -> "add.3246";
	"add.3246" -> "reshape.3247";
	"constant.456" -> "broadcast.460";
	"constant.451" -> "broadcast.455";
	"reshape.3247" -> "batch-norm-training.3248";
	"broadcast.460" -> "batch-norm-training.3248";
	"broadcast.455" -> "batch-norm-training.3248";
	"batch-norm-training.3248" -> "get-tuple-element.3249";
	"get-tuple-element.3249" -> "reshape.3256";
	"p16.440" -> "broadcast.3259";
	"reshape.3256" -> "multiply.3262";
	"broadcast.3259" -> "multiply.3262";
	"broadcast.3263" -> "add.3264";
	"multiply.3262" -> "add.3264";
	"add.3264" -> "reshape.3317";
	"p152.3315" -> "transpose.3316";
	"reshape.3317" -> "dot.3318";
	"transpose.3316" -> "dot.3318";
	"dot.3318" -> "reshape.3319";
	"p151.3313" -> "broadcast.3320";
	"reshape.3319" -> "add.3321";
	"broadcast.3320" -> "add.3321";
	"add.3321" -> "custom-call.25";
	"custom-call.25" -> "reshape.3331";
	"p150.3306" -> "transpose.3307";
	"reshape.3331" -> "dot.3332";
	"transpose.3307" -> "dot.3332";
	"dot.3332" -> "reshape.3333";
	"p149.3304" -> "broadcast.3334";
	"reshape.3333" -> "add.3335";
	"broadcast.3334" -> "add.3335";
	"constant.104" -> "multiply.105";
	"add.103" -> "multiply.105";
	"multiply.105" -> "add.107";
	"constant.106" -> "add.107";
	"add.107" -> "convert.3272";
	"convert.3272" -> "reshape.3276";
	"reshape.3276" -> "concatenate.3278";
	"constant.330" -> "concatenate.3278";
	"concatenate.3278" -> "rng-bit-generator.3279";
	"rng-bit-generator.3279" -> "get-tuple-element.3280";
	"constant.3282" -> "broadcast.3283";
	"get-tuple-element.3280" -> "shift-right-logical.3284";
	"broadcast.3283" -> "shift-right-logical.3284";
	"shift-right-logical.3284" -> "convert.3285";
	"constant.336" -> "broadcast.68";
	"convert.3285" -> "multiply.3291";
	"broadcast.68" -> "multiply.3291";
	"multiply.3291" -> "convert.3294";
	"p3.6" -> "broadcast.3269";
	"convert.3294" -> "compare.3295";
	"broadcast.3269" -> "compare.3295";
	"constant.53" -> "divide.25";
	"p3.6" -> "divide.25";
	"divide.25" -> "broadcast.69";
	"constant.131" -> "broadcast.305";
	"compare.3295" -> "select.26";
	"broadcast.69" -> "select.26";
	"broadcast.305" -> "select.26";
	"add.3335" -> "multiply.3338";
	"select.26" -> "multiply.3338";
	"multiply.3338" -> "add.3339";
	"add.3264" -> "add.3339";
	"add.3339" -> "reshape.3340";
	"constant.429" -> "broadcast.433";
	"constant.424" -> "broadcast.428";
	"reshape.3340" -> "batch-norm-training.3341";
	"broadcast.433" -> "batch-norm-training.3341";
	"broadcast.428" -> "batch-norm-training.3341";
	"batch-norm-training.3341" -> "get-tuple-element.3342";
	"get-tuple-element.3342" -> "reshape.3349";
	"p15.413" -> "broadcast.3352";
	"reshape.3349" -> "multiply.3355";
	"broadcast.3352" -> "multiply.3355";
	"broadcast.3356" -> "add.3357";
	"multiply.3355" -> "add.3357";
	"add.3357" -> "reshape.3490";
	"p161.3488" -> "transpose.3489";
	"reshape.3490" -> "dot.3491";
	"transpose.3489" -> "dot.3491";
	"dot.3491" -> "reshape.3492";
	"p160.3486" -> "broadcast.3493";
	"reshape.3492" -> "add.3494";
	"broadcast.3493" -> "add.3494";
	"add.3494" -> "reshape.3497";
	"reshape.3497" -> "transpose.3498";
	"transpose.3498" -> "reshape.3500";
	"add.3357" -> "reshape.3469";
	"p159.3467" -> "transpose.3468";
	"reshape.3469" -> "dot.3470";
	"transpose.3468" -> "dot.3470";
	"dot.3470" -> "reshape.3471";
	"p158.3465" -> "broadcast.3472";
	"reshape.3471" -> "add.3473";
	"broadcast.3472" -> "add.3473";
	"add.3473" -> "reshape.3476";
	"reshape.3476" -> "transpose.3478";
	"transpose.3478" -> "reshape.3480";
	"reshape.3500" -> "dot.3501";
	"reshape.3480" -> "dot.3501";
	"p45.1099" -> "broadcast.468";
	"dot.3501" -> "divide.47";
	"broadcast.468" -> "divide.47";
	"divide.47" -> "reshape.1256";
	"multiply.152" -> "broadcast.3507";
	"reshape.1256" -> "add.3508";
	"broadcast.3507" -> "add.3508";
	"add.3508" -> "reduce.3514";
	"constant.3509" -> "reduce.3514";
	"MaxComputation.3510" -> "reduce.3514";
	"reduce.3514" -> "broadcast.3515";
	"add.3508" -> "subtract.3516";
	"broadcast.3515" -> "subtract.3516";
	"subtract.3516" -> "exponential.3517";
	"exponential.3517" -> "reduce.3523";
	"constant.3518" -> "reduce.3523";
	"AddComputation.3519" -> "reduce.3523";
	"reduce.3523" -> "broadcast.3524";
	"exponential.3517" -> "divide.3525";
	"broadcast.3524" -> "divide.3525";
	"constant.108" -> "multiply.109";
	"add.107" -> "multiply.109";
	"multiply.109" -> "add.111";
	"constant.110" -> "add.111";
	"add.111" -> "convert.3427";
	"convert.3427" -> "reshape.3431";
	"reshape.3431" -> "concatenate.3433";
	"constant.339" -> "concatenate.3433";
	"concatenate.3433" -> "rng-bit-generator.3434";
	"rng-bit-generator.3434" -> "get-tuple-element.3435";
	"constant.3437" -> "broadcast.3438";
	"get-tuple-element.3435" -> "shift-right-logical.3439";
	"broadcast.3438" -> "shift-right-logical.3439";
	"shift-right-logical.3439" -> "convert.3440";
	"constant.344" -> "broadcast.71";
	"convert.3440" -> "multiply.3446";
	"broadcast.71" -> "multiply.3446";
	"multiply.3446" -> "convert.3449";
	"p3.6" -> "broadcast.3424";
	"convert.3449" -> "compare.3450";
	"broadcast.3424" -> "compare.3450";
	"constant.55" -> "divide.26";
	"p3.6" -> "divide.26";
	"divide.26" -> "broadcast.72";
	"constant.133" -> "broadcast.317";
	"compare.3450" -> "select.27";
	"broadcast.72" -> "select.27";
	"broadcast.317" -> "select.27";
	"divide.3525" -> "multiply.3526";
	"select.27" -> "multiply.3526";
	"multiply.3526" -> "reshape.3528";
	"add.3357" -> "reshape.3410";
	"p157.3408" -> "transpose.3409";
	"reshape.3410" -> "dot.3411";
	"transpose.3409" -> "dot.3411";
	"dot.3411" -> "reshape.3412";
	"p156.3406" -> "broadcast.3413";
	"reshape.3412" -> "add.3414";
	"broadcast.3413" -> "add.3414";
	"add.3414" -> "reshape.3417";
	"reshape.3417" -> "transpose.3418";
	"transpose.3418" -> "reshape.3420";
	"reshape.3528" -> "dot.3529";
	"reshape.3420" -> "dot.3529";
	"dot.3529" -> "reshape.3530";
	"reshape.3530" -> "transpose.3531";
	"transpose.3531" -> "reshape.3533";
	"p155.3399" -> "transpose.3400";
	"reshape.3533" -> "dot.3534";
	"transpose.3400" -> "dot.3534";
	"dot.3534" -> "reshape.3535";
	"p154.3397" -> "broadcast.3536";
	"reshape.3535" -> "add.3537";
	"broadcast.3536" -> "add.3537";
	"constant.112" -> "multiply.113";
	"add.111" -> "multiply.113";
	"multiply.113" -> "add.115";
	"constant.114" -> "add.115";
	"add.115" -> "convert.3365";
	"convert.3365" -> "reshape.3369";
	"reshape.3369" -> "concatenate.3371";
	"constant.345" -> "concatenate.3371";
	"concatenate.3371" -> "rng-bit-generator.3372";
	"rng-bit-generator.3372" -> "get-tuple-element.3373";
	"constant.3375" -> "broadcast.3376";
	"get-tuple-element.3373" -> "shift-right-logical.3377";
	"broadcast.3376" -> "shift-right-logical.3377";
	"shift-right-logical.3377" -> "convert.3378";
	"constant.350" -> "broadcast.73";
	"convert.3378" -> "multiply.3384";
	"broadcast.73" -> "multiply.3384";
	"multiply.3384" -> "convert.3387";
	"p3.6" -> "broadcast.3362";
	"convert.3387" -> "compare.3388";
	"broadcast.3362" -> "compare.3388";
	"constant.57" -> "divide.27";
	"p3.6" -> "divide.27";
	"divide.27" -> "broadcast.74";
	"constant.135" -> "broadcast.324";
	"compare.3388" -> "select.28";
	"broadcast.74" -> "select.28";
	"broadcast.324" -> "select.28";
	"add.3537" -> "multiply.3540";
	"select.28" -> "multiply.3540";
	"multiply.3540" -> "add.3541";
	"add.3357" -> "add.3541";
	"add.3541" -> "reshape.3542";
	"constant.402" -> "broadcast.406";
	"constant.397" -> "broadcast.401";
	"reshape.3542" -> "batch-norm-training.3543";
	"broadcast.406" -> "batch-norm-training.3543";
	"broadcast.401" -> "batch-norm-training.3543";
	"batch-norm-training.3543" -> "get-tuple-element.3544";
	"get-tuple-element.3544" -> "reshape.3551";
	"p14.386" -> "broadcast.3554";
	"reshape.3551" -> "multiply.3557";
	"broadcast.3554" -> "multiply.3557";
	"broadcast.3558" -> "add.3559";
	"multiply.3557" -> "add.3559";
	"add.3559" -> "reshape.3612";
	"p166.3610" -> "transpose.3611";
	"reshape.3612" -> "dot.3613";
	"transpose.3611" -> "dot.3613";
	"dot.3613" -> "reshape.3614";
	"p165.3608" -> "broadcast.3615";
	"reshape.3614" -> "add.3616";
	"broadcast.3615" -> "add.3616";
	"add.3616" -> "custom-call.26";
	"custom-call.26" -> "reshape.3626";
	"p164.3601" -> "transpose.3602";
	"reshape.3626" -> "dot.3627";
	"transpose.3602" -> "dot.3627";
	"dot.3627" -> "reshape.3628";
	"p163.3599" -> "broadcast.3629";
	"reshape.3628" -> "add.3630";
	"broadcast.3629" -> "add.3630";
	"constant.116" -> "multiply.117";
	"add.115" -> "multiply.117";
	"multiply.117" -> "add.119";
	"constant.118" -> "add.119";
	"add.119" -> "convert.3567";
	"convert.3567" -> "reshape.3571";
	"reshape.3571" -> "concatenate.3573";
	"constant.352" -> "concatenate.3573";
	"concatenate.3573" -> "rng-bit-generator.3574";
	"rng-bit-generator.3574" -> "get-tuple-element.3575";
	"constant.3577" -> "broadcast.3578";
	"get-tuple-element.3575" -> "shift-right-logical.3579";
	"broadcast.3578" -> "shift-right-logical.3579";
	"shift-right-logical.3579" -> "convert.3580";
	"constant.357" -> "broadcast.75";
	"convert.3580" -> "multiply.3586";
	"broadcast.75" -> "multiply.3586";
	"multiply.3586" -> "convert.3589";
	"p3.6" -> "broadcast.3564";
	"convert.3589" -> "compare.3590";
	"broadcast.3564" -> "compare.3590";
	"constant.59" -> "divide.28";
	"p3.6" -> "divide.28";
	"divide.28" -> "broadcast.76";
	"constant.137" -> "broadcast.334";
	"compare.3590" -> "select.29";
	"broadcast.76" -> "select.29";
	"broadcast.334" -> "select.29";
	"add.3630" -> "multiply.3633";
	"select.29" -> "multiply.3633";
	"multiply.3633" -> "add.3634";
	"add.3559" -> "add.3634";
	"add.3634" -> "reshape.3635";
	"constant.375" -> "broadcast.379";
	"constant.370" -> "broadcast.374";
	"reshape.3635" -> "batch-norm-training.3636";
	"broadcast.379" -> "batch-norm-training.3636";
	"broadcast.374" -> "batch-norm-training.3636";
	"batch-norm-training.3636" -> "get-tuple-element.3637";
	"get-tuple-element.3637" -> "reshape.3644";
	"p13.359" -> "broadcast.3647";
	"reshape.3644" -> "multiply.3650";
	"broadcast.3647" -> "multiply.3650";
	"broadcast.3651" -> "add.3652";
	"multiply.3650" -> "add.3652";
	"add.3652" -> "reshape.3785";
	"p175.3783" -> "transpose.3784";
	"reshape.3785" -> "dot.3786";
	"transpose.3784" -> "dot.3786";
	"dot.3786" -> "reshape.3787";
	"p174.3781" -> "broadcast.3788";
	"reshape.3787" -> "add.3789";
	"broadcast.3788" -> "add.3789";
	"add.3789" -> "reshape.3792";
	"reshape.3792" -> "transpose.3793";
	"transpose.3793" -> "reshape.3795";
	"add.3652" -> "reshape.3764";
	"p173.3762" -> "transpose.3763";
	"reshape.3764" -> "dot.3765";
	"transpose.3763" -> "dot.3765";
	"dot.3765" -> "reshape.3766";
	"p172.3760" -> "broadcast.3767";
	"reshape.3766" -> "add.3768";
	"broadcast.3767" -> "add.3768";
	"add.3768" -> "reshape.3771";
	"reshape.3771" -> "transpose.3773";
	"transpose.3773" -> "reshape.3775";
	"reshape.3795" -> "dot.3796";
	"reshape.3775" -> "dot.3796";
	"p45.1099" -> "broadcast.471";
	"dot.3796" -> "divide.48";
	"broadcast.471" -> "divide.48";
	"divide.48" -> "reshape.1261";
	"multiply.152" -> "broadcast.3802";
	"reshape.1261" -> "add.3803";
	"broadcast.3802" -> "add.3803";
	"add.3803" -> "reduce.3809";
	"constant.3804" -> "reduce.3809";
	"MaxComputation.3805" -> "reduce.3809";
	"reduce.3809" -> "broadcast.3810";
	"add.3803" -> "subtract.3811";
	"broadcast.3810" -> "subtract.3811";
	"subtract.3811" -> "exponential.3812";
	"exponential.3812" -> "reduce.3818";
	"constant.3813" -> "reduce.3818";
	"AddComputation.3814" -> "reduce.3818";
	"reduce.3818" -> "broadcast.3819";
	"exponential.3812" -> "divide.3820";
	"broadcast.3819" -> "divide.3820";
	"constant.120" -> "multiply.121";
	"add.119" -> "multiply.121";
	"multiply.121" -> "add.123";
	"constant.122" -> "add.123";
	"add.123" -> "convert.3722";
	"convert.3722" -> "reshape.3726";
	"reshape.3726" -> "concatenate.3728";
	"constant.361" -> "concatenate.3728";
	"concatenate.3728" -> "rng-bit-generator.3729";
	"rng-bit-generator.3729" -> "get-tuple-element.3730";
	"constant.3732" -> "broadcast.3733";
	"get-tuple-element.3730" -> "shift-right-logical.3734";
	"broadcast.3733" -> "shift-right-logical.3734";
	"shift-right-logical.3734" -> "convert.3735";
	"constant.366" -> "broadcast.78";
	"convert.3735" -> "multiply.3741";
	"broadcast.78" -> "multiply.3741";
	"multiply.3741" -> "convert.3744";
	"p3.6" -> "broadcast.3719";
	"convert.3744" -> "compare.3745";
	"broadcast.3719" -> "compare.3745";
	"constant.61" -> "divide.29";
	"p3.6" -> "divide.29";
	"divide.29" -> "broadcast.79";
	"constant.139" -> "broadcast.348";
	"compare.3745" -> "select.30";
	"broadcast.79" -> "select.30";
	"broadcast.348" -> "select.30";
	"divide.3820" -> "multiply.3821";
	"select.30" -> "multiply.3821";
	"multiply.3821" -> "reshape.3823";
	"add.3652" -> "reshape.3705";
	"p171.3703" -> "transpose.3704";
	"reshape.3705" -> "dot.3706";
	"transpose.3704" -> "dot.3706";
	"dot.3706" -> "reshape.3707";
	"p170.3701" -> "broadcast.3708";
	"reshape.3707" -> "add.3709";
	"broadcast.3708" -> "add.3709";
	"add.3709" -> "reshape.3712";
	"reshape.3712" -> "transpose.3713";
	"transpose.3713" -> "reshape.3715";
	"reshape.3823" -> "dot.3824";
	"reshape.3715" -> "dot.3824";
	"dot.3824" -> "reshape.3825";
	"reshape.3825" -> "transpose.3826";
	"transpose.3826" -> "reshape.3828";
	"p169.3694" -> "transpose.3695";
	"reshape.3828" -> "dot.3829";
	"transpose.3695" -> "dot.3829";
	"dot.3829" -> "reshape.3830";
	"p168.3692" -> "broadcast.3831";
	"reshape.3830" -> "add.3832";
	"broadcast.3831" -> "add.3832";
	"constant.124" -> "multiply.125";
	"add.123" -> "multiply.125";
	"multiply.125" -> "add.127";
	"constant.126" -> "add.127";
	"add.127" -> "convert.3660";
	"convert.3660" -> "reshape.3664";
	"reshape.3664" -> "concatenate.3666";
	"constant.367" -> "concatenate.3666";
	"concatenate.3666" -> "rng-bit-generator.3667";
	"rng-bit-generator.3667" -> "get-tuple-element.3668";
	"constant.3670" -> "broadcast.3671";
	"get-tuple-element.3668" -> "shift-right-logical.3672";
	"broadcast.3671" -> "shift-right-logical.3672";
	"shift-right-logical.3672" -> "convert.3673";
	"constant.372" -> "broadcast.80";
	"convert.3673" -> "multiply.3679";
	"broadcast.80" -> "multiply.3679";
	"multiply.3679" -> "convert.3682";
	"p3.6" -> "broadcast.3657";
	"convert.3682" -> "compare.3683";
	"broadcast.3657" -> "compare.3683";
	"constant.63" -> "divide.30";
	"p3.6" -> "divide.30";
	"divide.30" -> "broadcast.81";
	"constant.141" -> "broadcast.354";
	"compare.3683" -> "select.31";
	"broadcast.81" -> "select.31";
	"broadcast.354" -> "select.31";
	"add.3832" -> "multiply.3835";
	"select.31" -> "multiply.3835";
	"multiply.3835" -> "add.3836";
	"add.3652" -> "add.3836";
	"add.3836" -> "reshape.3837";
	"constant.348" -> "broadcast.352";
	"constant.343" -> "broadcast.347";
	"reshape.3837" -> "batch-norm-training.3838";
	"broadcast.352" -> "batch-norm-training.3838";
	"broadcast.347" -> "batch-norm-training.3838";
	"batch-norm-training.3838" -> "get-tuple-element.3839";
	"get-tuple-element.3839" -> "reshape.3846";
	"p12.332" -> "broadcast.3849";
	"reshape.3846" -> "multiply.3852";
	"broadcast.3849" -> "multiply.3852";
	"broadcast.3853" -> "add.3854";
	"multiply.3852" -> "add.3854";
	"add.3854" -> "reshape.3907";
	"p180.3905" -> "transpose.3906";
	"reshape.3907" -> "dot.3908";
	"transpose.3906" -> "dot.3908";
	"dot.3908" -> "reshape.3909";
	"p179.3903" -> "broadcast.3910";
	"reshape.3909" -> "add.3911";
	"broadcast.3910" -> "add.3911";
	"add.3911" -> "custom-call.27";
	"custom-call.27" -> "reshape.3921";
	"p178.3896" -> "transpose.3897";
	"reshape.3921" -> "dot.3922";
	"transpose.3897" -> "dot.3922";
	"dot.3922" -> "reshape.3923";
	"p177.3894" -> "broadcast.3924";
	"reshape.3923" -> "add.3925";
	"broadcast.3924" -> "add.3925";
	"constant.128" -> "multiply.129";
	"add.127" -> "multiply.129";
	"multiply.129" -> "add.131";
	"constant.130" -> "add.131";
	"add.131" -> "convert.3862";
	"convert.3862" -> "reshape.3866";
	"reshape.3866" -> "concatenate.3868";
	"constant.374" -> "concatenate.3868";
	"concatenate.3868" -> "rng-bit-generator.3869";
	"rng-bit-generator.3869" -> "get-tuple-element.3870";
	"constant.3872" -> "broadcast.3873";
	"get-tuple-element.3870" -> "shift-right-logical.3874";
	"broadcast.3873" -> "shift-right-logical.3874";
	"shift-right-logical.3874" -> "convert.3875";
	"constant.379" -> "broadcast.82";
	"convert.3875" -> "multiply.3881";
	"broadcast.82" -> "multiply.3881";
	"multiply.3881" -> "convert.3884";
	"p3.6" -> "broadcast.3859";
	"convert.3884" -> "compare.3885";
	"broadcast.3859" -> "compare.3885";
	"constant.65" -> "divide.31";
	"p3.6" -> "divide.31";
	"divide.31" -> "broadcast.83";
	"constant.143" -> "broadcast.365";
	"compare.3885" -> "select.32";
	"broadcast.83" -> "select.32";
	"broadcast.365" -> "select.32";
	"add.3925" -> "multiply.3928";
	"select.32" -> "multiply.3928";
	"multiply.3928" -> "add.3929";
	"add.3854" -> "add.3929";
	"add.3929" -> "reshape.3930";
	"constant.321" -> "broadcast.325";
	"constant.316" -> "broadcast.320";
	"reshape.3930" -> "batch-norm-training.3931";
	"broadcast.325" -> "batch-norm-training.3931";
	"broadcast.320" -> "batch-norm-training.3931";
	"batch-norm-training.3931" -> "get-tuple-element.3932";
	"get-tuple-element.3932" -> "reshape.3939";
	"p11.305" -> "broadcast.3942";
	"reshape.3939" -> "multiply.3945";
	"broadcast.3942" -> "multiply.3945";
	"broadcast.3946" -> "add.3947";
	"multiply.3945" -> "add.3947";
	"add.3947" -> "reshape.4080";
	"p189.4078" -> "transpose.4079";
	"reshape.4080" -> "dot.4081";
	"transpose.4079" -> "dot.4081";
	"dot.4081" -> "reshape.4082";
	"p188.4076" -> "broadcast.4083";
	"reshape.4082" -> "add.4084";
	"broadcast.4083" -> "add.4084";
	"add.4084" -> "reshape.4087";
	"reshape.4087" -> "transpose.4088";
	"transpose.4088" -> "reshape.4090";
	"add.3947" -> "reshape.4059";
	"p187.4057" -> "transpose.4058";
	"reshape.4059" -> "dot.4060";
	"transpose.4058" -> "dot.4060";
	"dot.4060" -> "reshape.4061";
	"p186.4055" -> "broadcast.4062";
	"reshape.4061" -> "add.4063";
	"broadcast.4062" -> "add.4063";
	"add.4063" -> "reshape.4066";
	"reshape.4066" -> "transpose.4068";
	"transpose.4068" -> "reshape.4070";
	"reshape.4090" -> "dot.4091";
	"reshape.4070" -> "dot.4091";
	"p45.1099" -> "broadcast.474";
	"dot.4091" -> "divide.49";
	"broadcast.474" -> "divide.49";
	"divide.49" -> "reshape.1264";
	"multiply.152" -> "broadcast.4097";
	"reshape.1264" -> "add.4098";
	"broadcast.4097" -> "add.4098";
	"add.4098" -> "reduce.4104";
	"constant.4099" -> "reduce.4104";
	"MaxComputation.4100" -> "reduce.4104";
	"reduce.4104" -> "broadcast.4105";
	"add.4098" -> "subtract.4106";
	"broadcast.4105" -> "subtract.4106";
	"subtract.4106" -> "exponential.4107";
	"exponential.4107" -> "reduce.4113";
	"constant.4108" -> "reduce.4113";
	"AddComputation.4109" -> "reduce.4113";
	"reduce.4113" -> "broadcast.4114";
	"exponential.4107" -> "divide.4115";
	"broadcast.4114" -> "divide.4115";
	"constant.132" -> "multiply.133";
	"add.131" -> "multiply.133";
	"multiply.133" -> "add.135";
	"constant.134" -> "add.135";
	"add.135" -> "convert.4017";
	"convert.4017" -> "reshape.4021";
	"reshape.4021" -> "concatenate.4023";
	"constant.382" -> "concatenate.4023";
	"concatenate.4023" -> "rng-bit-generator.4024";
	"rng-bit-generator.4024" -> "get-tuple-element.4025";
	"constant.4027" -> "broadcast.4028";
	"get-tuple-element.4025" -> "shift-right-logical.4029";
	"broadcast.4028" -> "shift-right-logical.4029";
	"shift-right-logical.4029" -> "convert.4030";
	"constant.388" -> "broadcast.85";
	"convert.4030" -> "multiply.4036";
	"broadcast.85" -> "multiply.4036";
	"multiply.4036" -> "convert.4039";
	"p3.6" -> "broadcast.4014";
	"convert.4039" -> "compare.4040";
	"broadcast.4014" -> "compare.4040";
	"constant.67" -> "divide.32";
	"p3.6" -> "divide.32";
	"divide.32" -> "broadcast.86";
	"constant.145" -> "broadcast.378";
	"compare.4040" -> "select.33";
	"broadcast.86" -> "select.33";
	"broadcast.378" -> "select.33";
	"divide.4115" -> "multiply.4116";
	"select.33" -> "multiply.4116";
	"multiply.4116" -> "reshape.4118";
	"add.3947" -> "reshape.4000";
	"p185.3998" -> "transpose.3999";
	"reshape.4000" -> "dot.4001";
	"transpose.3999" -> "dot.4001";
	"dot.4001" -> "reshape.4002";
	"p184.3996" -> "broadcast.4003";
	"reshape.4002" -> "add.4004";
	"broadcast.4003" -> "add.4004";
	"add.4004" -> "reshape.4007";
	"reshape.4007" -> "transpose.4008";
	"transpose.4008" -> "reshape.4010";
	"reshape.4118" -> "dot.4119";
	"reshape.4010" -> "dot.4119";
	"dot.4119" -> "reshape.4120";
	"reshape.4120" -> "transpose.4121";
	"transpose.4121" -> "reshape.4123";
	"p183.3989" -> "transpose.3990";
	"reshape.4123" -> "dot.4124";
	"transpose.3990" -> "dot.4124";
	"dot.4124" -> "reshape.4125";
	"p182.3987" -> "broadcast.4126";
	"reshape.4125" -> "add.4127";
	"broadcast.4126" -> "add.4127";
	"constant.136" -> "multiply.137";
	"add.135" -> "multiply.137";
	"multiply.137" -> "add.139";
	"constant.138" -> "add.139";
	"add.139" -> "convert.3955";
	"convert.3955" -> "reshape.3959";
	"reshape.3959" -> "concatenate.3961";
	"constant.389" -> "concatenate.3961";
	"concatenate.3961" -> "rng-bit-generator.3962";
	"rng-bit-generator.3962" -> "get-tuple-element.3963";
	"constant.3965" -> "broadcast.3966";
	"get-tuple-element.3963" -> "shift-right-logical.3967";
	"broadcast.3966" -> "shift-right-logical.3967";
	"shift-right-logical.3967" -> "convert.3968";
	"constant.394" -> "broadcast.87";
	"convert.3968" -> "multiply.3974";
	"broadcast.87" -> "multiply.3974";
	"multiply.3974" -> "convert.3977";
	"p3.6" -> "broadcast.3952";
	"convert.3977" -> "compare.3978";
	"broadcast.3952" -> "compare.3978";
	"constant.69" -> "divide.33";
	"p3.6" -> "divide.33";
	"divide.33" -> "broadcast.88";
	"constant.147" -> "broadcast.385";
	"compare.3978" -> "select.34";
	"broadcast.88" -> "select.34";
	"broadcast.385" -> "select.34";
	"add.4127" -> "multiply.4130";
	"select.34" -> "multiply.4130";
	"multiply.4130" -> "add.4131";
	"add.3947" -> "add.4131";
	"add.4131" -> "reshape.4132";
	"constant.294" -> "broadcast.298";
	"constant.289" -> "broadcast.293";
	"reshape.4132" -> "batch-norm-training.4133";
	"broadcast.298" -> "batch-norm-training.4133";
	"broadcast.293" -> "batch-norm-training.4133";
	"batch-norm-training.4133" -> "get-tuple-element.4134";
	"get-tuple-element.4134" -> "reshape.4141";
	"p10.278" -> "broadcast.4144";
	"reshape.4141" -> "multiply.4147";
	"broadcast.4144" -> "multiply.4147";
	"broadcast.4148" -> "add.4149";
	"multiply.4147" -> "add.4149";
	"add.4149" -> "reshape.4202";
	"p194.4200" -> "transpose.4201";
	"reshape.4202" -> "dot.4203";
	"transpose.4201" -> "dot.4203";
	"dot.4203" -> "reshape.4204";
	"p193.4198" -> "broadcast.4205";
	"reshape.4204" -> "add.4206";
	"broadcast.4205" -> "add.4206";
	"add.4206" -> "custom-call.28";
	"custom-call.28" -> "reshape.4216";
	"p192.4191" -> "transpose.4192";
	"reshape.4216" -> "dot.4217";
	"transpose.4192" -> "dot.4217";
	"dot.4217" -> "reshape.4218";
	"p191.4189" -> "broadcast.4219";
	"reshape.4218" -> "add.4220";
	"broadcast.4219" -> "add.4220";
	"constant.140" -> "multiply.141";
	"add.139" -> "multiply.141";
	"multiply.141" -> "add.143";
	"constant.142" -> "add.143";
	"add.143" -> "convert.4157";
	"convert.4157" -> "reshape.4161";
	"reshape.4161" -> "concatenate.4163";
	"constant.396" -> "concatenate.4163";
	"concatenate.4163" -> "rng-bit-generator.4164";
	"rng-bit-generator.4164" -> "get-tuple-element.4165";
	"constant.4167" -> "broadcast.4168";
	"get-tuple-element.4165" -> "shift-right-logical.4169";
	"broadcast.4168" -> "shift-right-logical.4169";
	"shift-right-logical.4169" -> "convert.4170";
	"constant.401" -> "broadcast.89";
	"convert.4170" -> "multiply.4176";
	"broadcast.89" -> "multiply.4176";
	"multiply.4176" -> "convert.4179";
	"p3.6" -> "broadcast.4154";
	"convert.4179" -> "compare.4180";
	"broadcast.4154" -> "compare.4180";
	"constant.71" -> "divide.34";
	"p3.6" -> "divide.34";
	"divide.34" -> "broadcast.90";
	"constant.149" -> "broadcast.395";
	"compare.4180" -> "select.35";
	"broadcast.90" -> "select.35";
	"broadcast.395" -> "select.35";
	"add.4220" -> "multiply.4223";
	"select.35" -> "multiply.4223";
	"multiply.4223" -> "add.4224";
	"add.4149" -> "add.4224";
	"add.4224" -> "reshape.4225";
	"constant.267" -> "broadcast.271";
	"constant.262" -> "broadcast.266";
	"reshape.4225" -> "batch-norm-training.4226";
	"broadcast.271" -> "batch-norm-training.4226";
	"broadcast.266" -> "batch-norm-training.4226";
	"batch-norm-training.4226" -> "get-tuple-element.4227";
	"get-tuple-element.4227" -> "reshape.4234";
	"p9.251" -> "broadcast.4237";
	"reshape.4234" -> "multiply.4240";
	"broadcast.4237" -> "multiply.4240";
	"broadcast.4241" -> "add.4242";
	"multiply.4240" -> "add.4242";
	"add.4242" -> "reshape.4375";
	"p203.4373" -> "transpose.4374";
	"reshape.4375" -> "dot.4376";
	"transpose.4374" -> "dot.4376";
	"dot.4376" -> "reshape.4377";
	"p202.4371" -> "broadcast.4378";
	"reshape.4377" -> "add.4379";
	"broadcast.4378" -> "add.4379";
	"add.4379" -> "reshape.4382";
	"reshape.4382" -> "transpose.4383";
	"transpose.4383" -> "reshape.4385";
	"add.4242" -> "reshape.4354";
	"p201.4352" -> "transpose.4353";
	"reshape.4354" -> "dot.4355";
	"transpose.4353" -> "dot.4355";
	"dot.4355" -> "reshape.4356";
	"p200.4350" -> "broadcast.4357";
	"reshape.4356" -> "add.4358";
	"broadcast.4357" -> "add.4358";
	"add.4358" -> "reshape.4361";
	"reshape.4361" -> "transpose.4363";
	"transpose.4363" -> "reshape.4365";
	"reshape.4385" -> "dot.4386";
	"reshape.4365" -> "dot.4386";
	"p45.1099" -> "broadcast.478";
	"dot.4386" -> "divide.50";
	"broadcast.478" -> "divide.50";
	"divide.50" -> "reshape.1269";
	"multiply.152" -> "broadcast.4392";
	"reshape.1269" -> "add.4393";
	"broadcast.4392" -> "add.4393";
	"add.4393" -> "reduce.4399";
	"constant.4394" -> "reduce.4399";
	"MaxComputation.4395" -> "reduce.4399";
	"reduce.4399" -> "broadcast.4400";
	"add.4393" -> "subtract.4401";
	"broadcast.4400" -> "subtract.4401";
	"subtract.4401" -> "exponential.4402";
	"exponential.4402" -> "reduce.4408";
	"constant.4403" -> "reduce.4408";
	"AddComputation.4404" -> "reduce.4408";
	"reduce.4408" -> "broadcast.4409";
	"exponential.4402" -> "divide.4410";
	"broadcast.4409" -> "divide.4410";
	"constant.144" -> "multiply.145";
	"add.143" -> "multiply.145";
	"multiply.145" -> "add.147";
	"constant.146" -> "add.147";
	"add.147" -> "convert.4312";
	"convert.4312" -> "reshape.4316";
	"reshape.4316" -> "concatenate.4318";
	"constant.404" -> "concatenate.4318";
	"concatenate.4318" -> "rng-bit-generator.4319";
	"rng-bit-generator.4319" -> "get-tuple-element.4320";
	"constant.4322" -> "broadcast.4323";
	"get-tuple-element.4320" -> "shift-right-logical.4324";
	"broadcast.4323" -> "shift-right-logical.4324";
	"shift-right-logical.4324" -> "convert.4325";
	"constant.409" -> "broadcast.92";
	"convert.4325" -> "multiply.4331";
	"broadcast.92" -> "multiply.4331";
	"multiply.4331" -> "convert.4334";
	"p3.6" -> "broadcast.4309";
	"convert.4334" -> "compare.4335";
	"broadcast.4309" -> "compare.4335";
	"constant.73" -> "divide.35";
	"p3.6" -> "divide.35";
	"divide.35" -> "broadcast.93";
	"constant.151" -> "broadcast.408";
	"compare.4335" -> "select.36";
	"broadcast.93" -> "select.36";
	"broadcast.408" -> "select.36";
	"divide.4410" -> "multiply.4411";
	"select.36" -> "multiply.4411";
	"multiply.4411" -> "reshape.4413";
	"add.4242" -> "reshape.4295";
	"p199.4293" -> "transpose.4294";
	"reshape.4295" -> "dot.4296";
	"transpose.4294" -> "dot.4296";
	"dot.4296" -> "reshape.4297";
	"p198.4291" -> "broadcast.4298";
	"reshape.4297" -> "add.4299";
	"broadcast.4298" -> "add.4299";
	"add.4299" -> "reshape.4302";
	"reshape.4302" -> "transpose.4303";
	"transpose.4303" -> "reshape.4305";
	"reshape.4413" -> "dot.4414";
	"reshape.4305" -> "dot.4414";
	"dot.4414" -> "reshape.4415";
	"reshape.4415" -> "transpose.4416";
	"transpose.4416" -> "reshape.4418";
	"p197.4284" -> "transpose.4285";
	"reshape.4418" -> "dot.4419";
	"transpose.4285" -> "dot.4419";
	"dot.4419" -> "reshape.4420";
	"p196.4282" -> "broadcast.4421";
	"reshape.4420" -> "add.4422";
	"broadcast.4421" -> "add.4422";
	"constant.148" -> "multiply.149";
	"add.147" -> "multiply.149";
	"multiply.149" -> "add.151";
	"constant.150" -> "add.151";
	"add.151" -> "convert.4250";
	"convert.4250" -> "reshape.4254";
	"reshape.4254" -> "concatenate.4256";
	"constant.410" -> "concatenate.4256";
	"concatenate.4256" -> "rng-bit-generator.4257";
	"rng-bit-generator.4257" -> "get-tuple-element.4258";
	"constant.4260" -> "broadcast.4261";
	"get-tuple-element.4258" -> "shift-right-logical.4262";
	"broadcast.4261" -> "shift-right-logical.4262";
	"shift-right-logical.4262" -> "convert.4263";
	"constant.416" -> "broadcast.94";
	"convert.4263" -> "multiply.4269";
	"broadcast.94" -> "multiply.4269";
	"multiply.4269" -> "convert.4272";
	"p3.6" -> "broadcast.4247";
	"convert.4272" -> "compare.4273";
	"broadcast.4247" -> "compare.4273";
	"constant.75" -> "divide.36";
	"p3.6" -> "divide.36";
	"divide.36" -> "broadcast.95";
	"constant.153" -> "broadcast.414";
	"compare.4273" -> "select.37";
	"broadcast.95" -> "select.37";
	"broadcast.414" -> "select.37";
	"add.4422" -> "multiply.4425";
	"select.37" -> "multiply.4425";
	"multiply.4425" -> "add.4426";
	"add.4242" -> "add.4426";
	"add.4426" -> "reshape.4427";
	"constant.240" -> "broadcast.244";
	"constant.235" -> "broadcast.239";
	"reshape.4427" -> "batch-norm-training.4428";
	"broadcast.244" -> "batch-norm-training.4428";
	"broadcast.239" -> "batch-norm-training.4428";
	"batch-norm-training.4428" -> "get-tuple-element.4429";
	"get-tuple-element.4429" -> "reshape.4436";
	"p8.224" -> "broadcast.4439";
	"reshape.4436" -> "multiply.4442";
	"broadcast.4439" -> "multiply.4442";
	"broadcast.4443" -> "add.4444";
	"multiply.4442" -> "add.4444";
	"add.4444" -> "reshape.4497";
	"p208.4495" -> "transpose.4496";
	"reshape.4497" -> "dot.4498";
	"transpose.4496" -> "dot.4498";
	"dot.4498" -> "reshape.4499";
	"p207.4493" -> "broadcast.4500";
	"reshape.4499" -> "add.4501";
	"broadcast.4500" -> "add.4501";
	"add.4501" -> "custom-call.29";
	"custom-call.29" -> "reshape.4511";
	"p206.4486" -> "transpose.4487";
	"reshape.4511" -> "dot.4512";
	"transpose.4487" -> "dot.4512";
	"dot.4512" -> "reshape.4513";
	"p205.4484" -> "broadcast.4514";
	"reshape.4513" -> "add.4515";
	"broadcast.4514" -> "add.4515";
	"constant.152" -> "multiply.153";
	"add.151" -> "multiply.153";
	"multiply.153" -> "add.155";
	"constant.154" -> "add.155";
	"add.155" -> "convert.4452";
	"convert.4452" -> "reshape.4456";
	"reshape.4456" -> "concatenate.4458";
	"constant.418" -> "concatenate.4458";
	"concatenate.4458" -> "rng-bit-generator.4459";
	"rng-bit-generator.4459" -> "get-tuple-element.4460";
	"constant.4462" -> "broadcast.4463";
	"get-tuple-element.4460" -> "shift-right-logical.4464";
	"broadcast.4463" -> "shift-right-logical.4464";
	"shift-right-logical.4464" -> "convert.4465";
	"constant.423" -> "broadcast.96";
	"convert.4465" -> "multiply.4471";
	"broadcast.96" -> "multiply.4471";
	"multiply.4471" -> "convert.4474";
	"p3.6" -> "broadcast.4449";
	"convert.4474" -> "compare.4475";
	"broadcast.4449" -> "compare.4475";
	"constant.77" -> "divide.37";
	"p3.6" -> "divide.37";
	"divide.37" -> "broadcast.97";
	"constant.155" -> "broadcast.425";
	"compare.4475" -> "select.38";
	"broadcast.97" -> "select.38";
	"broadcast.425" -> "select.38";
	"add.4515" -> "multiply.4518";
	"select.38" -> "multiply.4518";
	"multiply.4518" -> "add.4519";
	"add.4444" -> "add.4519";
	"add.4519" -> "reshape.4520";
	"constant.213" -> "broadcast.217";
	"constant.208" -> "broadcast.212";
	"reshape.4520" -> "batch-norm-training.4521";
	"broadcast.217" -> "batch-norm-training.4521";
	"broadcast.212" -> "batch-norm-training.4521";
	"batch-norm-training.4521" -> "get-tuple-element.4522";
	"get-tuple-element.4522" -> "reshape.4529";
	"p7.197" -> "broadcast.4532";
	"reshape.4529" -> "multiply.4535";
	"broadcast.4532" -> "multiply.4535";
	"broadcast.4536" -> "add.4537";
	"multiply.4535" -> "add.4537";
	"add.4537" -> "slice.4539";
	"slice.4539" -> "reshape.4540";
	"p6.194" -> "transpose.195";
	"reshape.4540" -> "dot.4541";
	"transpose.195" -> "dot.4541";
	"p5.193" -> "broadcast.4545";
	"dot.4541" -> "add.4546";
	"broadcast.4545" -> "add.4546";
	"add.4546" -> "tanh.4547";
	"constant.156" -> "multiply.157";
	"add.155" -> "multiply.157";
	"multiply.157" -> "add.159";
	"constant.158" -> "add.159";
	"add.159" -> "convert.166";
	"convert.166" -> "reshape.170";
	"reshape.170" -> "concatenate.172";
	"constant.426" -> "concatenate.172";
	"concatenate.172" -> "rng-bit-generator.173";
	"rng-bit-generator.173" -> "get-tuple-element.174";
	"constant.176" -> "broadcast.177";
	"get-tuple-element.174" -> "shift-right-logical.178";
	"broadcast.177" -> "shift-right-logical.178";
	"shift-right-logical.178" -> "convert.179";
	"constant.431" -> "broadcast.98";
	"convert.179" -> "multiply.185";
	"broadcast.98" -> "multiply.185";
	"multiply.185" -> "convert.188";
	"p3.6" -> "broadcast.163";
	"convert.188" -> "compare.189";
	"broadcast.163" -> "compare.189";
	"constant.79" -> "divide.38";
	"p3.6" -> "divide.38";
	"divide.38" -> "broadcast.99";
	"constant.157" -> "broadcast.435";
	"compare.189" -> "select.39";
	"broadcast.99" -> "select.39";
	"broadcast.435" -> "select.39";
	"tanh.4547" -> "multiply.4548";
	"select.39" -> "multiply.4548";
	"p2.4" -> "transpose.5";
	"multiply.4548" -> "dot.4549";
	"transpose.5" -> "dot.4549";
	"p1.3" -> "broadcast.4553";
	"dot.4549" -> "add.4554";
	"broadcast.4553" -> "add.4554";
	"add.4554" -> "reduce.0";
	"constant.0" -> "reduce.0";
	"SimpleCrossEntropyLossForwardMax.4555" -> "reduce.0";
	"reduce.0" -> "broadcast.0";
	"add.4554" -> "subtract.0";
	"broadcast.0" -> "subtract.0";
	"subtract.0" -> "exponential.0";
	"exponential.0" -> "reduce.1";
	"constant.2" -> "reduce.1";
	"SimpleCrossEntropyLossForwardAdd.4559" -> "reduce.1";
	"reduce.1" -> "log.0";
	"log.0" -> "broadcast.1";
	"subtract.0" -> "subtract.1";
	"broadcast.1" -> "subtract.1";
	"p0.2" -> "broadcast.3";
	"broadcast.3" -> "compare.0";
	"iota.2" -> "compare.0";
	"constant.3" -> "broadcast.6";
	"constant.4" -> "broadcast.7";
	"compare.0" -> "select.0";
	"broadcast.6" -> "select.0";
	"broadcast.7" -> "select.0";
	"subtract.1" -> "multiply.0";
	"select.0" -> "multiply.0";
	"multiply.0" -> "reduce.2";
	"constant.2" -> "reduce.2";
	"SimpleCrossEntropyLossForwardAdd.4563" -> "reduce.2";
	"constant.81" -> "broadcast.100";
	"compare.1" -> "select.1";
	"reduce.2" -> "select.1";
	"broadcast.100" -> "select.1";
	"select.1" -> "reduce.3";
	"constant.2" -> "reduce.3";
	"SimpleCrossEntropyLossForwardAdd.4567" -> "reduce.3";
	"compare.1" -> "convert.0";
	"convert.0" -> "reduce.4";
	"constant.2" -> "reduce.4";
	"SimpleCrossEntropyLossForwardAdd.4571" -> "reduce.4";
	"reduce.3" -> "divide.0";
	"reduce.4" -> "divide.0";
	"divide.0" -> "negate.0";
	"p210.4619" -> "add.4620";
	"negate.0" -> "add.4620";
	"add.4620" -> "tuple.4621";
 }