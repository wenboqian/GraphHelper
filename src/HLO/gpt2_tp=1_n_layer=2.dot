digraph HloModule { 
	"p3.4" [label="p3.4 \n s32[1]"];
	"p4.5" [label="p4.5 \n s32[1]"];
	"p43.44" [label="p43.44 \n f32[768,50257]"];
	"iota.48" [label="iota.48 \n s32[128]"];
	"broadcast.49" [label="broadcast.49 \n s32[1,128]"];
	"p1.2" [label="p1.2 \n s32[1]"];
	"broadcast.50" [label="broadcast.50 \n s32[1,128]"];
	"compare.51" [label="compare.51 \n pred[1,128]"];
	"broadcast.55" [label="broadcast.55 \n pred[4,1,128]"];
	"broadcast.52" [label="broadcast.52 \n s32[4,128]"];
	"p2.3" [label="p2.3 \n s32[4]"];
	"broadcast.53" [label="broadcast.53 \n s32[4,128]"];
	"compare.54" [label="compare.54 \n pred[4,128]"];
	"broadcast.56" [label="broadcast.56 \n pred[4,1,128]"];
	"and.57" [label="and.57 \n pred[4,1,128]"];
	"reshape.266" [label="reshape.266 \n pred[4,128]"];
	"broadcast.267" [label="broadcast.267 \n pred[4,12,1,128]"];
	"reshape.115" [label="reshape.115 \n pred[4,128]"];
	"broadcast.116" [label="broadcast.116 \n pred[4,12,1,128]"];
	"p0.1" [label="p0.1 \n f32[768,1,4]"];
	"reshape.79" [label="reshape.79 \n f32[768,4]"];
	"convert.80" [label="convert.80 \n f32[768,4]"];
	"broadcast.82" [label="broadcast.82 \n f32[4]"];
	"broadcast.84" [label="broadcast.84 \n f32[4]"];
	"p9.10" [label="p9.10 \n f32[768]"];
	"broadcast.87" [label="broadcast.87 \n f32[768,4]"];
	"multiply.88" [label="multiply.88 \n f32[768,4]"];
	"p10.11" [label="p10.11 \n f32[768]"];
	"broadcast.89" [label="broadcast.89 \n f32[768,4]"];
	"add.90" [label="add.90 \n f32[768,4]"];
	"convert.91" [label="convert.91 \n f32[768,4]"];
	"reshape.92" [label="reshape.92 \n f32[768,1,4]"];
	"reshape.93" [label="reshape.93 \n f32[768,4]"];
	"p11.12" [label="p11.12 \n f32[768,768]"];
	"dot.94" [label="dot.94 \n f32[4,768]"];
	"p12.13" [label="p12.13 \n f32[768]"];
	"reshape.95" [label="reshape.95 \n f32[768]"];
	"broadcast.96" [label="broadcast.96 \n f32[4,768]"];
	"add.97" [label="add.97 \n f32[4,768]"];
	"reshape.106" [label="reshape.106 \n f32[1,4,12,64]"];
	"broadcast.110" [label="broadcast.110 \n f32[1,4,12,64]"];
	"divide.111" [label="divide.111 \n f32[1,4,12,64]"];
	"p5.6" [label="p5.6 \n f32[128,4,12,64]"];
	"dot.112" [label="dot.112 \n f32[4,12,1,128]"];
	"broadcast.114" [label="broadcast.114 \n f32[4,12,1,128]"];
	"select.117" [label="select.117 \n f32[4,12,1,128]"];
	"reduce.125" [label="reduce.125 \n f32[4,12,1]"];
	"broadcast.59" [label="broadcast.59 \n s32[4,1]"];
	"broadcast.58" [label="broadcast.58 \n s32[4,1]"];
	"compare.60" [label="compare.60 \n pred[4,1]"];
	"reshape.121" [label="reshape.121 \n pred[4]"];
	"broadcast.122" [label="broadcast.122 \n pred[4,12,1,1]"];
	"p13.14" [label="p13.14 \n f32[768,768]"];
	"dot.98" [label="dot.98 \n f32[4,768]"];
	"p14.15" [label="p14.15 \n f32[768]"];
	"reshape.99" [label="reshape.99 \n f32[768]"];
	"broadcast.100" [label="broadcast.100 \n f32[4,768]"];
	"add.101" [label="add.101 \n f32[4,768]"];
	"reshape.107" [label="reshape.107 \n f32[1,4,12,64]"];
	"dot.118" [label="dot.118 \n f32[4,12,1,1]"];
	"broadcast.120" [label="broadcast.120 \n f32[4,12,1,1]"];
	"select.123" [label="select.123 \n f32[4,12,1,1]"];
	"reduce.131" [label="reduce.131 \n f32[4,12,1]"];
	"maximum.137" [label="maximum.137 \n f32[4,12,1]"];
	"broadcast.138" [label="broadcast.138 \n f32[4,12,1,128]"];
	"subtract.139" [label="subtract.139 \n f32[4,12,1,128]"];
	"exponential.140" [label="exponential.140 \n f32[4,12,1,128]"];
	"convert.148" [label="convert.148 \n f32[4,12,1,128]"];
	"p6.7" [label="p6.7 \n f32[128,4,12,64]"];
	"dot.161" [label="dot.161 \n f32[4,12,1,64]"];
	"broadcast.149" [label="broadcast.149 \n f32[4,12,1,1]"];
	"subtract.150" [label="subtract.150 \n f32[4,12,1,1]"];
	"exponential.151" [label="exponential.151 \n f32[4,12,1,1]"];
	"convert.159" [label="convert.159 \n f32[4,12,1,1]"];
	"p15.16" [label="p15.16 \n f32[768,768]"];
	"dot.102" [label="dot.102 \n f32[4,768]"];
	"p16.17" [label="p16.17 \n f32[768]"];
	"reshape.103" [label="reshape.103 \n f32[768]"];
	"broadcast.104" [label="broadcast.104 \n f32[4,768]"];
	"add.105" [label="add.105 \n f32[4,768]"];
	"reshape.108" [label="reshape.108 \n f32[1,4,12,64]"];
	"dot.162" [label="dot.162 \n f32[4,12,1,64]"];
	"add.163" [label="add.163 \n f32[4,12,1,64]"];
	"reduce.142" [label="reduce.142 \n f32[4,12,1]"];
	"reduce.152" [label="reduce.152 \n f32[4,12,1]"];
	"add.158" [label="add.158 \n f32[4,12,1]"];
	"convert.160" [label="convert.160 \n f32[4,12,1]"];
	"broadcast.164" [label="broadcast.164 \n f32[4,12,1,64]"];
	"divide.165" [label="divide.165 \n f32[4,12,1,64]"];
	"transpose.166" [label="transpose.166 \n f32[1,4,12,64]"];
	"reshape.177" [label="reshape.177 \n f32[4,768]"];
	"p17.18" [label="p17.18 \n f32[768,768]"];
	"dot.178" [label="dot.178 \n f32[4,768]"];
	"p18.19" [label="p18.19 \n f32[768]"];
	"reshape.179" [label="reshape.179 \n f32[768]"];
	"broadcast.180" [label="broadcast.180 \n f32[4,768]"];
	"add.181" [label="add.181 \n f32[4,768]"];
	"transpose.182" [label="transpose.182 \n f32[768,4]"];
	"reshape.183" [label="reshape.183 \n f32[768,1,4]"];
	"add.184" [label="add.184 \n f32[768,1,4]"];
	"reshape.185" [label="reshape.185 \n f32[768,4]"];
	"convert.186" [label="convert.186 \n f32[768,4]"];
	"broadcast.188" [label="broadcast.188 \n f32[4]"];
	"broadcast.190" [label="broadcast.190 \n f32[4]"];
	"p19.20" [label="p19.20 \n f32[768]"];
	"broadcast.193" [label="broadcast.193 \n f32[768,4]"];
	"multiply.194" [label="multiply.194 \n f32[768,4]"];
	"p20.21" [label="p20.21 \n f32[768]"];
	"broadcast.195" [label="broadcast.195 \n f32[768,4]"];
	"add.196" [label="add.196 \n f32[768,4]"];
	"convert.197" [label="convert.197 \n f32[768,4]"];
	"reshape.198" [label="reshape.198 \n f32[768,1,4]"];
	"reshape.199" [label="reshape.199 \n f32[768,4]"];
	"p21.22" [label="p21.22 \n f32[768,3072]"];
	"dot.200" [label="dot.200 \n f32[4,3072]"];
	"p22.23" [label="p22.23 \n f32[3072]"];
	"reshape.201" [label="reshape.201 \n f32[3072]"];
	"broadcast.202" [label="broadcast.202 \n f32[4,3072]"];
	"add.203" [label="add.203 \n f32[4,3072]"];
	"p23.24" [label="p23.24 \n f32[768,3072]"];
	"dot.205" [label="dot.205 \n f32[4,768]"];
	"p24.25" [label="p24.25 \n f32[768]"];
	"reshape.206" [label="reshape.206 \n f32[768]"];
	"broadcast.207" [label="broadcast.207 \n f32[4,768]"];
	"add.208" [label="add.208 \n f32[4,768]"];
	"transpose.209" [label="transpose.209 \n f32[768,4]"];
	"reshape.210" [label="reshape.210 \n f32[768,1,4]"];
	"add.211" [label="add.211 \n f32[768,1,4]"];
	"reshape.230" [label="reshape.230 \n f32[768,4]"];
	"convert.231" [label="convert.231 \n f32[768,4]"];
	"broadcast.233" [label="broadcast.233 \n f32[4]"];
	"broadcast.235" [label="broadcast.235 \n f32[4]"];
	"p25.26" [label="p25.26 \n f32[768]"];
	"broadcast.238" [label="broadcast.238 \n f32[768,4]"];
	"multiply.239" [label="multiply.239 \n f32[768,4]"];
	"p26.27" [label="p26.27 \n f32[768]"];
	"broadcast.240" [label="broadcast.240 \n f32[768,4]"];
	"add.241" [label="add.241 \n f32[768,4]"];
	"convert.242" [label="convert.242 \n f32[768,4]"];
	"reshape.243" [label="reshape.243 \n f32[768,1,4]"];
	"reshape.244" [label="reshape.244 \n f32[768,4]"];
	"p27.28" [label="p27.28 \n f32[768,768]"];
	"dot.245" [label="dot.245 \n f32[4,768]"];
	"p28.29" [label="p28.29 \n f32[768]"];
	"reshape.246" [label="reshape.246 \n f32[768]"];
	"broadcast.247" [label="broadcast.247 \n f32[4,768]"];
	"add.248" [label="add.248 \n f32[4,768]"];
	"reshape.257" [label="reshape.257 \n f32[1,4,12,64]"];
	"broadcast.261" [label="broadcast.261 \n f32[1,4,12,64]"];
	"divide.262" [label="divide.262 \n f32[1,4,12,64]"];
	"p7.8" [label="p7.8 \n f32[128,4,12,64]"];
	"dot.263" [label="dot.263 \n f32[4,12,1,128]"];
	"broadcast.265" [label="broadcast.265 \n f32[4,12,1,128]"];
	"select.268" [label="select.268 \n f32[4,12,1,128]"];
	"reduce.276" [label="reduce.276 \n f32[4,12,1]"];
	"reshape.272" [label="reshape.272 \n pred[4]"];
	"broadcast.273" [label="broadcast.273 \n pred[4,12,1,1]"];
	"p29.30" [label="p29.30 \n f32[768,768]"];
	"dot.249" [label="dot.249 \n f32[4,768]"];
	"p30.31" [label="p30.31 \n f32[768]"];
	"reshape.250" [label="reshape.250 \n f32[768]"];
	"broadcast.251" [label="broadcast.251 \n f32[4,768]"];
	"add.252" [label="add.252 \n f32[4,768]"];
	"reshape.258" [label="reshape.258 \n f32[1,4,12,64]"];
	"dot.269" [label="dot.269 \n f32[4,12,1,1]"];
	"broadcast.271" [label="broadcast.271 \n f32[4,12,1,1]"];
	"select.274" [label="select.274 \n f32[4,12,1,1]"];
	"reduce.282" [label="reduce.282 \n f32[4,12,1]"];
	"maximum.288" [label="maximum.288 \n f32[4,12,1]"];
	"broadcast.289" [label="broadcast.289 \n f32[4,12,1,128]"];
	"subtract.290" [label="subtract.290 \n f32[4,12,1,128]"];
	"exponential.291" [label="exponential.291 \n f32[4,12,1,128]"];
	"convert.299" [label="convert.299 \n f32[4,12,1,128]"];
	"p8.9" [label="p8.9 \n f32[128,4,12,64]"];
	"dot.312" [label="dot.312 \n f32[4,12,1,64]"];
	"broadcast.300" [label="broadcast.300 \n f32[4,12,1,1]"];
	"subtract.301" [label="subtract.301 \n f32[4,12,1,1]"];
	"exponential.302" [label="exponential.302 \n f32[4,12,1,1]"];
	"convert.310" [label="convert.310 \n f32[4,12,1,1]"];
	"p31.32" [label="p31.32 \n f32[768,768]"];
	"dot.253" [label="dot.253 \n f32[4,768]"];
	"p32.33" [label="p32.33 \n f32[768]"];
	"reshape.254" [label="reshape.254 \n f32[768]"];
	"broadcast.255" [label="broadcast.255 \n f32[4,768]"];
	"add.256" [label="add.256 \n f32[4,768]"];
	"reshape.259" [label="reshape.259 \n f32[1,4,12,64]"];
	"dot.313" [label="dot.313 \n f32[4,12,1,64]"];
	"add.314" [label="add.314 \n f32[4,12,1,64]"];
	"reduce.293" [label="reduce.293 \n f32[4,12,1]"];
	"reduce.303" [label="reduce.303 \n f32[4,12,1]"];
	"add.309" [label="add.309 \n f32[4,12,1]"];
	"convert.311" [label="convert.311 \n f32[4,12,1]"];
	"broadcast.315" [label="broadcast.315 \n f32[4,12,1,64]"];
	"divide.316" [label="divide.316 \n f32[4,12,1,64]"];
	"transpose.317" [label="transpose.317 \n f32[1,4,12,64]"];
	"reshape.328" [label="reshape.328 \n f32[4,768]"];
	"p33.34" [label="p33.34 \n f32[768,768]"];
	"dot.329" [label="dot.329 \n f32[4,768]"];
	"p34.35" [label="p34.35 \n f32[768]"];
	"reshape.330" [label="reshape.330 \n f32[768]"];
	"broadcast.331" [label="broadcast.331 \n f32[4,768]"];
	"add.332" [label="add.332 \n f32[4,768]"];
	"transpose.333" [label="transpose.333 \n f32[768,4]"];
	"reshape.334" [label="reshape.334 \n f32[768,1,4]"];
	"add.335" [label="add.335 \n f32[768,1,4]"];
	"reshape.336" [label="reshape.336 \n f32[768,4]"];
	"convert.337" [label="convert.337 \n f32[768,4]"];
	"broadcast.339" [label="broadcast.339 \n f32[4]"];
	"broadcast.341" [label="broadcast.341 \n f32[4]"];
	"p35.36" [label="p35.36 \n f32[768]"];
	"broadcast.344" [label="broadcast.344 \n f32[768,4]"];
	"multiply.345" [label="multiply.345 \n f32[768,4]"];
	"p36.37" [label="p36.37 \n f32[768]"];
	"broadcast.346" [label="broadcast.346 \n f32[768,4]"];
	"add.347" [label="add.347 \n f32[768,4]"];
	"convert.348" [label="convert.348 \n f32[768,4]"];
	"reshape.349" [label="reshape.349 \n f32[768,1,4]"];
	"reshape.350" [label="reshape.350 \n f32[768,4]"];
	"p37.38" [label="p37.38 \n f32[768,3072]"];
	"dot.351" [label="dot.351 \n f32[4,3072]"];
	"p38.39" [label="p38.39 \n f32[3072]"];
	"reshape.352" [label="reshape.352 \n f32[3072]"];
	"broadcast.353" [label="broadcast.353 \n f32[4,3072]"];
	"add.354" [label="add.354 \n f32[4,3072]"];
	"p39.40" [label="p39.40 \n f32[768,3072]"];
	"dot.356" [label="dot.356 \n f32[4,768]"];
	"p40.41" [label="p40.41 \n f32[768]"];
	"reshape.357" [label="reshape.357 \n f32[768]"];
	"broadcast.358" [label="broadcast.358 \n f32[4,768]"];
	"add.359" [label="add.359 \n f32[4,768]"];
	"transpose.360" [label="transpose.360 \n f32[768,4]"];
	"reshape.361" [label="reshape.361 \n f32[768,1,4]"];
	"add.362" [label="add.362 \n f32[768,1,4]"];
	"reshape.363" [label="reshape.363 \n f32[768,4]"];
	"convert.364" [label="convert.364 \n f32[768,4]"];
	"broadcast.366" [label="broadcast.366 \n f32[4]"];
	"broadcast.368" [label="broadcast.368 \n f32[4]"];
	"p41.42" [label="p41.42 \n f32[768]"];
	"broadcast.371" [label="broadcast.371 \n f32[768,4]"];
	"multiply.372" [label="multiply.372 \n f32[768,4]"];
	"p42.43" [label="p42.43 \n f32[768]"];
	"broadcast.373" [label="broadcast.373 \n f32[768,4]"];
	"add.374" [label="add.374 \n f32[768,4]"];
	"convert.375" [label="convert.375 \n f32[768,4]"];
	"reshape.376" [label="reshape.376 \n f32[768,1,4]"];
	"reshape.377" [label="reshape.377 \n f32[768,4]"];
	"dot.378" [label="dot.378 \n f32[50257,4]"];
	"reshape.379" [label="reshape.379 \n f32[50257,1,4]"];
	"scatter.167" [label="scatter.167 \n f32[128,4,12,64]"];
	"scatter.172" [label="scatter.172 \n f32[128,4,12,64]"];
	"scatter.318" [label="scatter.318 \n f32[128,4,12,64]"];
	"scatter.323" [label="scatter.323 \n f32[128,4,12,64]"];
	"tuple.380" [label="tuple.380 \n (f32[50257,1,4]"]; 
 	"p43.44" -> "custom-call.47";
	"iota.48" -> "broadcast.49";
	"p1.2" -> "broadcast.50";
	"broadcast.49" -> "compare.51";
	"broadcast.50" -> "compare.51";
	"compare.51" -> "broadcast.55";
	"iota.48" -> "broadcast.52";
	"p2.3" -> "broadcast.53";
	"broadcast.52" -> "compare.54";
	"broadcast.53" -> "compare.54";
	"compare.54" -> "broadcast.56";
	"broadcast.55" -> "and.57";
	"broadcast.56" -> "and.57";
	"and.57" -> "reshape.266";
	"reshape.266" -> "broadcast.267";
	"and.57" -> "reshape.115";
	"reshape.115" -> "broadcast.116";
	"p0.1" -> "reshape.79";
	"reshape.79" -> "convert.80";
	"constant.81" -> "broadcast.82";
	"constant.83" -> "broadcast.84";
	"convert.80" -> "batch-norm-training.85";
	"broadcast.82" -> "batch-norm-training.85";
	"broadcast.84" -> "batch-norm-training.85";
	"batch-norm-training.85" -> "get-tuple-element.86";
	"p9.10" -> "custom-call.63";
	"custom-call.63" -> "broadcast.87";
	"get-tuple-element.86" -> "multiply.88";
	"broadcast.87" -> "multiply.88";
	"p10.11" -> "custom-call.64";
	"custom-call.64" -> "broadcast.89";
	"multiply.88" -> "add.90";
	"broadcast.89" -> "add.90";
	"add.90" -> "convert.91";
	"convert.91" -> "reshape.92";
	"reshape.92" -> "reshape.93";
	"p11.12" -> "custom-call.65";
	"reshape.93" -> "dot.94";
	"custom-call.65" -> "dot.94";
	"p12.13" -> "custom-call.66";
	"custom-call.66" -> "reshape.95";
	"reshape.95" -> "broadcast.96";
	"dot.94" -> "add.97";
	"broadcast.96" -> "add.97";
	"add.97" -> "reshape.106";
	"constant.109" -> "broadcast.110";
	"reshape.106" -> "divide.111";
	"broadcast.110" -> "divide.111";
	"p5.6" -> "custom-call.61";
	"divide.111" -> "dot.112";
	"custom-call.61" -> "dot.112";
	"constant.113" -> "broadcast.114";
	"broadcast.116" -> "select.117";
	"dot.112" -> "select.117";
	"broadcast.114" -> "select.117";
	"select.117" -> "reduce.125";
	"constant.124" -> "reduce.125";
	"reduce.125.MaxFunc.130" -> "reduce.125";
	"p1.2" -> "broadcast.59";
	"p2.3" -> "broadcast.58";
	"broadcast.59" -> "compare.60";
	"broadcast.58" -> "compare.60";
	"compare.60" -> "reshape.121";
	"reshape.121" -> "broadcast.122";
	"p13.14" -> "custom-call.67";
	"reshape.93" -> "dot.98";
	"custom-call.67" -> "dot.98";
	"p14.15" -> "custom-call.68";
	"custom-call.68" -> "reshape.99";
	"reshape.99" -> "broadcast.100";
	"dot.98" -> "add.101";
	"broadcast.100" -> "add.101";
	"add.101" -> "reshape.107";
	"divide.111" -> "dot.118";
	"reshape.107" -> "dot.118";
	"constant.119" -> "broadcast.120";
	"broadcast.122" -> "select.123";
	"dot.118" -> "select.123";
	"broadcast.120" -> "select.123";
	"select.123" -> "reduce.131";
	"constant.124" -> "reduce.131";
	"reduce.131.MaxFunc.136" -> "reduce.131";
	"reduce.125" -> "maximum.137";
	"reduce.131" -> "maximum.137";
	"maximum.137" -> "broadcast.138";
	"select.117" -> "subtract.139";
	"broadcast.138" -> "subtract.139";
	"subtract.139" -> "exponential.140";
	"exponential.140" -> "convert.148";
	"p6.7" -> "custom-call.62";
	"convert.148" -> "dot.161";
	"custom-call.62" -> "dot.161";
	"maximum.137" -> "broadcast.149";
	"select.123" -> "subtract.150";
	"broadcast.149" -> "subtract.150";
	"subtract.150" -> "exponential.151";
	"exponential.151" -> "convert.159";
	"p15.16" -> "custom-call.69";
	"reshape.93" -> "dot.102";
	"custom-call.69" -> "dot.102";
	"p16.17" -> "custom-call.70";
	"custom-call.70" -> "reshape.103";
	"reshape.103" -> "broadcast.104";
	"dot.102" -> "add.105";
	"broadcast.104" -> "add.105";
	"add.105" -> "reshape.108";
	"convert.159" -> "dot.162";
	"reshape.108" -> "dot.162";
	"dot.161" -> "add.163";
	"dot.162" -> "add.163";
	"exponential.140" -> "reduce.142";
	"constant.141" -> "reduce.142";
	"reduce.142.AddFunc.147" -> "reduce.142";
	"exponential.151" -> "reduce.152";
	"constant.141" -> "reduce.152";
	"reduce.152.AddFunc.157" -> "reduce.152";
	"reduce.142" -> "add.158";
	"reduce.152" -> "add.158";
	"add.158" -> "convert.160";
	"convert.160" -> "broadcast.164";
	"add.163" -> "divide.165";
	"broadcast.164" -> "divide.165";
	"divide.165" -> "transpose.166";
	"transpose.166" -> "reshape.177";
	"p17.18" -> "custom-call.71";
	"reshape.177" -> "dot.178";
	"custom-call.71" -> "dot.178";
	"p18.19" -> "custom-call.72";
	"custom-call.72" -> "reshape.179";
	"reshape.179" -> "broadcast.180";
	"dot.178" -> "add.181";
	"broadcast.180" -> "add.181";
	"add.181" -> "transpose.182";
	"transpose.182" -> "reshape.183";
	"reshape.183" -> "add.184";
	"p0.1" -> "add.184";
	"add.184" -> "reshape.185";
	"reshape.185" -> "convert.186";
	"constant.187" -> "broadcast.188";
	"constant.189" -> "broadcast.190";
	"convert.186" -> "batch-norm-training.191";
	"broadcast.188" -> "batch-norm-training.191";
	"broadcast.190" -> "batch-norm-training.191";
	"batch-norm-training.191" -> "get-tuple-element.192";
	"p19.20" -> "custom-call.73";
	"custom-call.73" -> "broadcast.193";
	"get-tuple-element.192" -> "multiply.194";
	"broadcast.193" -> "multiply.194";
	"p20.21" -> "custom-call.74";
	"custom-call.74" -> "broadcast.195";
	"multiply.194" -> "add.196";
	"broadcast.195" -> "add.196";
	"add.196" -> "convert.197";
	"convert.197" -> "reshape.198";
	"reshape.198" -> "reshape.199";
	"p21.22" -> "custom-call.75";
	"reshape.199" -> "dot.200";
	"custom-call.75" -> "dot.200";
	"p22.23" -> "custom-call.76";
	"custom-call.76" -> "reshape.201";
	"reshape.201" -> "broadcast.202";
	"dot.200" -> "add.203";
	"broadcast.202" -> "add.203";
	"add.203" -> "custom-call.204";
	"p23.24" -> "custom-call.77";
	"custom-call.204" -> "dot.205";
	"custom-call.77" -> "dot.205";
	"p24.25" -> "custom-call.78";
	"custom-call.78" -> "reshape.206";
	"reshape.206" -> "broadcast.207";
	"dot.205" -> "add.208";
	"broadcast.207" -> "add.208";
	"add.208" -> "transpose.209";
	"transpose.209" -> "reshape.210";
	"reshape.210" -> "add.211";
	"add.184" -> "add.211";
	"add.211" -> "reshape.230";
	"reshape.230" -> "convert.231";
	"constant.232" -> "broadcast.233";
	"constant.234" -> "broadcast.235";
	"convert.231" -> "batch-norm-training.236";
	"broadcast.233" -> "batch-norm-training.236";
	"broadcast.235" -> "batch-norm-training.236";
	"batch-norm-training.236" -> "get-tuple-element.237";
	"p25.26" -> "custom-call.214";
	"custom-call.214" -> "broadcast.238";
	"get-tuple-element.237" -> "multiply.239";
	"broadcast.238" -> "multiply.239";
	"p26.27" -> "custom-call.215";
	"custom-call.215" -> "broadcast.240";
	"multiply.239" -> "add.241";
	"broadcast.240" -> "add.241";
	"add.241" -> "convert.242";
	"convert.242" -> "reshape.243";
	"reshape.243" -> "reshape.244";
	"p27.28" -> "custom-call.216";
	"reshape.244" -> "dot.245";
	"custom-call.216" -> "dot.245";
	"p28.29" -> "custom-call.217";
	"custom-call.217" -> "reshape.246";
	"reshape.246" -> "broadcast.247";
	"dot.245" -> "add.248";
	"broadcast.247" -> "add.248";
	"add.248" -> "reshape.257";
	"constant.260" -> "broadcast.261";
	"reshape.257" -> "divide.262";
	"broadcast.261" -> "divide.262";
	"p7.8" -> "custom-call.212";
	"divide.262" -> "dot.263";
	"custom-call.212" -> "dot.263";
	"constant.264" -> "broadcast.265";
	"broadcast.267" -> "select.268";
	"dot.263" -> "select.268";
	"broadcast.265" -> "select.268";
	"select.268" -> "reduce.276";
	"constant.275" -> "reduce.276";
	"reduce.276.MaxFunc.281" -> "reduce.276";
	"compare.60" -> "reshape.272";
	"reshape.272" -> "broadcast.273";
	"p29.30" -> "custom-call.218";
	"reshape.244" -> "dot.249";
	"custom-call.218" -> "dot.249";
	"p30.31" -> "custom-call.219";
	"custom-call.219" -> "reshape.250";
	"reshape.250" -> "broadcast.251";
	"dot.249" -> "add.252";
	"broadcast.251" -> "add.252";
	"add.252" -> "reshape.258";
	"divide.262" -> "dot.269";
	"reshape.258" -> "dot.269";
	"constant.270" -> "broadcast.271";
	"broadcast.273" -> "select.274";
	"dot.269" -> "select.274";
	"broadcast.271" -> "select.274";
	"select.274" -> "reduce.282";
	"constant.275" -> "reduce.282";
	"reduce.282.MaxFunc.287" -> "reduce.282";
	"reduce.276" -> "maximum.288";
	"reduce.282" -> "maximum.288";
	"maximum.288" -> "broadcast.289";
	"select.268" -> "subtract.290";
	"broadcast.289" -> "subtract.290";
	"subtract.290" -> "exponential.291";
	"exponential.291" -> "convert.299";
	"p8.9" -> "custom-call.213";
	"convert.299" -> "dot.312";
	"custom-call.213" -> "dot.312";
	"maximum.288" -> "broadcast.300";
	"select.274" -> "subtract.301";
	"broadcast.300" -> "subtract.301";
	"subtract.301" -> "exponential.302";
	"exponential.302" -> "convert.310";
	"p31.32" -> "custom-call.220";
	"reshape.244" -> "dot.253";
	"custom-call.220" -> "dot.253";
	"p32.33" -> "custom-call.221";
	"custom-call.221" -> "reshape.254";
	"reshape.254" -> "broadcast.255";
	"dot.253" -> "add.256";
	"broadcast.255" -> "add.256";
	"add.256" -> "reshape.259";
	"convert.310" -> "dot.313";
	"reshape.259" -> "dot.313";
	"dot.312" -> "add.314";
	"dot.313" -> "add.314";
	"exponential.291" -> "reduce.293";
	"constant.292" -> "reduce.293";
	"reduce.293.AddFunc.298" -> "reduce.293";
	"exponential.302" -> "reduce.303";
	"constant.292" -> "reduce.303";
	"reduce.303.AddFunc.308" -> "reduce.303";
	"reduce.293" -> "add.309";
	"reduce.303" -> "add.309";
	"add.309" -> "convert.311";
	"convert.311" -> "broadcast.315";
	"add.314" -> "divide.316";
	"broadcast.315" -> "divide.316";
	"divide.316" -> "transpose.317";
	"transpose.317" -> "reshape.328";
	"p33.34" -> "custom-call.222";
	"reshape.328" -> "dot.329";
	"custom-call.222" -> "dot.329";
	"p34.35" -> "custom-call.223";
	"custom-call.223" -> "reshape.330";
	"reshape.330" -> "broadcast.331";
	"dot.329" -> "add.332";
	"broadcast.331" -> "add.332";
	"add.332" -> "transpose.333";
	"transpose.333" -> "reshape.334";
	"reshape.334" -> "add.335";
	"add.211" -> "add.335";
	"add.335" -> "reshape.336";
	"reshape.336" -> "convert.337";
	"constant.338" -> "broadcast.339";
	"constant.340" -> "broadcast.341";
	"convert.337" -> "batch-norm-training.342";
	"broadcast.339" -> "batch-norm-training.342";
	"broadcast.341" -> "batch-norm-training.342";
	"batch-norm-training.342" -> "get-tuple-element.343";
	"p35.36" -> "custom-call.224";
	"custom-call.224" -> "broadcast.344";
	"get-tuple-element.343" -> "multiply.345";
	"broadcast.344" -> "multiply.345";
	"p36.37" -> "custom-call.225";
	"custom-call.225" -> "broadcast.346";
	"multiply.345" -> "add.347";
	"broadcast.346" -> "add.347";
	"add.347" -> "convert.348";
	"convert.348" -> "reshape.349";
	"reshape.349" -> "reshape.350";
	"p37.38" -> "custom-call.226";
	"reshape.350" -> "dot.351";
	"custom-call.226" -> "dot.351";
	"p38.39" -> "custom-call.227";
	"custom-call.227" -> "reshape.352";
	"reshape.352" -> "broadcast.353";
	"dot.351" -> "add.354";
	"broadcast.353" -> "add.354";
	"add.354" -> "custom-call.355";
	"p39.40" -> "custom-call.228";
	"custom-call.355" -> "dot.356";
	"custom-call.228" -> "dot.356";
	"p40.41" -> "custom-call.229";
	"custom-call.229" -> "reshape.357";
	"reshape.357" -> "broadcast.358";
	"dot.356" -> "add.359";
	"broadcast.358" -> "add.359";
	"add.359" -> "transpose.360";
	"transpose.360" -> "reshape.361";
	"reshape.361" -> "add.362";
	"add.335" -> "add.362";
	"add.362" -> "reshape.363";
	"reshape.363" -> "convert.364";
	"constant.365" -> "broadcast.366";
	"constant.367" -> "broadcast.368";
	"convert.364" -> "batch-norm-training.369";
	"broadcast.366" -> "batch-norm-training.369";
	"broadcast.368" -> "batch-norm-training.369";
	"batch-norm-training.369" -> "get-tuple-element.370";
	"p41.42" -> "custom-call.45";
	"custom-call.45" -> "broadcast.371";
	"get-tuple-element.370" -> "multiply.372";
	"broadcast.371" -> "multiply.372";
	"p42.43" -> "custom-call.46";
	"custom-call.46" -> "broadcast.373";
	"multiply.372" -> "add.374";
	"broadcast.373" -> "add.374";
	"add.374" -> "convert.375";
	"convert.375" -> "reshape.376";
	"reshape.376" -> "reshape.377";
	"custom-call.47" -> "dot.378";
	"reshape.377" -> "dot.378";
	"dot.378" -> "reshape.379";
	"custom-call.61" -> "scatter.167";
	"p1.2" -> "scatter.167";
	"reshape.107" -> "scatter.167";
	"scatter.167.AssignFunc.171" -> "scatter.167";
	"custom-call.62" -> "scatter.172";
	"p1.2" -> "scatter.172";
	"reshape.108" -> "scatter.172";
	"scatter.172.AssignFunc.176" -> "scatter.172";
	"custom-call.212" -> "scatter.318";
	"p1.2" -> "scatter.318";
	"reshape.258" -> "scatter.318";
	"scatter.318.AssignFunc.322" -> "scatter.318";
	"custom-call.213" -> "scatter.323";
	"p1.2" -> "scatter.323";
	"reshape.259" -> "scatter.323";
	"scatter.323.AssignFunc.327" -> "scatter.323";
	"reshape.379" -> "tuple.380";
	"scatter.167" -> "tuple.380";
	"scatter.172" -> "tuple.380";
	"scatter.318" -> "tuple.380";
	"scatter.323" -> "tuple.380";
	"reshape.244" -> "tuple.380";
	"add.248" -> "tuple.380";
	"add.252" -> "tuple.380";
	"add.256" -> "tuple.380";
	"reshape.258" -> "tuple.380";
	"reshape.259" -> "tuple.380";
	"reshape.257" -> "tuple.380";
	"constant.260" -> "tuple.380";
	"broadcast.261" -> "tuple.380";
	"reshape.258" -> "tuple.380";
	"dot.269" -> "tuple.380";
	"constant.270" -> "tuple.380";
	"broadcast.271" -> "tuple.380";
	"broadcast.267" -> "tuple.380";
	"select.274" -> "tuple.380";
	"broadcast.273" -> "tuple.380";
	"select.268" -> "tuple.380";
	"select.274" -> "tuple.380";
	"constant.275" -> "tuple.380";
	"reduce.276" -> "tuple.380";
	"reduce.282" -> "tuple.380";
	"maximum.288" -> "tuple.380";
	"broadcast.289" -> "tuple.380";
	"subtract.290" -> "tuple.380";
	"exponential.291" -> "tuple.380";
	"constant.292" -> "tuple.380";
	"reduce.293" -> "tuple.380";
	"convert.299" -> "tuple.380";
	"broadcast.300" -> "tuple.380";
	"subtract.301" -> "tuple.380";
	"exponential.302" -> "tuple.380";
	"reduce.303" -> "tuple.380";
	"add.309" -> "tuple.380";
	"convert.310" -> "tuple.380";
	"convert.311" -> "tuple.380";
	"custom-call.213" -> "tuple.380";
	"reshape.259" -> "tuple.380";
	"dot.312" -> "tuple.380";
	"dot.313" -> "tuple.380";
	"add.314" -> "tuple.380";
	"broadcast.315" -> "tuple.380";
	"divide.316" -> "tuple.380";
	"transpose.317" -> "tuple.380";
	"scatter.323" -> "tuple.380";
	"reshape.328" -> "tuple.380";
	"add.332" -> "tuple.380";
	"reshape.334" -> "tuple.380";
	"reshape.334" -> "tuple.380";
	"reshape.334" -> "tuple.380";
 }