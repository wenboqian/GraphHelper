digraph HloModule {
	"p11.79" [label="p11.79 \n f32[3,4]"];
	"p10.78" [label="p10.78 \n f32[] parameter(10), frontend_attributes="];
	"broadcast.80" [label="broadcast.80 \n f32[3,4]"];
	"multiply.81" [label="multiply.81 \n f32[3,4]"];
	"p9.77" [label="p9.77 \n f32[] parameter(9), frontend_attributes="];
	"broadcast.82" [label="broadcast.82 \n f32[3,4]"];
	"multiply.84" [label="multiply.84 \n f32[3,4]"];
	"subtract.85" [label="subtract.85 \n f32[3,4]"];
	"p8.63" [label="p8.63 \n f32[] parameter(8), frontend_attributes="];
	"multiply.0" [label="multiply.0 \n f32[] multiply(f32[] %constant.3, f32[] %p8.63), metadata="];
	"broadcast.2" [label="broadcast.2 \n f32[3,4]"];
	"p4.7" [label="p4.7 \n f32[1,3]"];
	"reshape.17" [label="reshape.17 \n f32[3]"];
	"broadcast.29" [label="broadcast.29 \n f32[3,4]"];
	"p5.28" [label="p5.28 \n f32[4]"];
	"broadcast.30" [label="broadcast.30 \n f32[3,4]"];
	"multiply.8" [label="multiply.8 \n f32[3,4]"];
	"p7.57" [label="p7.57 \n f32[] parameter(7), frontend_attributes="];
	"broadcast.61" [label="broadcast.61 \n f32[3,4]"];
	"multiply.62" [label="multiply.62 \n f32[3,4]"];
	"add.71" [label="add.71 \n f32[3,4]"];
	"p6.40" [label="p6.40 \n f32[] parameter(6), frontend_attributes="];
	"multiply.1" [label="multiply.1 \n f32[] multiply(f32[] %constant.8, f32[] %p6.40), metadata="];
	"broadcast.5" [label="broadcast.5 \n f32[3,4]"];
	"multiply.48" [label="multiply.48 \n f32[3,4]"];
	"p3.6" [label="p3.6 \n f32[] parameter(3), frontend_attributes="];
	"broadcast.49" [label="broadcast.49 \n f32[3,4]"];
	"multiply.50" [label="multiply.50 \n f32[3,4]"];
	"add.51" [label="add.51 \n f32[3,4]"];
	"sqrt.52" [label="sqrt.52 \n f32[3,4]"];
	"p2.5" [label="p2.5 \n f32[] parameter(2), frontend_attributes="];
	"broadcast.53" [label="broadcast.53 \n f32[3,4]"];
	"divide.54" [label="divide.54 \n f32[3,4]"];
	"p1.3" [label="p1.3 \n f32[] parameter(1), frontend_attributes="];
	"broadcast.55" [label="broadcast.55 \n f32[3,4]"];
	"add.56" [label="add.56 \n f32[3,4]"];
	"divide.86" [label="divide.86 \n f32[3,4]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"broadcast.87" [label="broadcast.87 \n f32[3,4]"];
	"multiply.88" [label="multiply.88 \n f32[3,4]"];
	"add.89" [label="add.89 \n f32[3,4]"];
	"p12.134" [label="p12.134 \n f32[3]"];
	"broadcast.135" [label="broadcast.135 \n f32[3]"];
	"multiply.136" [label="multiply.136 \n f32[3]"];
	"broadcast.137" [label="broadcast.137 \n f32[3]"];
	"multiply.139" [label="multiply.139 \n f32[3]"];
	"subtract.140" [label="subtract.140 \n f32[3]"];
	"multiply.2" [label="multiply.2 \n f32[] multiply(f32[] %constant.9, f32[] %p8.63), metadata="];
	"broadcast.8" [label="broadcast.8 \n f32[3]"];
	"broadcast.119" [label="broadcast.119 \n f32[3]"];
	"multiply.120" [label="multiply.120 \n f32[3]"];
	"add.128" [label="add.128 \n f32[3]"];
	"multiply.5" [label="multiply.5 \n f32[] multiply(f32[] %constant.10, f32[] %p6.40), metadata="];
	"broadcast.12" [label="broadcast.12 \n f32[3]"];
	"multiply.107" [label="multiply.107 \n f32[3]"];
	"broadcast.108" [label="broadcast.108 \n f32[3]"];
	"multiply.109" [label="multiply.109 \n f32[3]"];
	"add.110" [label="add.110 \n f32[3]"];
	"sqrt.111" [label="sqrt.111 \n f32[3]"];
	"broadcast.112" [label="broadcast.112 \n f32[3]"];
	"divide.113" [label="divide.113 \n f32[3]"];
	"broadcast.114" [label="broadcast.114 \n f32[3]"];
	"add.115" [label="add.115 \n f32[3]"];
	"divide.141" [label="divide.141 \n f32[3]"];
	"broadcast.142" [label="broadcast.142 \n f32[3]"];
	"multiply.143" [label="multiply.143 \n f32[3]"];
	"add.144" [label="add.144 \n f32[3]"];
	"broadcast.217" [label="broadcast.217 \n f32[1,3]"];
	"multiply.218" [label="multiply.218 \n f32[1,3]"];
	"broadcast.219" [label="broadcast.219 \n f32[1,3]"];
	"multiply.221" [label="multiply.221 \n f32[1,3]"];
	"subtract.222" [label="subtract.222 \n f32[1,3]"];
	"multiply.16" [label="multiply.16 \n f32[] multiply(f32[] %constant.24, f32[] %p8.63), metadata="];
	"broadcast.15" [label="broadcast.15 \n f32[1,3]"];
	"broadcast.50" [label="broadcast.50 \n f32[3,4]"];
	"multiply.19" [label="multiply.19 \n f32[3,4]"];
	"add.171" [label="add.171 \n f32[3]"];
	"reshape.55" [label="reshape.55 \n f32[1,3]"];
	"broadcast.202" [label="broadcast.202 \n f32[1,3]"];
	"multiply.203" [label="multiply.203 \n f32[1,3]"];
	"add.211" [label="add.211 \n f32[1,3]"];
	"multiply.17" [label="multiply.17 \n f32[] multiply(f32[] %constant.25, f32[] %p6.40), metadata="];
	"broadcast.18" [label="broadcast.18 \n f32[1,3]"];
	"multiply.190" [label="multiply.190 \n f32[1,3]"];
	"broadcast.191" [label="broadcast.191 \n f32[1,3]"];
	"multiply.192" [label="multiply.192 \n f32[1,3]"];
	"add.193" [label="add.193 \n f32[1,3]"];
	"sqrt.194" [label="sqrt.194 \n f32[1,3]"];
	"broadcast.195" [label="broadcast.195 \n f32[1,3]"];
	"divide.196" [label="divide.196 \n f32[1,3]"];
	"broadcast.197" [label="broadcast.197 \n f32[1,3]"];
	"add.198" [label="add.198 \n f32[1,3]"];
	"divide.223" [label="divide.223 \n f32[1,3]"];
	"broadcast.224" [label="broadcast.224 \n f32[1,3]"];
	"multiply.225" [label="multiply.225 \n f32[1,3]"];
	"add.226" [label="add.226 \n f32[1,3]"];
	"p13.262" [label="p13.262 \n f32[1]"];
	"reshape.63" [label="reshape.63 \n f32[1]"];
	"multiply.264" [label="multiply.264 \n f32[1]"];
	"reshape.64" [label="reshape.64 \n f32[1]"];
	"multiply.267" [label="multiply.267 \n f32[1]"];
	"subtract.268" [label="subtract.268 \n f32[1]"];
	"multiply.13" [label="multiply.13 \n f32[] multiply(f32[] %constant.26, f32[] %p8.63), metadata="];
	"reshape.137" [label="reshape.137 \n f32[1]"];
	"constant.6" [label="constant.6 \n f32[1]"];
	"reshape.70" [label="reshape.70 \n f32[1]"];
	"multiply.252" [label="multiply.252 \n f32[1]"];
	"add.258" [label="add.258 \n f32[1]"];
	"multiply.12" [label="multiply.12 \n f32[] multiply(f32[] %constant.27, f32[] %p6.40), metadata="];
	"reshape.134" [label="reshape.134 \n f32[1]"];
	"multiply.241" [label="multiply.241 \n f32[1]"];
	"reshape.74" [label="reshape.74 \n f32[1]"];
	"multiply.243" [label="multiply.243 \n f32[1]"];
	"add.244" [label="add.244 \n f32[1]"];
	"sqrt.245" [label="sqrt.245 \n f32[1]"];
	"reshape.76" [label="reshape.76 \n f32[1]"];
	"divide.247" [label="divide.247 \n f32[1]"];
	"reshape.77" [label="reshape.77 \n f32[1]"];
	"add.249" [label="add.249 \n f32[1]"];
	"divide.269" [label="divide.269 \n f32[1]"];
	"reshape.78" [label="reshape.78 \n f32[1]"];
	"multiply.271" [label="multiply.271 \n f32[1]"];
	"add.272" [label="add.272 \n f32[1]"];
	"reshape.81" [label="reshape.81 \n f32[3]"];
	"multiply.11" [label="multiply.11 \n f32[3]"];
	"reduce.1" [label="reduce.1 \n f32[] reduce(f32[3]"];
	"reshape.287" [label="reshape.287 \n f32[1]"];
	"add.288" [label="add.288 \n f32[1]"];
	"reshape.140" [label="reshape.140 \n f32[] reshape(f32[1]"];
	"p14.306" [label="p14.306 \n f32[] parameter(14), frontend_attributes="];
	"subtract.308" [label="subtract.308 \n f32[] subtract(f32[] %reshape.140, f32[] %p14.306), metadata="];
	"tuple.309" [label="tuple.309 \n (f32[3,4]"]; 
 	"p10.78" -> "broadcast.80";
	"p11.79" -> "multiply.81";
	"broadcast.80" -> "multiply.81";
	"p9.77" -> "broadcast.82";
	"multiply.81" -> "multiply.84";
	"broadcast.82" -> "multiply.84";
	"p11.79" -> "subtract.85";
	"multiply.84" -> "subtract.85";
	"constant.3" -> "multiply.0";
	"p8.63" -> "multiply.0";
	"multiply.0" -> "broadcast.2";
	"p4.7" -> "custom-call.8";
	"custom-call.8" -> "reshape.17";
	"reshape.17" -> "broadcast.29";
	"p5.28" -> "broadcast.30";
	"broadcast.29" -> "multiply.8";
	"broadcast.30" -> "multiply.8";
	"multiply.8" -> "custom-call.9";
	"p7.57" -> "broadcast.61";
	"custom-call.9" -> "multiply.62";
	"broadcast.61" -> "multiply.62";
	"broadcast.2" -> "add.71";
	"multiply.62" -> "add.71";
	"constant.8" -> "multiply.1";
	"p6.40" -> "multiply.1";
	"multiply.1" -> "broadcast.5";
	"custom-call.9" -> "multiply.48";
	"custom-call.9" -> "multiply.48";
	"p3.6" -> "broadcast.49";
	"multiply.48" -> "multiply.50";
	"broadcast.49" -> "multiply.50";
	"broadcast.5" -> "add.51";
	"multiply.50" -> "add.51";
	"add.51" -> "sqrt.52";
	"p2.5" -> "broadcast.53";
	"sqrt.52" -> "divide.54";
	"broadcast.53" -> "divide.54";
	"p1.3" -> "broadcast.55";
	"divide.54" -> "add.56";
	"broadcast.55" -> "add.56";
	"add.71" -> "divide.86";
	"add.56" -> "divide.86";
	"p0.1" -> "broadcast.87";
	"divide.86" -> "multiply.88";
	"broadcast.87" -> "multiply.88";
	"subtract.85" -> "add.89";
	"multiply.88" -> "add.89";
	"p10.78" -> "broadcast.135";
	"p12.134" -> "multiply.136";
	"broadcast.135" -> "multiply.136";
	"p9.77" -> "broadcast.137";
	"multiply.136" -> "multiply.139";
	"broadcast.137" -> "multiply.139";
	"p12.134" -> "subtract.140";
	"multiply.139" -> "subtract.140";
	"constant.9" -> "multiply.2";
	"p8.63" -> "multiply.2";
	"multiply.2" -> "broadcast.8";
	"reshape.17" -> "custom-call.11";
	"p7.57" -> "broadcast.119";
	"custom-call.11" -> "multiply.120";
	"broadcast.119" -> "multiply.120";
	"broadcast.8" -> "add.128";
	"multiply.120" -> "add.128";
	"constant.10" -> "multiply.5";
	"p6.40" -> "multiply.5";
	"multiply.5" -> "broadcast.12";
	"custom-call.11" -> "multiply.107";
	"custom-call.11" -> "multiply.107";
	"p3.6" -> "broadcast.108";
	"multiply.107" -> "multiply.109";
	"broadcast.108" -> "multiply.109";
	"broadcast.12" -> "add.110";
	"multiply.109" -> "add.110";
	"add.110" -> "sqrt.111";
	"p2.5" -> "broadcast.112";
	"sqrt.111" -> "divide.113";
	"broadcast.112" -> "divide.113";
	"p1.3" -> "broadcast.114";
	"divide.113" -> "add.115";
	"broadcast.114" -> "add.115";
	"add.128" -> "divide.141";
	"add.115" -> "divide.141";
	"p0.1" -> "broadcast.142";
	"divide.141" -> "multiply.143";
	"broadcast.142" -> "multiply.143";
	"subtract.140" -> "add.144";
	"multiply.143" -> "add.144";
	"p10.78" -> "broadcast.217";
	"p4.7" -> "multiply.218";
	"broadcast.217" -> "multiply.218";
	"p9.77" -> "broadcast.219";
	"multiply.218" -> "multiply.221";
	"broadcast.219" -> "multiply.221";
	"p4.7" -> "subtract.222";
	"multiply.221" -> "subtract.222";
	"constant.24" -> "multiply.16";
	"p8.63" -> "multiply.16";
	"multiply.16" -> "broadcast.15";
	"p5.28" -> "broadcast.50";
	"p11.79" -> "custom-call.12";
	"broadcast.50" -> "multiply.19";
	"custom-call.12" -> "multiply.19";
	"multiply.19" -> "reduce";
	"constant" -> "reduce";
	"scalar_add_computation" -> "reduce";
	"p12.134" -> "custom-call.13";
	"reduce" -> "add.171";
	"custom-call.13" -> "add.171";
	"add.171" -> "reshape.55";
	"reshape.55" -> "custom-call.14";
	"p7.57" -> "broadcast.202";
	"custom-call.14" -> "multiply.203";
	"broadcast.202" -> "multiply.203";
	"broadcast.15" -> "add.211";
	"multiply.203" -> "add.211";
	"constant.25" -> "multiply.17";
	"p6.40" -> "multiply.17";
	"multiply.17" -> "broadcast.18";
	"custom-call.14" -> "multiply.190";
	"custom-call.14" -> "multiply.190";
	"p3.6" -> "broadcast.191";
	"multiply.190" -> "multiply.192";
	"broadcast.191" -> "multiply.192";
	"broadcast.18" -> "add.193";
	"multiply.192" -> "add.193";
	"add.193" -> "sqrt.194";
	"p2.5" -> "broadcast.195";
	"sqrt.194" -> "divide.196";
	"broadcast.195" -> "divide.196";
	"p1.3" -> "broadcast.197";
	"divide.196" -> "add.198";
	"broadcast.197" -> "add.198";
	"add.211" -> "divide.223";
	"add.198" -> "divide.223";
	"p0.1" -> "broadcast.224";
	"divide.223" -> "multiply.225";
	"broadcast.224" -> "multiply.225";
	"subtract.222" -> "add.226";
	"multiply.225" -> "add.226";
	"p10.78" -> "reshape.63";
	"p13.262" -> "multiply.264";
	"reshape.63" -> "multiply.264";
	"p9.77" -> "reshape.64";
	"multiply.264" -> "multiply.267";
	"reshape.64" -> "multiply.267";
	"p13.262" -> "subtract.268";
	"multiply.267" -> "subtract.268";
	"constant.26" -> "multiply.13";
	"p8.63" -> "multiply.13";
	"multiply.13" -> "reshape.137";
	"constant.6" -> "custom-call.15";
	"p7.57" -> "reshape.70";
	"custom-call.15" -> "multiply.252";
	"reshape.70" -> "multiply.252";
	"reshape.137" -> "add.258";
	"multiply.252" -> "add.258";
	"constant.27" -> "multiply.12";
	"p6.40" -> "multiply.12";
	"multiply.12" -> "reshape.134";
	"custom-call.15" -> "multiply.241";
	"custom-call.15" -> "multiply.241";
	"p3.6" -> "reshape.74";
	"multiply.241" -> "multiply.243";
	"reshape.74" -> "multiply.243";
	"reshape.134" -> "add.244";
	"multiply.243" -> "add.244";
	"add.244" -> "sqrt.245";
	"p2.5" -> "reshape.76";
	"sqrt.245" -> "divide.247";
	"reshape.76" -> "divide.247";
	"p1.3" -> "reshape.77";
	"divide.247" -> "add.249";
	"reshape.77" -> "add.249";
	"add.258" -> "divide.269";
	"add.249" -> "divide.269";
	"p0.1" -> "reshape.78";
	"divide.269" -> "multiply.271";
	"reshape.78" -> "multiply.271";
	"subtract.268" -> "add.272";
	"multiply.271" -> "add.272";
	"custom-call.8" -> "reshape.81";
	"add.171" -> "multiply.11";
	"reshape.81" -> "multiply.11";
	"multiply.11" -> "reduce.1";
	"constant.1" -> "reduce.1";
	"scalar_add_computation" -> "reduce.1";
	"reduce.1" -> "reshape.287";
	"p13.262" -> "custom-call.16";
	"reshape.287" -> "add.288";
	"custom-call.16" -> "add.288";
	"add.288" -> "reshape.140";
	"reshape.140" -> "subtract.308";
	"p14.306" -> "subtract.308";
	"add.89" -> "tuple.309";
	"add.144" -> "tuple.309";
	"add.226" -> "tuple.309";
	"add.272" -> "tuple.309";
	"p5.28" -> "tuple.309";
	"reshape.140" -> "tuple.309";
	"subtract.308" -> "tuple.309";
	"custom-call.15" -> "tuple.309";
	"custom-call.14" -> "tuple.309";
	"custom-call.11" -> "tuple.309";
	"custom-call.9" -> "tuple.309";
	"add.71" -> "tuple.309";
	"add.51" -> "tuple.309";
	"add.128" -> "tuple.309";
	"add.110" -> "tuple.309";
	"add.211" -> "tuple.309";
	"add.193" -> "tuple.309";
	"add.258" -> "tuple.309";
	"add.244" -> "tuple.309";
}