digraph HloModule { 
	"p40.737" [label="p40.737 \n f32[30522,16]"];
	"p39.728" [label="p39.728 \n f32[] parameter(39), frontend_attributes="];
	"multiply.32" [label="multiply.32 \n f32[] multiply(f32[] %constant, f32[] %p39.728), metadata="];
	"broadcast.2" [label="broadcast.2 \n f32[30522,16]"];
	"p34.64" [label="p34.64 \n f32[2]"];
	"p33.63" [label="p33.63 \n f32[16]"];
	"p32.62" [label="p32.62 \n f32[16]"];
	"p31.61" [label="p31.61 \n f32[16]"];
	"p30.60" [label="p30.60 \n f32[30522]"];
	"p29.59" [label="p29.59 \n f32[16]"];
	"p28.58" [label="p28.58 \n f32[16]"];
	"p27.57" [label="p27.57 \n f32[16]"];
	"p26.56" [label="p26.56 \n f32[16]"];
	"p25.55" [label="p25.55 \n f32[4096]"];
	"p24.54" [label="p24.54 \n f32[16]"];
	"p23.53" [label="p23.53 \n f32[16]"];
	"p22.52" [label="p22.52 \n f32[16]"];
	"p21.51" [label="p21.51 \n f32[8]"];
	"p20.50" [label="p20.50 \n f32[8]"];
	"p19.49" [label="p19.49 \n f32[8]"];
	"p18.48" [label="p18.48 \n f32[16]"];
	"p17.47" [label="p17.47 \n f32[16]"];
	"p16.46" [label="p16.46 \n f32[2,16]"];
	"p15.45" [label="p15.45 \n f32[16,16]"];
	"p14.44" [label="p14.44 \n f32[16,16]"];
	"p13.43" [label="p13.43 \n f32[16,4096]"];
	"p12.42" [label="p12.42 \n f32[4096,16]"];
	"p11.41" [label="p11.41 \n f32[16,8]"];
	"p10.40" [label="p10.40 \n f32[8,16]"];
	"p9.39" [label="p9.39 \n f32[8,16]"];
	"p8.38" [label="p8.38 \n f32[8,16]"];
	"p7.37" [label="p7.37 \n f32[2,16]"];
	"p6.36" [label="p6.36 \n f32[512,16]"];
	"p5.35" [label="p5.35 \n f32[30522,16]"];
	"p4.22" [label="p4.22 \n f32[1]"];
	"p3.21" [label="p3.21 \n f32[] parameter(3), frontend_attributes="];
	"divide.24" [label="divide.24 \n f32[1]"];
	"p2.20" [label="p2.20 \n f32[] parameter(2), frontend_attributes="];
	"constant.2" [label="constant.2 \n f32[1]"];
	"p36.614" [label="p36.614 \n f32[1]"];
	"constant.219" [label="constant.219 \n f32[] constant(0.125), metadata="];
	"broadcast.220" [label="broadcast.220 \n f32[30522,16]"];
	"multiply.221" [label="multiply.221 \n f32[30522,16]"];
	"multiply.603" [label="multiply.603 \n f32[30522,16]"];
	"constant.604" [label="constant.604 \n f32[] constant(0), metadata="];
	"reduce.610" [label="reduce.610 \n f32[] reduce(f32[30522,16]"];
	"sqrt.611" [label="sqrt.611 \n f32[] sqrt(f32[] %reduce.610), metadata="];
	"multiply.613" [label="multiply.613 \n f32[] multiply(f32[] %sqrt.611, f32[] %sqrt.611), metadata="];
	"reshape.1" [label="reshape.1 \n f32[1]"];
	"add.616" [label="add.616 \n f32[1]"];
	"constant.215" [label="constant.215 \n f32[] constant(0.125), metadata="];
	"broadcast.216" [label="broadcast.216 \n f32[512,16]"];
	"multiply.217" [label="multiply.217 \n f32[512,16]"];
	"multiply.590" [label="multiply.590 \n f32[512,16]"];
	"constant.591" [label="constant.591 \n f32[] constant(0), metadata="];
	"reduce.597" [label="reduce.597 \n f32[] reduce(f32[512,16]"];
	"sqrt.598" [label="sqrt.598 \n f32[] sqrt(f32[] %reduce.597), metadata="];
	"multiply.600" [label="multiply.600 \n f32[] multiply(f32[] %sqrt.598, f32[] %sqrt.598), metadata="];
	"reshape.3" [label="reshape.3 \n f32[1]"];
	"add.618" [label="add.618 \n f32[1]"];
	"constant.211" [label="constant.211 \n f32[] constant(0.125), metadata="];
	"broadcast.212" [label="broadcast.212 \n f32[2,16]"];
	"multiply.213" [label="multiply.213 \n f32[2,16]"];
	"multiply.577" [label="multiply.577 \n f32[2,16]"];
	"constant.578" [label="constant.578 \n f32[] constant(0), metadata="];
	"reduce.584" [label="reduce.584 \n f32[] reduce(f32[2,16]"];
	"sqrt.585" [label="sqrt.585 \n f32[] sqrt(f32[] %reduce.584), metadata="];
	"multiply.587" [label="multiply.587 \n f32[] multiply(f32[] %sqrt.585, f32[] %sqrt.585), metadata="];
	"reshape.5" [label="reshape.5 \n f32[1]"];
	"add.620" [label="add.620 \n f32[1]"];
	"constant.171" [label="constant.171 \n f32[] constant(0.125), metadata="];
	"broadcast.172" [label="broadcast.172 \n f32[16]"];
	"multiply.173" [label="multiply.173 \n f32[16]"];
	"multiply.564" [label="multiply.564 \n f32[16]"];
	"constant.565" [label="constant.565 \n f32[] constant(0), metadata="];
	"reduce.571" [label="reduce.571 \n f32[] reduce(f32[16]"];
	"sqrt.572" [label="sqrt.572 \n f32[] sqrt(f32[] %reduce.571), metadata="];
	"multiply.574" [label="multiply.574 \n f32[] multiply(f32[] %sqrt.572, f32[] %sqrt.572), metadata="];
	"reshape.6" [label="reshape.6 \n f32[1]"];
	"add.622" [label="add.622 \n f32[1]"];
	"constant.167" [label="constant.167 \n f32[] constant(0.125), metadata="];
	"broadcast.168" [label="broadcast.168 \n f32[16]"];
	"multiply.169" [label="multiply.169 \n f32[16]"];
	"multiply.551" [label="multiply.551 \n f32[16]"];
	"constant.552" [label="constant.552 \n f32[] constant(0), metadata="];
	"reduce.558" [label="reduce.558 \n f32[] reduce(f32[16]"];
	"sqrt.559" [label="sqrt.559 \n f32[] sqrt(f32[] %reduce.558), metadata="];
	"multiply.561" [label="multiply.561 \n f32[] multiply(f32[] %sqrt.559, f32[] %sqrt.559), metadata="];
	"reshape.7" [label="reshape.7 \n f32[1]"];
	"add.624" [label="add.624 \n f32[1]"];
	"constant.151" [label="constant.151 \n f32[] constant(0.125), metadata="];
	"broadcast.152" [label="broadcast.152 \n f32[16]"];
	"multiply.153" [label="multiply.153 \n f32[16]"];
	"multiply.538" [label="multiply.538 \n f32[16]"];
	"constant.539" [label="constant.539 \n f32[] constant(0), metadata="];
	"reduce.545" [label="reduce.545 \n f32[] reduce(f32[16]"];
	"sqrt.546" [label="sqrt.546 \n f32[] sqrt(f32[] %reduce.545), metadata="];
	"multiply.548" [label="multiply.548 \n f32[] multiply(f32[] %sqrt.546, f32[] %sqrt.546), metadata="];
	"reshape.8" [label="reshape.8 \n f32[1]"];
	"add.626" [label="add.626 \n f32[1]"];
	"constant.147" [label="constant.147 \n f32[] constant(0.125), metadata="];
	"broadcast.148" [label="broadcast.148 \n f32[16]"];
	"multiply.149" [label="multiply.149 \n f32[16]"];
	"multiply.525" [label="multiply.525 \n f32[16]"];
	"constant.526" [label="constant.526 \n f32[] constant(0), metadata="];
	"reduce.532" [label="reduce.532 \n f32[] reduce(f32[16]"];
	"sqrt.533" [label="sqrt.533 \n f32[] sqrt(f32[] %reduce.532), metadata="];
	"multiply.535" [label="multiply.535 \n f32[] multiply(f32[] %sqrt.533, f32[] %sqrt.533), metadata="];
	"reshape.9" [label="reshape.9 \n f32[1]"];
	"add.628" [label="add.628 \n f32[1]"];
	"constant.143" [label="constant.143 \n f32[] constant(0.125), metadata="];
	"broadcast.144" [label="broadcast.144 \n f32[16]"];
	"multiply.145" [label="multiply.145 \n f32[16]"];
	"multiply.512" [label="multiply.512 \n f32[16]"];
	"constant.513" [label="constant.513 \n f32[] constant(0), metadata="];
	"reduce.519" [label="reduce.519 \n f32[] reduce(f32[16]"];
	"sqrt.520" [label="sqrt.520 \n f32[] sqrt(f32[] %reduce.519), metadata="];
	"multiply.522" [label="multiply.522 \n f32[] multiply(f32[] %sqrt.520, f32[] %sqrt.520), metadata="];
	"reshape.10" [label="reshape.10 \n f32[1]"];
	"add.630" [label="add.630 \n f32[1]"];
	"constant.191" [label="constant.191 \n f32[] constant(0.125), metadata="];
	"broadcast.192" [label="broadcast.192 \n f32[4096,16]"];
	"multiply.193" [label="multiply.193 \n f32[4096,16]"];
	"multiply.499" [label="multiply.499 \n f32[4096,16]"];
	"constant.500" [label="constant.500 \n f32[] constant(0), metadata="];
	"reduce.506" [label="reduce.506 \n f32[] reduce(f32[4096,16]"];
	"sqrt.507" [label="sqrt.507 \n f32[] sqrt(f32[] %reduce.506), metadata="];
	"multiply.509" [label="multiply.509 \n f32[] multiply(f32[] %sqrt.507, f32[] %sqrt.507), metadata="];
	"reshape.11" [label="reshape.11 \n f32[1]"];
	"add.632" [label="add.632 \n f32[1]"];
	"constant.139" [label="constant.139 \n f32[] constant(0.125), metadata="];
	"broadcast.140" [label="broadcast.140 \n f32[4096]"];
	"multiply.141" [label="multiply.141 \n f32[4096]"];
	"multiply.486" [label="multiply.486 \n f32[4096]"];
	"constant.487" [label="constant.487 \n f32[] constant(0), metadata="];
	"reduce.493" [label="reduce.493 \n f32[] reduce(f32[4096]"];
	"sqrt.494" [label="sqrt.494 \n f32[] sqrt(f32[] %reduce.493), metadata="];
	"multiply.496" [label="multiply.496 \n f32[] multiply(f32[] %sqrt.494, f32[] %sqrt.494), metadata="];
	"reshape.13" [label="reshape.13 \n f32[1]"];
	"add.634" [label="add.634 \n f32[1]"];
	"constant.187" [label="constant.187 \n f32[] constant(0.125), metadata="];
	"broadcast.188" [label="broadcast.188 \n f32[16,4096]"];
	"multiply.189" [label="multiply.189 \n f32[16,4096]"];
	"multiply.473" [label="multiply.473 \n f32[16,4096]"];
	"constant.474" [label="constant.474 \n f32[] constant(0), metadata="];
	"reduce.480" [label="reduce.480 \n f32[] reduce(f32[16,4096]"];
	"sqrt.481" [label="sqrt.481 \n f32[] sqrt(f32[] %reduce.480), metadata="];
	"multiply.483" [label="multiply.483 \n f32[] multiply(f32[] %sqrt.481, f32[] %sqrt.481), metadata="];
	"reshape.14" [label="reshape.14 \n f32[1]"];
	"add.636" [label="add.636 \n f32[1]"];
	"constant.135" [label="constant.135 \n f32[] constant(0.125), metadata="];
	"broadcast.136" [label="broadcast.136 \n f32[16]"];
	"multiply.137" [label="multiply.137 \n f32[16]"];
	"multiply.460" [label="multiply.460 \n f32[16]"];
	"constant.461" [label="constant.461 \n f32[] constant(0), metadata="];
	"reduce.467" [label="reduce.467 \n f32[] reduce(f32[16]"];
	"sqrt.468" [label="sqrt.468 \n f32[] sqrt(f32[] %reduce.467), metadata="];
	"multiply.470" [label="multiply.470 \n f32[] multiply(f32[] %sqrt.468, f32[] %sqrt.468), metadata="];
	"reshape.15" [label="reshape.15 \n f32[1]"];
	"add.638" [label="add.638 \n f32[1]"];
	"constant.131" [label="constant.131 \n f32[] constant(0.125), metadata="];
	"broadcast.132" [label="broadcast.132 \n f32[16]"];
	"multiply.133" [label="multiply.133 \n f32[16]"];
	"multiply.447" [label="multiply.447 \n f32[16]"];
	"constant.448" [label="constant.448 \n f32[] constant(0), metadata="];
	"reduce.454" [label="reduce.454 \n f32[] reduce(f32[16]"];
	"sqrt.455" [label="sqrt.455 \n f32[] sqrt(f32[] %reduce.454), metadata="];
	"multiply.457" [label="multiply.457 \n f32[] multiply(f32[] %sqrt.455, f32[] %sqrt.455), metadata="];
	"reshape.16" [label="reshape.16 \n f32[1]"];
	"add.640" [label="add.640 \n f32[1]"];
	"constant.127" [label="constant.127 \n f32[] constant(0.125), metadata="];
	"broadcast.128" [label="broadcast.128 \n f32[16]"];
	"multiply.129" [label="multiply.129 \n f32[16]"];
	"multiply.434" [label="multiply.434 \n f32[16]"];
	"constant.435" [label="constant.435 \n f32[] constant(0), metadata="];
	"reduce.441" [label="reduce.441 \n f32[] reduce(f32[16]"];
	"sqrt.442" [label="sqrt.442 \n f32[] sqrt(f32[] %reduce.441), metadata="];
	"multiply.444" [label="multiply.444 \n f32[] multiply(f32[] %sqrt.442, f32[] %sqrt.442), metadata="];
	"reshape.17" [label="reshape.17 \n f32[1]"];
	"add.642" [label="add.642 \n f32[1]"];
	"constant.183" [label="constant.183 \n f32[] constant(0.125), metadata="];
	"broadcast.184" [label="broadcast.184 \n f32[16,16]"];
	"multiply.185" [label="multiply.185 \n f32[16,16]"];
	"multiply.421" [label="multiply.421 \n f32[16,16]"];
	"constant.422" [label="constant.422 \n f32[] constant(0), metadata="];
	"reduce.428" [label="reduce.428 \n f32[] reduce(f32[16,16]"];
	"sqrt.429" [label="sqrt.429 \n f32[] sqrt(f32[] %reduce.428), metadata="];
	"multiply.431" [label="multiply.431 \n f32[] multiply(f32[] %sqrt.429, f32[] %sqrt.429), metadata="];
	"reshape.19" [label="reshape.19 \n f32[1]"];
	"add.644" [label="add.644 \n f32[1]"];
	"constant.123" [label="constant.123 \n f32[] constant(0.125), metadata="];
	"broadcast.124" [label="broadcast.124 \n f32[16]"];
	"multiply.125" [label="multiply.125 \n f32[16]"];
	"multiply.408" [label="multiply.408 \n f32[16]"];
	"constant.409" [label="constant.409 \n f32[] constant(0), metadata="];
	"reduce.415" [label="reduce.415 \n f32[] reduce(f32[16]"];
	"sqrt.416" [label="sqrt.416 \n f32[] sqrt(f32[] %reduce.415), metadata="];
	"multiply.418" [label="multiply.418 \n f32[] multiply(f32[] %sqrt.416, f32[] %sqrt.416), metadata="];
	"reshape.20" [label="reshape.20 \n f32[1]"];
	"add.646" [label="add.646 \n f32[1]"];
	"constant.119" [label="constant.119 \n f32[] constant(0.125), metadata="];
	"broadcast.120" [label="broadcast.120 \n f32[30522]"];
	"multiply.121" [label="multiply.121 \n f32[30522]"];
	"multiply.395" [label="multiply.395 \n f32[30522]"];
	"constant.396" [label="constant.396 \n f32[] constant(0), metadata="];
	"reduce.402" [label="reduce.402 \n f32[] reduce(f32[30522]"];
	"sqrt.403" [label="sqrt.403 \n f32[] sqrt(f32[] %reduce.402), metadata="];
	"multiply.405" [label="multiply.405 \n f32[] multiply(f32[] %sqrt.403, f32[] %sqrt.403), metadata="];
	"reshape.21" [label="reshape.21 \n f32[1]"];
	"add.648" [label="add.648 \n f32[1]"];
	"constant.179" [label="constant.179 \n f32[] constant(0.125), metadata="];
	"broadcast.180" [label="broadcast.180 \n f32[16,16]"];
	"multiply.181" [label="multiply.181 \n f32[16,16]"];
	"multiply.382" [label="multiply.382 \n f32[16,16]"];
	"constant.383" [label="constant.383 \n f32[] constant(0), metadata="];
	"reduce.389" [label="reduce.389 \n f32[] reduce(f32[16,16]"];
	"sqrt.390" [label="sqrt.390 \n f32[] sqrt(f32[] %reduce.389), metadata="];
	"multiply.392" [label="multiply.392 \n f32[] multiply(f32[] %sqrt.390, f32[] %sqrt.390), metadata="];
	"reshape.22" [label="reshape.22 \n f32[1]"];
	"add.650" [label="add.650 \n f32[1]"];
	"constant.115" [label="constant.115 \n f32[] constant(0.125), metadata="];
	"broadcast.116" [label="broadcast.116 \n f32[16]"];
	"multiply.117" [label="multiply.117 \n f32[16]"];
	"multiply.369" [label="multiply.369 \n f32[16]"];
	"constant.370" [label="constant.370 \n f32[] constant(0), metadata="];
	"reduce.376" [label="reduce.376 \n f32[] reduce(f32[16]"];
	"sqrt.377" [label="sqrt.377 \n f32[] sqrt(f32[] %reduce.376), metadata="];
	"multiply.379" [label="multiply.379 \n f32[] multiply(f32[] %sqrt.377, f32[] %sqrt.377), metadata="];
	"reshape.23" [label="reshape.23 \n f32[1]"];
	"add.652" [label="add.652 \n f32[1]"];
	"constant.111" [label="constant.111 \n f32[] constant(0.125), metadata="];
	"broadcast.112" [label="broadcast.112 \n f32[16]"];
	"multiply.113" [label="multiply.113 \n f32[16]"];
	"multiply.356" [label="multiply.356 \n f32[16]"];
	"constant.357" [label="constant.357 \n f32[] constant(0), metadata="];
	"reduce.363" [label="reduce.363 \n f32[] reduce(f32[16]"];
	"sqrt.364" [label="sqrt.364 \n f32[] sqrt(f32[] %reduce.363), metadata="];
	"multiply.366" [label="multiply.366 \n f32[] multiply(f32[] %sqrt.364, f32[] %sqrt.364), metadata="];
	"reshape.24" [label="reshape.24 \n f32[1]"];
	"add.654" [label="add.654 \n f32[1]"];
	"constant.107" [label="constant.107 \n f32[] constant(0.125), metadata="];
	"broadcast.108" [label="broadcast.108 \n f32[16]"];
	"multiply.109" [label="multiply.109 \n f32[16]"];
	"multiply.343" [label="multiply.343 \n f32[16]"];
	"constant.344" [label="constant.344 \n f32[] constant(0), metadata="];
	"reduce.350" [label="reduce.350 \n f32[] reduce(f32[16]"];
	"sqrt.351" [label="sqrt.351 \n f32[] sqrt(f32[] %reduce.350), metadata="];
	"multiply.353" [label="multiply.353 \n f32[] multiply(f32[] %sqrt.351, f32[] %sqrt.351), metadata="];
	"reshape.25" [label="reshape.25 \n f32[1]"];
	"add.656" [label="add.656 \n f32[1]"];
	"constant.175" [label="constant.175 \n f32[] constant(0.125), metadata="];
	"broadcast.176" [label="broadcast.176 \n f32[2,16]"];
	"multiply.177" [label="multiply.177 \n f32[2,16]"];
	"multiply.330" [label="multiply.330 \n f32[2,16]"];
	"constant.331" [label="constant.331 \n f32[] constant(0), metadata="];
	"reduce.337" [label="reduce.337 \n f32[] reduce(f32[2,16]"];
	"sqrt.338" [label="sqrt.338 \n f32[] sqrt(f32[] %reduce.337), metadata="];
	"multiply.340" [label="multiply.340 \n f32[] multiply(f32[] %sqrt.338, f32[] %sqrt.338), metadata="];
	"reshape.26" [label="reshape.26 \n f32[1]"];
	"add.658" [label="add.658 \n f32[1]"];
	"constant.103" [label="constant.103 \n f32[] constant(0.125), metadata="];
	"broadcast.104" [label="broadcast.104 \n f32[2]"];
	"multiply.105" [label="multiply.105 \n f32[2]"];
	"multiply.317" [label="multiply.317 \n f32[2]"];
	"constant.318" [label="constant.318 \n f32[] constant(0), metadata="];
	"reduce.324" [label="reduce.324 \n f32[] reduce(f32[2]"];
	"sqrt.325" [label="sqrt.325 \n f32[] sqrt(f32[] %reduce.324), metadata="];
	"multiply.327" [label="multiply.327 \n f32[] multiply(f32[] %sqrt.325, f32[] %sqrt.325), metadata="];
	"reshape.27" [label="reshape.27 \n f32[1]"];
	"add.660" [label="add.660 \n f32[1]"];
	"p35.314" [label="p35.314 \n f32[] parameter(35), frontend_attributes="];
	"reshape.28" [label="reshape.28 \n f32[1]"];
	"divide.662" [label="divide.662 \n f32[1]"];
	"constant.207" [label="constant.207 \n f32[] constant(0.125), metadata="];
	"broadcast.208" [label="broadcast.208 \n f32[8,16]"];
	"multiply.209" [label="multiply.209 \n f32[8,16]"];
	"multiply.303" [label="multiply.303 \n f32[8,16]"];
	"constant.304" [label="constant.304 \n f32[] constant(0), metadata="];
	"reduce.310" [label="reduce.310 \n f32[] reduce(f32[8,16]"];
	"sqrt.311" [label="sqrt.311 \n f32[] sqrt(f32[] %reduce.310), metadata="];
	"multiply.313" [label="multiply.313 \n f32[] multiply(f32[] %sqrt.311, f32[] %sqrt.311), metadata="];
	"reshape.29" [label="reshape.29 \n f32[1]"];
	"add.664" [label="add.664 \n f32[1]"];
	"constant.163" [label="constant.163 \n f32[] constant(0.125), metadata="];
	"broadcast.164" [label="broadcast.164 \n f32[8]"];
	"multiply.165" [label="multiply.165 \n f32[8]"];
	"multiply.290" [label="multiply.290 \n f32[8]"];
	"constant.291" [label="constant.291 \n f32[] constant(0), metadata="];
	"reduce.297" [label="reduce.297 \n f32[] reduce(f32[8]"];
	"sqrt.298" [label="sqrt.298 \n f32[] sqrt(f32[] %reduce.297), metadata="];
	"multiply.300" [label="multiply.300 \n f32[] multiply(f32[] %sqrt.298, f32[] %sqrt.298), metadata="];
	"reshape.30" [label="reshape.30 \n f32[1]"];
	"add.666" [label="add.666 \n f32[1]"];
	"constant.203" [label="constant.203 \n f32[] constant(0.125), metadata="];
	"broadcast.204" [label="broadcast.204 \n f32[8,16]"];
	"multiply.205" [label="multiply.205 \n f32[8,16]"];
	"multiply.277" [label="multiply.277 \n f32[8,16]"];
	"constant.278" [label="constant.278 \n f32[] constant(0), metadata="];
	"reduce.284" [label="reduce.284 \n f32[] reduce(f32[8,16]"];
	"sqrt.285" [label="sqrt.285 \n f32[] sqrt(f32[] %reduce.284), metadata="];
	"multiply.287" [label="multiply.287 \n f32[] multiply(f32[] %sqrt.285, f32[] %sqrt.285), metadata="];
	"reshape.31" [label="reshape.31 \n f32[1]"];
	"add.668" [label="add.668 \n f32[1]"];
	"constant.159" [label="constant.159 \n f32[] constant(0.125), metadata="];
	"broadcast.160" [label="broadcast.160 \n f32[8]"];
	"multiply.161" [label="multiply.161 \n f32[8]"];
	"multiply.264" [label="multiply.264 \n f32[8]"];
	"constant.265" [label="constant.265 \n f32[] constant(0), metadata="];
	"reduce.271" [label="reduce.271 \n f32[] reduce(f32[8]"];
	"sqrt.272" [label="sqrt.272 \n f32[] sqrt(f32[] %reduce.271), metadata="];
	"multiply.274" [label="multiply.274 \n f32[] multiply(f32[] %sqrt.272, f32[] %sqrt.272), metadata="];
	"reshape.32" [label="reshape.32 \n f32[1]"];
	"add.670" [label="add.670 \n f32[1]"];
	"constant.199" [label="constant.199 \n f32[] constant(0.125), metadata="];
	"broadcast.200" [label="broadcast.200 \n f32[8,16]"];
	"multiply.201" [label="multiply.201 \n f32[8,16]"];
	"multiply.251" [label="multiply.251 \n f32[8,16]"];
	"constant.252" [label="constant.252 \n f32[] constant(0), metadata="];
	"reduce.258" [label="reduce.258 \n f32[] reduce(f32[8,16]"];
	"sqrt.259" [label="sqrt.259 \n f32[] sqrt(f32[] %reduce.258), metadata="];
	"multiply.261" [label="multiply.261 \n f32[] multiply(f32[] %sqrt.259, f32[] %sqrt.259), metadata="];
	"reshape.33" [label="reshape.33 \n f32[1]"];
	"add.672" [label="add.672 \n f32[1]"];
	"constant.155" [label="constant.155 \n f32[] constant(0.125), metadata="];
	"broadcast.156" [label="broadcast.156 \n f32[8]"];
	"multiply.157" [label="multiply.157 \n f32[8]"];
	"multiply.238" [label="multiply.238 \n f32[8]"];
	"constant.239" [label="constant.239 \n f32[] constant(0), metadata="];
	"reduce.245" [label="reduce.245 \n f32[] reduce(f32[8]"];
	"sqrt.246" [label="sqrt.246 \n f32[] sqrt(f32[] %reduce.245), metadata="];
	"multiply.248" [label="multiply.248 \n f32[] multiply(f32[] %sqrt.246, f32[] %sqrt.246), metadata="];
	"reshape.34" [label="reshape.34 \n f32[1]"];
	"add.674" [label="add.674 \n f32[1]"];
	"constant.195" [label="constant.195 \n f32[] constant(0.125), metadata="];
	"broadcast.196" [label="broadcast.196 \n f32[16,8]"];
	"multiply.197" [label="multiply.197 \n f32[16,8]"];
	"multiply.225" [label="multiply.225 \n f32[16,8]"];
	"constant.226" [label="constant.226 \n f32[] constant(0), metadata="];
	"reduce.232" [label="reduce.232 \n f32[] reduce(f32[16,8]"];
	"sqrt.233" [label="sqrt.233 \n f32[] sqrt(f32[] %reduce.232), metadata="];
	"multiply.235" [label="multiply.235 \n f32[] multiply(f32[] %sqrt.233, f32[] %sqrt.233), metadata="];
	"reshape.35" [label="reshape.35 \n f32[1]"];
	"add.676" [label="add.676 \n f32[1]"];
	"constant.3" [label="constant.3 \n f32[1]"];
	"power.687" [label="power.687 \n f32[1]"];
	"p0.8" [label="p0.8 \n f32[] parameter(0), frontend_attributes="];
	"reshape.40" [label="reshape.40 \n f32[1]"];
	"add.689" [label="add.689 \n f32[1]"];
	"divide.692" [label="divide.692 \n f32[1]"];
	"constant.8" [label="constant.8 \n f32[1]"];
	"compare.699" [label="compare.699 \n pred[1]"];
	"constant.9" [label="constant.9 \n f32[1]"];
	"select.701" [label="select.701 \n f32[1]"];
	"constant.182" [label="constant.182 \n f32[1]"];
	"multiply.168" [label="multiply.168 \n f32[1]"];
	"reshape.650" [label="reshape.650 \n f32[] reshape(f32[1]"];
	"broadcast.6" [label="broadcast.6 \n f32[30522,16]"];
	"multiply.706" [label="multiply.706 \n f32[30522,16]"];
	"p38.722" [label="p38.722 \n f32[] parameter(38), frontend_attributes="];
	"broadcast.726" [label="broadcast.726 \n f32[30522,16]"];
	"multiply.727" [label="multiply.727 \n f32[30522,16]"];
	"add.736" [label="add.736 \n f32[30522,16]"];
	"p37.707" [label="p37.707 \n f32[] parameter(37), frontend_attributes="];
	"multiply.35" [label="multiply.35 \n f32[] multiply(f32[] %constant.10, f32[] %p37.707), metadata="];
	"broadcast.9" [label="broadcast.9 \n f32[30522,16]"];
	"multiply.715" [label="multiply.715 \n f32[30522,16]"];
	"p1.10" [label="p1.10 \n f32[] parameter(1), frontend_attributes="];
	"broadcast.716" [label="broadcast.716 \n f32[30522,16]"];
	"multiply.717" [label="multiply.717 \n f32[30522,16]"];
	"add.718" [label="add.718 \n f32[30522,16]"];
	"sqrt.719" [label="sqrt.719 \n f32[30522,16]"];
	"broadcast.720" [label="broadcast.720 \n f32[30522,16]"];
	"add.721" [label="add.721 \n f32[30522,16]"];
	"divide.738" [label="divide.738 \n f32[30522,16]"];
	"constant.6" [label="constant.6 \n f32[] constant(-0), metadata="];
	"broadcast.739" [label="broadcast.739 \n f32[30522,16]"];
	"multiply.740" [label="multiply.740 \n f32[30522,16]"];
	"add.741" [label="add.741 \n f32[30522,16]"];
	"constant.1" [label="constant.1 \n f32[] constant(-0), metadata="];
	"broadcast.5" [label="broadcast.5 \n f32[30522,16]"];
	"multiply.742" [label="multiply.742 \n f32[30522,16]"];
	"add.743" [label="add.743 \n f32[30522,16]"];
	"p41.794" [label="p41.794 \n f32[512,16]"];
	"multiply.36" [label="multiply.36 \n f32[] multiply(f32[] %constant.12, f32[] %p39.728), metadata="];
	"broadcast.12" [label="broadcast.12 \n f32[512,16]"];
	"constant.16" [label="constant.16 \n f32[1]"];
	"compare.759" [label="compare.759 \n pred[1]"];
	"constant.18" [label="constant.18 \n f32[1]"];
	"select.761" [label="select.761 \n f32[1]"];
	"constant.184" [label="constant.184 \n f32[1]"];
	"multiply.170" [label="multiply.170 \n f32[1]"];
	"reshape.653" [label="reshape.653 \n f32[] reshape(f32[1]"];
	"broadcast.15" [label="broadcast.15 \n f32[512,16]"];
	"multiply.766" [label="multiply.766 \n f32[512,16]"];
	"broadcast.784" [label="broadcast.784 \n f32[512,16]"];
	"multiply.785" [label="multiply.785 \n f32[512,16]"];
	"add.793" [label="add.793 \n f32[512,16]"];
	"multiply.39" [label="multiply.39 \n f32[] multiply(f32[] %constant.19, f32[] %p37.707), metadata="];
	"broadcast.18" [label="broadcast.18 \n f32[512,16]"];
	"multiply.774" [label="multiply.774 \n f32[512,16]"];
	"broadcast.775" [label="broadcast.775 \n f32[512,16]"];
	"multiply.776" [label="multiply.776 \n f32[512,16]"];
	"add.777" [label="add.777 \n f32[512,16]"];
	"sqrt.778" [label="sqrt.778 \n f32[512,16]"];
	"broadcast.779" [label="broadcast.779 \n f32[512,16]"];
	"add.780" [label="add.780 \n f32[512,16]"];
	"divide.795" [label="divide.795 \n f32[512,16]"];
	"constant.749" [label="constant.749 \n f32[] constant(-0), metadata="];
	"broadcast.796" [label="broadcast.796 \n f32[512,16]"];
	"multiply.797" [label="multiply.797 \n f32[512,16]"];
	"add.798" [label="add.798 \n f32[512,16]"];
	"constant.744" [label="constant.744 \n f32[] constant(-0), metadata="];
	"broadcast.748" [label="broadcast.748 \n f32[512,16]"];
	"multiply.799" [label="multiply.799 \n f32[512,16]"];
	"add.800" [label="add.800 \n f32[512,16]"];
	"p42.851" [label="p42.851 \n f32[2,16]"];
	"multiply.40" [label="multiply.40 \n f32[] multiply(f32[] %constant.20, f32[] %p39.728), metadata="];
	"broadcast.22" [label="broadcast.22 \n f32[2,16]"];
	"constant.22" [label="constant.22 \n f32[1]"];
	"compare.816" [label="compare.816 \n pred[1]"];
	"constant.23" [label="constant.23 \n f32[1]"];
	"select.818" [label="select.818 \n f32[1]"];
	"constant.185" [label="constant.185 \n f32[1]"];
	"multiply.171" [label="multiply.171 \n f32[1]"];
	"reshape.656" [label="reshape.656 \n f32[] reshape(f32[1]"];
	"broadcast.25" [label="broadcast.25 \n f32[2,16]"];
	"multiply.823" [label="multiply.823 \n f32[2,16]"];
	"broadcast.841" [label="broadcast.841 \n f32[2,16]"];
	"multiply.842" [label="multiply.842 \n f32[2,16]"];
	"add.850" [label="add.850 \n f32[2,16]"];
	"multiply.43" [label="multiply.43 \n f32[] multiply(f32[] %constant.24, f32[] %p37.707), metadata="];
	"broadcast.28" [label="broadcast.28 \n f32[2,16]"];
	"multiply.831" [label="multiply.831 \n f32[2,16]"];
	"broadcast.832" [label="broadcast.832 \n f32[2,16]"];
	"multiply.833" [label="multiply.833 \n f32[2,16]"];
	"add.834" [label="add.834 \n f32[2,16]"];
	"sqrt.835" [label="sqrt.835 \n f32[2,16]"];
	"broadcast.836" [label="broadcast.836 \n f32[2,16]"];
	"add.837" [label="add.837 \n f32[2,16]"];
	"divide.852" [label="divide.852 \n f32[2,16]"];
	"constant.806" [label="constant.806 \n f32[] constant(-0), metadata="];
	"broadcast.853" [label="broadcast.853 \n f32[2,16]"];
	"multiply.854" [label="multiply.854 \n f32[2,16]"];
	"add.855" [label="add.855 \n f32[2,16]"];
	"constant.801" [label="constant.801 \n f32[] constant(-0), metadata="];
	"broadcast.805" [label="broadcast.805 \n f32[2,16]"];
	"multiply.856" [label="multiply.856 \n f32[2,16]"];
	"add.857" [label="add.857 \n f32[2,16]"];
	"p43.902" [label="p43.902 \n f32[16]"];
	"multiply.44" [label="multiply.44 \n f32[] multiply(f32[] %constant.25, f32[] %p39.728), metadata="];
	"broadcast.31" [label="broadcast.31 \n f32[16]"];
	"constant.27" [label="constant.27 \n f32[1]"];
	"compare.868" [label="compare.868 \n pred[1]"];
	"constant.28" [label="constant.28 \n f32[1]"];
	"select.870" [label="select.870 \n f32[1]"];
	"constant.186" [label="constant.186 \n f32[1]"];
	"multiply.172" [label="multiply.172 \n f32[1]"];
	"reshape.659" [label="reshape.659 \n f32[] reshape(f32[1]"];
	"broadcast.32" [label="broadcast.32 \n f32[16]"];
	"multiply.874" [label="multiply.874 \n f32[16]"];
	"broadcast.892" [label="broadcast.892 \n f32[16]"];
	"multiply.893" [label="multiply.893 \n f32[16]"];
	"add.901" [label="add.901 \n f32[16]"];
	"multiply.47" [label="multiply.47 \n f32[] multiply(f32[] %constant.29, f32[] %p37.707), metadata="];
	"broadcast.35" [label="broadcast.35 \n f32[16]"];
	"multiply.882" [label="multiply.882 \n f32[16]"];
	"broadcast.883" [label="broadcast.883 \n f32[16]"];
	"multiply.884" [label="multiply.884 \n f32[16]"];
	"add.885" [label="add.885 \n f32[16]"];
	"sqrt.886" [label="sqrt.886 \n f32[16]"];
	"broadcast.887" [label="broadcast.887 \n f32[16]"];
	"add.888" [label="add.888 \n f32[16]"];
	"divide.903" [label="divide.903 \n f32[16]"];
	"constant.858" [label="constant.858 \n f32[] constant(-0), metadata="];
	"broadcast.904" [label="broadcast.904 \n f32[16]"];
	"multiply.905" [label="multiply.905 \n f32[16]"];
	"add.906" [label="add.906 \n f32[16]"];
	"p44.951" [label="p44.951 \n f32[16]"];
	"multiply.48" [label="multiply.48 \n f32[] multiply(f32[] %constant.30, f32[] %p39.728), metadata="];
	"broadcast.38" [label="broadcast.38 \n f32[16]"];
	"constant.32" [label="constant.32 \n f32[1]"];
	"compare.917" [label="compare.917 \n pred[1]"];
	"constant.33" [label="constant.33 \n f32[1]"];
	"select.919" [label="select.919 \n f32[1]"];
	"constant.188" [label="constant.188 \n f32[1]"];
	"multiply.174" [label="multiply.174 \n f32[1]"];
	"reshape.662" [label="reshape.662 \n f32[] reshape(f32[1]"];
	"broadcast.39" [label="broadcast.39 \n f32[16]"];
	"multiply.923" [label="multiply.923 \n f32[16]"];
	"broadcast.941" [label="broadcast.941 \n f32[16]"];
	"multiply.942" [label="multiply.942 \n f32[16]"];
	"add.950" [label="add.950 \n f32[16]"];
	"multiply.51" [label="multiply.51 \n f32[] multiply(f32[] %constant.34, f32[] %p37.707), metadata="];
	"broadcast.42" [label="broadcast.42 \n f32[16]"];
	"multiply.931" [label="multiply.931 \n f32[16]"];
	"broadcast.932" [label="broadcast.932 \n f32[16]"];
	"multiply.933" [label="multiply.933 \n f32[16]"];
	"add.934" [label="add.934 \n f32[16]"];
	"sqrt.935" [label="sqrt.935 \n f32[16]"];
	"broadcast.936" [label="broadcast.936 \n f32[16]"];
	"add.937" [label="add.937 \n f32[16]"];
	"divide.952" [label="divide.952 \n f32[16]"];
	"constant.907" [label="constant.907 \n f32[] constant(-0), metadata="];
	"broadcast.953" [label="broadcast.953 \n f32[16]"];
	"multiply.954" [label="multiply.954 \n f32[16]"];
	"add.955" [label="add.955 \n f32[16]"];
	"p45.1006" [label="p45.1006 \n f32[8,16]"];
	"multiply.52" [label="multiply.52 \n f32[] multiply(f32[] %constant.35, f32[] %p39.728), metadata="];
	"broadcast.45" [label="broadcast.45 \n f32[8,16]"];
	"constant.37" [label="constant.37 \n f32[1]"];
	"compare.971" [label="compare.971 \n pred[1]"];
	"constant.38" [label="constant.38 \n f32[1]"];
	"select.973" [label="select.973 \n f32[1]"];
	"constant.189" [label="constant.189 \n f32[1]"];
	"multiply.175" [label="multiply.175 \n f32[1]"];
	"reshape.665" [label="reshape.665 \n f32[] reshape(f32[1]"];
	"broadcast.47" [label="broadcast.47 \n f32[8,16]"];
	"multiply.978" [label="multiply.978 \n f32[8,16]"];
	"broadcast.996" [label="broadcast.996 \n f32[8,16]"];
	"multiply.997" [label="multiply.997 \n f32[8,16]"];
	"add.1005" [label="add.1005 \n f32[8,16]"];
	"multiply.55" [label="multiply.55 \n f32[] multiply(f32[] %constant.39, f32[] %p37.707), metadata="];
	"broadcast.50" [label="broadcast.50 \n f32[8,16]"];
	"multiply.986" [label="multiply.986 \n f32[8,16]"];
	"broadcast.987" [label="broadcast.987 \n f32[8,16]"];
	"multiply.988" [label="multiply.988 \n f32[8,16]"];
	"add.989" [label="add.989 \n f32[8,16]"];
	"sqrt.990" [label="sqrt.990 \n f32[8,16]"];
	"broadcast.991" [label="broadcast.991 \n f32[8,16]"];
	"add.992" [label="add.992 \n f32[8,16]"];
	"divide.1007" [label="divide.1007 \n f32[8,16]"];
	"constant.961" [label="constant.961 \n f32[] constant(-0), metadata="];
	"broadcast.1008" [label="broadcast.1008 \n f32[8,16]"];
	"multiply.1009" [label="multiply.1009 \n f32[8,16]"];
	"add.1010" [label="add.1010 \n f32[8,16]"];
	"constant.956" [label="constant.956 \n f32[] constant(-0), metadata="];
	"broadcast.960" [label="broadcast.960 \n f32[8,16]"];
	"multiply.1011" [label="multiply.1011 \n f32[8,16]"];
	"add.1012" [label="add.1012 \n f32[8,16]"];
	"p46.1057" [label="p46.1057 \n f32[8]"];
	"multiply.56" [label="multiply.56 \n f32[] multiply(f32[] %constant.40, f32[] %p39.728), metadata="];
	"broadcast.53" [label="broadcast.53 \n f32[8]"];
	"constant.42" [label="constant.42 \n f32[1]"];
	"compare.1023" [label="compare.1023 \n pred[1]"];
	"constant.43" [label="constant.43 \n f32[1]"];
	"select.1025" [label="select.1025 \n f32[1]"];
	"constant.190" [label="constant.190 \n f32[1]"];
	"multiply.176" [label="multiply.176 \n f32[1]"];
	"reshape.668" [label="reshape.668 \n f32[] reshape(f32[1]"];
	"broadcast.54" [label="broadcast.54 \n f32[8]"];
	"multiply.1029" [label="multiply.1029 \n f32[8]"];
	"broadcast.1047" [label="broadcast.1047 \n f32[8]"];
	"multiply.1048" [label="multiply.1048 \n f32[8]"];
	"add.1056" [label="add.1056 \n f32[8]"];
	"multiply.59" [label="multiply.59 \n f32[] multiply(f32[] %constant.44, f32[] %p37.707), metadata="];
	"broadcast.57" [label="broadcast.57 \n f32[8]"];
	"multiply.1037" [label="multiply.1037 \n f32[8]"];
	"broadcast.1038" [label="broadcast.1038 \n f32[8]"];
	"multiply.1039" [label="multiply.1039 \n f32[8]"];
	"add.1040" [label="add.1040 \n f32[8]"];
	"sqrt.1041" [label="sqrt.1041 \n f32[8]"];
	"broadcast.1042" [label="broadcast.1042 \n f32[8]"];
	"add.1043" [label="add.1043 \n f32[8]"];
	"divide.1058" [label="divide.1058 \n f32[8]"];
	"constant.1013" [label="constant.1013 \n f32[] constant(-0), metadata="];
	"broadcast.1059" [label="broadcast.1059 \n f32[8]"];
	"multiply.1060" [label="multiply.1060 \n f32[8]"];
	"add.1061" [label="add.1061 \n f32[8]"];
	"p47.1112" [label="p47.1112 \n f32[8,16]"];
	"multiply.60" [label="multiply.60 \n f32[] multiply(f32[] %constant.45, f32[] %p39.728), metadata="];
	"broadcast.60" [label="broadcast.60 \n f32[8,16]"];
	"constant.47" [label="constant.47 \n f32[1]"];
	"compare.1077" [label="compare.1077 \n pred[1]"];
	"constant.48" [label="constant.48 \n f32[1]"];
	"select.1079" [label="select.1079 \n f32[1]"];
	"constant.192" [label="constant.192 \n f32[1]"];
	"multiply.178" [label="multiply.178 \n f32[1]"];
	"reshape.671" [label="reshape.671 \n f32[] reshape(f32[1]"];
	"broadcast.62" [label="broadcast.62 \n f32[8,16]"];
	"multiply.1084" [label="multiply.1084 \n f32[8,16]"];
	"broadcast.1102" [label="broadcast.1102 \n f32[8,16]"];
	"multiply.1103" [label="multiply.1103 \n f32[8,16]"];
	"add.1111" [label="add.1111 \n f32[8,16]"];
	"multiply.63" [label="multiply.63 \n f32[] multiply(f32[] %constant.49, f32[] %p37.707), metadata="];
	"broadcast.65" [label="broadcast.65 \n f32[8,16]"];
	"multiply.1092" [label="multiply.1092 \n f32[8,16]"];
	"broadcast.1093" [label="broadcast.1093 \n f32[8,16]"];
	"multiply.1094" [label="multiply.1094 \n f32[8,16]"];
	"add.1095" [label="add.1095 \n f32[8,16]"];
	"sqrt.1096" [label="sqrt.1096 \n f32[8,16]"];
	"broadcast.1097" [label="broadcast.1097 \n f32[8,16]"];
	"add.1098" [label="add.1098 \n f32[8,16]"];
	"divide.1113" [label="divide.1113 \n f32[8,16]"];
	"constant.1067" [label="constant.1067 \n f32[] constant(-0), metadata="];
	"broadcast.1114" [label="broadcast.1114 \n f32[8,16]"];
	"multiply.1115" [label="multiply.1115 \n f32[8,16]"];
	"add.1116" [label="add.1116 \n f32[8,16]"];
	"constant.1062" [label="constant.1062 \n f32[] constant(-0), metadata="];
	"broadcast.1066" [label="broadcast.1066 \n f32[8,16]"];
	"multiply.1117" [label="multiply.1117 \n f32[8,16]"];
	"add.1118" [label="add.1118 \n f32[8,16]"];
	"p48.1163" [label="p48.1163 \n f32[8]"];
	"multiply.64" [label="multiply.64 \n f32[] multiply(f32[] %constant.50, f32[] %p39.728), metadata="];
	"broadcast.68" [label="broadcast.68 \n f32[8]"];
	"constant.52" [label="constant.52 \n f32[1]"];
	"compare.1129" [label="compare.1129 \n pred[1]"];
	"constant.53" [label="constant.53 \n f32[1]"];
	"select.1131" [label="select.1131 \n f32[1]"];
	"constant.193" [label="constant.193 \n f32[1]"];
	"multiply.179" [label="multiply.179 \n f32[1]"];
	"reshape.674" [label="reshape.674 \n f32[] reshape(f32[1]"];
	"broadcast.69" [label="broadcast.69 \n f32[8]"];
	"multiply.1135" [label="multiply.1135 \n f32[8]"];
	"broadcast.1153" [label="broadcast.1153 \n f32[8]"];
	"multiply.1154" [label="multiply.1154 \n f32[8]"];
	"add.1162" [label="add.1162 \n f32[8]"];
	"multiply.67" [label="multiply.67 \n f32[] multiply(f32[] %constant.54, f32[] %p37.707), metadata="];
	"broadcast.72" [label="broadcast.72 \n f32[8]"];
	"multiply.1143" [label="multiply.1143 \n f32[8]"];
	"broadcast.1144" [label="broadcast.1144 \n f32[8]"];
	"multiply.1145" [label="multiply.1145 \n f32[8]"];
	"add.1146" [label="add.1146 \n f32[8]"];
	"sqrt.1147" [label="sqrt.1147 \n f32[8]"];
	"broadcast.1148" [label="broadcast.1148 \n f32[8]"];
	"add.1149" [label="add.1149 \n f32[8]"];
	"divide.1164" [label="divide.1164 \n f32[8]"];
	"constant.1119" [label="constant.1119 \n f32[] constant(-0), metadata="];
	"broadcast.1165" [label="broadcast.1165 \n f32[8]"];
	"multiply.1166" [label="multiply.1166 \n f32[8]"];
	"add.1167" [label="add.1167 \n f32[8]"];
	"p49.1218" [label="p49.1218 \n f32[8,16]"];
	"multiply.68" [label="multiply.68 \n f32[] multiply(f32[] %constant.55, f32[] %p39.728), metadata="];
	"broadcast.75" [label="broadcast.75 \n f32[8,16]"];
	"constant.57" [label="constant.57 \n f32[1]"];
	"compare.1183" [label="compare.1183 \n pred[1]"];
	"constant.58" [label="constant.58 \n f32[1]"];
	"select.1185" [label="select.1185 \n f32[1]"];
	"constant.194" [label="constant.194 \n f32[1]"];
	"multiply.180" [label="multiply.180 \n f32[1]"];
	"reshape.677" [label="reshape.677 \n f32[] reshape(f32[1]"];
	"broadcast.77" [label="broadcast.77 \n f32[8,16]"];
	"multiply.1190" [label="multiply.1190 \n f32[8,16]"];
	"broadcast.1208" [label="broadcast.1208 \n f32[8,16]"];
	"multiply.1209" [label="multiply.1209 \n f32[8,16]"];
	"add.1217" [label="add.1217 \n f32[8,16]"];
	"multiply.71" [label="multiply.71 \n f32[] multiply(f32[] %constant.59, f32[] %p37.707), metadata="];
	"broadcast.80" [label="broadcast.80 \n f32[8,16]"];
	"multiply.1198" [label="multiply.1198 \n f32[8,16]"];
	"broadcast.1199" [label="broadcast.1199 \n f32[8,16]"];
	"multiply.1200" [label="multiply.1200 \n f32[8,16]"];
	"add.1201" [label="add.1201 \n f32[8,16]"];
	"sqrt.1202" [label="sqrt.1202 \n f32[8,16]"];
	"broadcast.1203" [label="broadcast.1203 \n f32[8,16]"];
	"add.1204" [label="add.1204 \n f32[8,16]"];
	"divide.1219" [label="divide.1219 \n f32[8,16]"];
	"constant.1173" [label="constant.1173 \n f32[] constant(-0), metadata="];
	"broadcast.1220" [label="broadcast.1220 \n f32[8,16]"];
	"multiply.1221" [label="multiply.1221 \n f32[8,16]"];
	"add.1222" [label="add.1222 \n f32[8,16]"];
	"constant.1168" [label="constant.1168 \n f32[] constant(-0), metadata="];
	"broadcast.1172" [label="broadcast.1172 \n f32[8,16]"];
	"multiply.1223" [label="multiply.1223 \n f32[8,16]"];
	"add.1224" [label="add.1224 \n f32[8,16]"];
	"p50.1269" [label="p50.1269 \n f32[8]"];
	"multiply.72" [label="multiply.72 \n f32[] multiply(f32[] %constant.60, f32[] %p39.728), metadata="];
	"broadcast.83" [label="broadcast.83 \n f32[8]"];
	"constant.62" [label="constant.62 \n f32[1]"];
	"compare.1235" [label="compare.1235 \n pred[1]"];
	"constant.63" [label="constant.63 \n f32[1]"];
	"select.1237" [label="select.1237 \n f32[1]"];
	"constant.196" [label="constant.196 \n f32[1]"];
	"multiply.182" [label="multiply.182 \n f32[1]"];
	"reshape.680" [label="reshape.680 \n f32[] reshape(f32[1]"];
	"broadcast.84" [label="broadcast.84 \n f32[8]"];
	"multiply.1241" [label="multiply.1241 \n f32[8]"];
	"broadcast.1259" [label="broadcast.1259 \n f32[8]"];
	"multiply.1260" [label="multiply.1260 \n f32[8]"];
	"add.1268" [label="add.1268 \n f32[8]"];
	"multiply.75" [label="multiply.75 \n f32[] multiply(f32[] %constant.64, f32[] %p37.707), metadata="];
	"broadcast.87" [label="broadcast.87 \n f32[8]"];
	"multiply.1249" [label="multiply.1249 \n f32[8]"];
	"broadcast.1250" [label="broadcast.1250 \n f32[8]"];
	"multiply.1251" [label="multiply.1251 \n f32[8]"];
	"add.1252" [label="add.1252 \n f32[8]"];
	"sqrt.1253" [label="sqrt.1253 \n f32[8]"];
	"broadcast.1254" [label="broadcast.1254 \n f32[8]"];
	"add.1255" [label="add.1255 \n f32[8]"];
	"divide.1270" [label="divide.1270 \n f32[8]"];
	"constant.1225" [label="constant.1225 \n f32[] constant(-0), metadata="];
	"broadcast.1271" [label="broadcast.1271 \n f32[8]"];
	"multiply.1272" [label="multiply.1272 \n f32[8]"];
	"add.1273" [label="add.1273 \n f32[8]"];
	"p51.1324" [label="p51.1324 \n f32[16,8]"];
	"multiply.76" [label="multiply.76 \n f32[] multiply(f32[] %constant.65, f32[] %p39.728), metadata="];
	"broadcast.90" [label="broadcast.90 \n f32[16,8]"];
	"constant.67" [label="constant.67 \n f32[1]"];
	"compare.1289" [label="compare.1289 \n pred[1]"];
	"constant.68" [label="constant.68 \n f32[1]"];
	"select.1291" [label="select.1291 \n f32[1]"];
	"constant.197" [label="constant.197 \n f32[1]"];
	"multiply.183" [label="multiply.183 \n f32[1]"];
	"reshape.683" [label="reshape.683 \n f32[] reshape(f32[1]"];
	"broadcast.92" [label="broadcast.92 \n f32[16,8]"];
	"multiply.1296" [label="multiply.1296 \n f32[16,8]"];
	"broadcast.1314" [label="broadcast.1314 \n f32[16,8]"];
	"multiply.1315" [label="multiply.1315 \n f32[16,8]"];
	"add.1323" [label="add.1323 \n f32[16,8]"];
	"multiply.79" [label="multiply.79 \n f32[] multiply(f32[] %constant.69, f32[] %p37.707), metadata="];
	"broadcast.95" [label="broadcast.95 \n f32[16,8]"];
	"multiply.1304" [label="multiply.1304 \n f32[16,8]"];
	"broadcast.1305" [label="broadcast.1305 \n f32[16,8]"];
	"multiply.1306" [label="multiply.1306 \n f32[16,8]"];
	"add.1307" [label="add.1307 \n f32[16,8]"];
	"sqrt.1308" [label="sqrt.1308 \n f32[16,8]"];
	"broadcast.1309" [label="broadcast.1309 \n f32[16,8]"];
	"add.1310" [label="add.1310 \n f32[16,8]"];
	"divide.1325" [label="divide.1325 \n f32[16,8]"];
	"constant.1279" [label="constant.1279 \n f32[] constant(-0), metadata="];
	"broadcast.1326" [label="broadcast.1326 \n f32[16,8]"];
	"multiply.1327" [label="multiply.1327 \n f32[16,8]"];
	"add.1328" [label="add.1328 \n f32[16,8]"];
	"constant.1274" [label="constant.1274 \n f32[] constant(-0), metadata="];
	"broadcast.1278" [label="broadcast.1278 \n f32[16,8]"];
	"multiply.1329" [label="multiply.1329 \n f32[16,8]"];
	"add.1330" [label="add.1330 \n f32[16,8]"];
	"p52.1375" [label="p52.1375 \n f32[16]"];
	"multiply.80" [label="multiply.80 \n f32[] multiply(f32[] %constant.70, f32[] %p39.728), metadata="];
	"broadcast.98" [label="broadcast.98 \n f32[16]"];
	"constant.72" [label="constant.72 \n f32[1]"];
	"compare.1341" [label="compare.1341 \n pred[1]"];
	"constant.73" [label="constant.73 \n f32[1]"];
	"select.1343" [label="select.1343 \n f32[1]"];
	"constant.198" [label="constant.198 \n f32[1]"];
	"multiply.184" [label="multiply.184 \n f32[1]"];
	"reshape.686" [label="reshape.686 \n f32[] reshape(f32[1]"];
	"broadcast.99" [label="broadcast.99 \n f32[16]"];
	"multiply.1347" [label="multiply.1347 \n f32[16]"];
	"broadcast.1365" [label="broadcast.1365 \n f32[16]"];
	"multiply.1366" [label="multiply.1366 \n f32[16]"];
	"add.1374" [label="add.1374 \n f32[16]"];
	"multiply.83" [label="multiply.83 \n f32[] multiply(f32[] %constant.74, f32[] %p37.707), metadata="];
	"broadcast.102" [label="broadcast.102 \n f32[16]"];
	"multiply.1355" [label="multiply.1355 \n f32[16]"];
	"broadcast.1356" [label="broadcast.1356 \n f32[16]"];
	"multiply.1357" [label="multiply.1357 \n f32[16]"];
	"add.1358" [label="add.1358 \n f32[16]"];
	"sqrt.1359" [label="sqrt.1359 \n f32[16]"];
	"broadcast.1360" [label="broadcast.1360 \n f32[16]"];
	"add.1361" [label="add.1361 \n f32[16]"];
	"divide.1376" [label="divide.1376 \n f32[16]"];
	"constant.1331" [label="constant.1331 \n f32[] constant(-0), metadata="];
	"broadcast.1377" [label="broadcast.1377 \n f32[16]"];
	"multiply.1378" [label="multiply.1378 \n f32[16]"];
	"add.1379" [label="add.1379 \n f32[16]"];
	"p53.1424" [label="p53.1424 \n f32[16]"];
	"multiply.84" [label="multiply.84 \n f32[] multiply(f32[] %constant.75, f32[] %p39.728), metadata="];
	"broadcast.106" [label="broadcast.106 \n f32[16]"];
	"constant.77" [label="constant.77 \n f32[1]"];
	"compare.1390" [label="compare.1390 \n pred[1]"];
	"constant.78" [label="constant.78 \n f32[1]"];
	"select.1392" [label="select.1392 \n f32[1]"];
	"constant.200" [label="constant.200 \n f32[1]"];
	"multiply.186" [label="multiply.186 \n f32[1]"];
	"reshape.689" [label="reshape.689 \n f32[] reshape(f32[1]"];
	"broadcast.107" [label="broadcast.107 \n f32[16]"];
	"multiply.1396" [label="multiply.1396 \n f32[16]"];
	"broadcast.1414" [label="broadcast.1414 \n f32[16]"];
	"multiply.1415" [label="multiply.1415 \n f32[16]"];
	"add.1423" [label="add.1423 \n f32[16]"];
	"multiply.87" [label="multiply.87 \n f32[] multiply(f32[] %constant.79, f32[] %p37.707), metadata="];
	"broadcast.111" [label="broadcast.111 \n f32[16]"];
	"multiply.1404" [label="multiply.1404 \n f32[16]"];
	"broadcast.1405" [label="broadcast.1405 \n f32[16]"];
	"multiply.1406" [label="multiply.1406 \n f32[16]"];
	"add.1407" [label="add.1407 \n f32[16]"];
	"sqrt.1408" [label="sqrt.1408 \n f32[16]"];
	"broadcast.1409" [label="broadcast.1409 \n f32[16]"];
	"add.1410" [label="add.1410 \n f32[16]"];
	"divide.1425" [label="divide.1425 \n f32[16]"];
	"constant.1380" [label="constant.1380 \n f32[] constant(-0), metadata="];
	"broadcast.1426" [label="broadcast.1426 \n f32[16]"];
	"multiply.1427" [label="multiply.1427 \n f32[16]"];
	"add.1428" [label="add.1428 \n f32[16]"];
	"p54.1473" [label="p54.1473 \n f32[16]"];
	"multiply.88" [label="multiply.88 \n f32[] multiply(f32[] %constant.80, f32[] %p39.728), metadata="];
	"broadcast.115" [label="broadcast.115 \n f32[16]"];
	"constant.82" [label="constant.82 \n f32[1]"];
	"compare.1439" [label="compare.1439 \n pred[1]"];
	"constant.83" [label="constant.83 \n f32[1]"];
	"select.1441" [label="select.1441 \n f32[1]"];
	"constant.201" [label="constant.201 \n f32[1]"];
	"multiply.187" [label="multiply.187 \n f32[1]"];
	"reshape.692" [label="reshape.692 \n f32[] reshape(f32[1]"];
	"broadcast.117" [label="broadcast.117 \n f32[16]"];
	"multiply.1445" [label="multiply.1445 \n f32[16]"];
	"broadcast.1463" [label="broadcast.1463 \n f32[16]"];
	"multiply.1464" [label="multiply.1464 \n f32[16]"];
	"add.1472" [label="add.1472 \n f32[16]"];
	"multiply.91" [label="multiply.91 \n f32[] multiply(f32[] %constant.84, f32[] %p37.707), metadata="];
	"broadcast.121" [label="broadcast.121 \n f32[16]"];
	"multiply.1453" [label="multiply.1453 \n f32[16]"];
	"broadcast.1454" [label="broadcast.1454 \n f32[16]"];
	"multiply.1455" [label="multiply.1455 \n f32[16]"];
	"add.1456" [label="add.1456 \n f32[16]"];
	"sqrt.1457" [label="sqrt.1457 \n f32[16]"];
	"broadcast.1458" [label="broadcast.1458 \n f32[16]"];
	"add.1459" [label="add.1459 \n f32[16]"];
	"divide.1474" [label="divide.1474 \n f32[16]"];
	"constant.1429" [label="constant.1429 \n f32[] constant(-0), metadata="];
	"broadcast.1475" [label="broadcast.1475 \n f32[16]"];
	"multiply.1476" [label="multiply.1476 \n f32[16]"];
	"add.1477" [label="add.1477 \n f32[16]"];
	"p55.1528" [label="p55.1528 \n f32[4096,16]"];
	"multiply.92" [label="multiply.92 \n f32[] multiply(f32[] %constant.85, f32[] %p39.728), metadata="];
	"broadcast.125" [label="broadcast.125 \n f32[4096,16]"];
	"constant.87" [label="constant.87 \n f32[1]"];
	"compare.1493" [label="compare.1493 \n pred[1]"];
	"constant.88" [label="constant.88 \n f32[1]"];
	"select.1495" [label="select.1495 \n f32[1]"];
	"constant.202" [label="constant.202 \n f32[1]"];
	"multiply.188" [label="multiply.188 \n f32[1]"];
	"reshape.695" [label="reshape.695 \n f32[] reshape(f32[1]"];
	"broadcast.127" [label="broadcast.127 \n f32[4096,16]"];
	"multiply.1500" [label="multiply.1500 \n f32[4096,16]"];
	"broadcast.1518" [label="broadcast.1518 \n f32[4096,16]"];
	"multiply.1519" [label="multiply.1519 \n f32[4096,16]"];
	"add.1527" [label="add.1527 \n f32[4096,16]"];
	"multiply.95" [label="multiply.95 \n f32[] multiply(f32[] %constant.89, f32[] %p37.707), metadata="];
	"broadcast.131" [label="broadcast.131 \n f32[4096,16]"];
	"multiply.1508" [label="multiply.1508 \n f32[4096,16]"];
	"broadcast.1509" [label="broadcast.1509 \n f32[4096,16]"];
	"multiply.1510" [label="multiply.1510 \n f32[4096,16]"];
	"add.1511" [label="add.1511 \n f32[4096,16]"];
	"sqrt.1512" [label="sqrt.1512 \n f32[4096,16]"];
	"broadcast.1513" [label="broadcast.1513 \n f32[4096,16]"];
	"add.1514" [label="add.1514 \n f32[4096,16]"];
	"divide.1529" [label="divide.1529 \n f32[4096,16]"];
	"constant.1483" [label="constant.1483 \n f32[] constant(-0), metadata="];
	"broadcast.1530" [label="broadcast.1530 \n f32[4096,16]"];
	"multiply.1531" [label="multiply.1531 \n f32[4096,16]"];
	"add.1532" [label="add.1532 \n f32[4096,16]"];
	"constant.1478" [label="constant.1478 \n f32[] constant(-0), metadata="];
	"broadcast.1482" [label="broadcast.1482 \n f32[4096,16]"];
	"multiply.1533" [label="multiply.1533 \n f32[4096,16]"];
	"add.1534" [label="add.1534 \n f32[4096,16]"];
	"p56.1579" [label="p56.1579 \n f32[4096]"];
	"multiply.96" [label="multiply.96 \n f32[] multiply(f32[] %constant.90, f32[] %p39.728), metadata="];
	"broadcast.135" [label="broadcast.135 \n f32[4096]"];
	"constant.92" [label="constant.92 \n f32[1]"];
	"compare.1545" [label="compare.1545 \n pred[1]"];
	"constant.93" [label="constant.93 \n f32[1]"];
	"select.1547" [label="select.1547 \n f32[1]"];
	"constant.204" [label="constant.204 \n f32[1]"];
	"multiply.190" [label="multiply.190 \n f32[1]"];
	"reshape.698" [label="reshape.698 \n f32[] reshape(f32[1]"];
	"broadcast.137" [label="broadcast.137 \n f32[4096]"];
	"multiply.1551" [label="multiply.1551 \n f32[4096]"];
	"broadcast.1569" [label="broadcast.1569 \n f32[4096]"];
	"multiply.1570" [label="multiply.1570 \n f32[4096]"];
	"add.1578" [label="add.1578 \n f32[4096]"];
	"multiply.99" [label="multiply.99 \n f32[] multiply(f32[] %constant.94, f32[] %p37.707), metadata="];
	"broadcast.141" [label="broadcast.141 \n f32[4096]"];
	"multiply.1559" [label="multiply.1559 \n f32[4096]"];
	"broadcast.1560" [label="broadcast.1560 \n f32[4096]"];
	"multiply.1561" [label="multiply.1561 \n f32[4096]"];
	"add.1562" [label="add.1562 \n f32[4096]"];
	"sqrt.1563" [label="sqrt.1563 \n f32[4096]"];
	"broadcast.1564" [label="broadcast.1564 \n f32[4096]"];
	"add.1565" [label="add.1565 \n f32[4096]"];
	"divide.1580" [label="divide.1580 \n f32[4096]"];
	"constant.1535" [label="constant.1535 \n f32[] constant(-0), metadata="];
	"broadcast.1581" [label="broadcast.1581 \n f32[4096]"];
	"multiply.1582" [label="multiply.1582 \n f32[4096]"];
	"add.1583" [label="add.1583 \n f32[4096]"];
	"p57.1634" [label="p57.1634 \n f32[16,4096]"];
	"multiply.100" [label="multiply.100 \n f32[] multiply(f32[] %constant.95, f32[] %p39.728), metadata="];
	"broadcast.145" [label="broadcast.145 \n f32[16,4096]"];
	"constant.97" [label="constant.97 \n f32[1]"];
	"compare.1599" [label="compare.1599 \n pred[1]"];
	"constant.98" [label="constant.98 \n f32[1]"];
	"select.1601" [label="select.1601 \n f32[1]"];
	"constant.205" [label="constant.205 \n f32[1]"];
	"multiply.191" [label="multiply.191 \n f32[1]"];
	"reshape.701" [label="reshape.701 \n f32[] reshape(f32[1]"];
	"broadcast.147" [label="broadcast.147 \n f32[16,4096]"];
	"multiply.1606" [label="multiply.1606 \n f32[16,4096]"];
	"broadcast.1624" [label="broadcast.1624 \n f32[16,4096]"];
	"multiply.1625" [label="multiply.1625 \n f32[16,4096]"];
	"add.1633" [label="add.1633 \n f32[16,4096]"];
	"multiply.103" [label="multiply.103 \n f32[] multiply(f32[] %constant.99, f32[] %p37.707), metadata="];
	"broadcast.151" [label="broadcast.151 \n f32[16,4096]"];
	"multiply.1614" [label="multiply.1614 \n f32[16,4096]"];
	"broadcast.1615" [label="broadcast.1615 \n f32[16,4096]"];
	"multiply.1616" [label="multiply.1616 \n f32[16,4096]"];
	"add.1617" [label="add.1617 \n f32[16,4096]"];
	"sqrt.1618" [label="sqrt.1618 \n f32[16,4096]"];
	"broadcast.1619" [label="broadcast.1619 \n f32[16,4096]"];
	"add.1620" [label="add.1620 \n f32[16,4096]"];
	"divide.1635" [label="divide.1635 \n f32[16,4096]"];
	"constant.1589" [label="constant.1589 \n f32[] constant(-0), metadata="];
	"broadcast.1636" [label="broadcast.1636 \n f32[16,4096]"];
	"multiply.1637" [label="multiply.1637 \n f32[16,4096]"];
	"add.1638" [label="add.1638 \n f32[16,4096]"];
	"constant.1584" [label="constant.1584 \n f32[] constant(-0), metadata="];
	"broadcast.1588" [label="broadcast.1588 \n f32[16,4096]"];
	"multiply.1639" [label="multiply.1639 \n f32[16,4096]"];
	"add.1640" [label="add.1640 \n f32[16,4096]"];
	"p58.1685" [label="p58.1685 \n f32[16]"];
	"multiply.104" [label="multiply.104 \n f32[] multiply(f32[] %constant.100, f32[] %p39.728), metadata="];
	"broadcast.155" [label="broadcast.155 \n f32[16]"];
	"constant.102" [label="constant.102 \n f32[1]"];
	"compare.1651" [label="compare.1651 \n pred[1]"];
	"constant.104" [label="constant.104 \n f32[1]"];
	"select.1653" [label="select.1653 \n f32[1]"];
	"constant.206" [label="constant.206 \n f32[1]"];
	"multiply.192" [label="multiply.192 \n f32[1]"];
	"reshape.705" [label="reshape.705 \n f32[] reshape(f32[1]"];
	"broadcast.157" [label="broadcast.157 \n f32[16]"];
	"multiply.1657" [label="multiply.1657 \n f32[16]"];
	"broadcast.1675" [label="broadcast.1675 \n f32[16]"];
	"multiply.1676" [label="multiply.1676 \n f32[16]"];
	"add.1684" [label="add.1684 \n f32[16]"];
	"multiply.108" [label="multiply.108 \n f32[] multiply(f32[] %constant.105, f32[] %p37.707), metadata="];
	"broadcast.161" [label="broadcast.161 \n f32[16]"];
	"multiply.1665" [label="multiply.1665 \n f32[16]"];
	"broadcast.1666" [label="broadcast.1666 \n f32[16]"];
	"multiply.1667" [label="multiply.1667 \n f32[16]"];
	"add.1668" [label="add.1668 \n f32[16]"];
	"sqrt.1669" [label="sqrt.1669 \n f32[16]"];
	"broadcast.1670" [label="broadcast.1670 \n f32[16]"];
	"add.1671" [label="add.1671 \n f32[16]"];
	"divide.1686" [label="divide.1686 \n f32[16]"];
	"constant.1641" [label="constant.1641 \n f32[] constant(-0), metadata="];
	"broadcast.1687" [label="broadcast.1687 \n f32[16]"];
	"multiply.1688" [label="multiply.1688 \n f32[16]"];
	"add.1689" [label="add.1689 \n f32[16]"];
	"p59.1734" [label="p59.1734 \n f32[16]"];
	"multiply.110" [label="multiply.110 \n f32[] multiply(f32[] %constant.106, f32[] %p39.728), metadata="];
	"broadcast.165" [label="broadcast.165 \n f32[16]"];
	"constant.109" [label="constant.109 \n f32[1]"];
	"compare.1700" [label="compare.1700 \n pred[1]"];
	"constant.110" [label="constant.110 \n f32[1]"];
	"select.1702" [label="select.1702 \n f32[1]"];
	"constant.208" [label="constant.208 \n f32[1]"];
	"multiply.194" [label="multiply.194 \n f32[1]"];
	"reshape.708" [label="reshape.708 \n f32[] reshape(f32[1]"];
	"broadcast.166" [label="broadcast.166 \n f32[16]"];
	"multiply.1706" [label="multiply.1706 \n f32[16]"];
	"broadcast.1724" [label="broadcast.1724 \n f32[16]"];
	"multiply.1725" [label="multiply.1725 \n f32[16]"];
	"add.1733" [label="add.1733 \n f32[16]"];
	"multiply.114" [label="multiply.114 \n f32[] multiply(f32[] %constant.112, f32[] %p37.707), metadata="];
	"broadcast.170" [label="broadcast.170 \n f32[16]"];
	"multiply.1714" [label="multiply.1714 \n f32[16]"];
	"broadcast.1715" [label="broadcast.1715 \n f32[16]"];
	"multiply.1716" [label="multiply.1716 \n f32[16]"];
	"add.1717" [label="add.1717 \n f32[16]"];
	"sqrt.1718" [label="sqrt.1718 \n f32[16]"];
	"broadcast.1719" [label="broadcast.1719 \n f32[16]"];
	"add.1720" [label="add.1720 \n f32[16]"];
	"divide.1735" [label="divide.1735 \n f32[16]"];
	"constant.1690" [label="constant.1690 \n f32[] constant(-0), metadata="];
	"broadcast.1736" [label="broadcast.1736 \n f32[16]"];
	"multiply.1737" [label="multiply.1737 \n f32[16]"];
	"add.1738" [label="add.1738 \n f32[16]"];
	"p60.1783" [label="p60.1783 \n f32[16]"];
	"multiply.115" [label="multiply.115 \n f32[] multiply(f32[] %constant.113, f32[] %p39.728), metadata="];
	"broadcast.174" [label="broadcast.174 \n f32[16]"];
	"constant.116" [label="constant.116 \n f32[1]"];
	"compare.1749" [label="compare.1749 \n pred[1]"];
	"constant.117" [label="constant.117 \n f32[1]"];
	"select.1751" [label="select.1751 \n f32[1]"];
	"constant.209" [label="constant.209 \n f32[1]"];
	"multiply.195" [label="multiply.195 \n f32[1]"];
	"reshape.713" [label="reshape.713 \n f32[] reshape(f32[1]"];
	"broadcast.175" [label="broadcast.175 \n f32[16]"];
	"multiply.1755" [label="multiply.1755 \n f32[16]"];
	"broadcast.1773" [label="broadcast.1773 \n f32[16]"];
	"multiply.1774" [label="multiply.1774 \n f32[16]"];
	"add.1782" [label="add.1782 \n f32[16]"];
	"multiply.119" [label="multiply.119 \n f32[] multiply(f32[] %constant.118, f32[] %p37.707), metadata="];
	"broadcast.179" [label="broadcast.179 \n f32[16]"];
	"multiply.1763" [label="multiply.1763 \n f32[16]"];
	"broadcast.1764" [label="broadcast.1764 \n f32[16]"];
	"multiply.1765" [label="multiply.1765 \n f32[16]"];
	"add.1766" [label="add.1766 \n f32[16]"];
	"sqrt.1767" [label="sqrt.1767 \n f32[16]"];
	"broadcast.1768" [label="broadcast.1768 \n f32[16]"];
	"add.1769" [label="add.1769 \n f32[16]"];
	"divide.1784" [label="divide.1784 \n f32[16]"];
	"constant.1739" [label="constant.1739 \n f32[] constant(-0), metadata="];
	"broadcast.1785" [label="broadcast.1785 \n f32[16]"];
	"multiply.1786" [label="multiply.1786 \n f32[16]"];
	"add.1787" [label="add.1787 \n f32[16]"];
	"p61.1838" [label="p61.1838 \n f32[16,16]"];
	"multiply.120" [label="multiply.120 \n f32[] multiply(f32[] %constant.120, f32[] %p39.728), metadata="];
	"broadcast.183" [label="broadcast.183 \n f32[16,16]"];
	"constant.122" [label="constant.122 \n f32[1]"];
	"compare.1803" [label="compare.1803 \n pred[1]"];
	"constant.124" [label="constant.124 \n f32[1]"];
	"select.1805" [label="select.1805 \n f32[1]"];
	"constant.210" [label="constant.210 \n f32[1]"];
	"multiply.196" [label="multiply.196 \n f32[1]"];
	"reshape.716" [label="reshape.716 \n f32[] reshape(f32[1]"];
	"broadcast.186" [label="broadcast.186 \n f32[16,16]"];
	"multiply.1810" [label="multiply.1810 \n f32[16,16]"];
	"broadcast.1828" [label="broadcast.1828 \n f32[16,16]"];
	"multiply.1829" [label="multiply.1829 \n f32[16,16]"];
	"add.1837" [label="add.1837 \n f32[16,16]"];
	"multiply.124" [label="multiply.124 \n f32[] multiply(f32[] %constant.125, f32[] %p37.707), metadata="];
	"broadcast.190" [label="broadcast.190 \n f32[16,16]"];
	"multiply.1818" [label="multiply.1818 \n f32[16,16]"];
	"broadcast.1819" [label="broadcast.1819 \n f32[16,16]"];
	"multiply.1820" [label="multiply.1820 \n f32[16,16]"];
	"add.1821" [label="add.1821 \n f32[16,16]"];
	"sqrt.1822" [label="sqrt.1822 \n f32[16,16]"];
	"broadcast.1823" [label="broadcast.1823 \n f32[16,16]"];
	"add.1824" [label="add.1824 \n f32[16,16]"];
	"divide.1839" [label="divide.1839 \n f32[16,16]"];
	"constant.1793" [label="constant.1793 \n f32[] constant(-0), metadata="];
	"broadcast.1840" [label="broadcast.1840 \n f32[16,16]"];
	"multiply.1841" [label="multiply.1841 \n f32[16,16]"];
	"add.1842" [label="add.1842 \n f32[16,16]"];
	"constant.1788" [label="constant.1788 \n f32[] constant(-0), metadata="];
	"broadcast.1792" [label="broadcast.1792 \n f32[16,16]"];
	"multiply.1843" [label="multiply.1843 \n f32[16,16]"];
	"add.1844" [label="add.1844 \n f32[16,16]"];
	"p62.1889" [label="p62.1889 \n f32[16]"];
	"multiply.126" [label="multiply.126 \n f32[] multiply(f32[] %constant.126, f32[] %p39.728), metadata="];
	"broadcast.194" [label="broadcast.194 \n f32[16]"];
	"constant.129" [label="constant.129 \n f32[1]"];
	"compare.1855" [label="compare.1855 \n pred[1]"];
	"constant.130" [label="constant.130 \n f32[1]"];
	"select.1857" [label="select.1857 \n f32[1]"];
	"constant.212" [label="constant.212 \n f32[1]"];
	"multiply.198" [label="multiply.198 \n f32[1]"];
	"reshape.719" [label="reshape.719 \n f32[] reshape(f32[1]"];
	"broadcast.195" [label="broadcast.195 \n f32[16]"];
	"multiply.1861" [label="multiply.1861 \n f32[16]"];
	"broadcast.1879" [label="broadcast.1879 \n f32[16]"];
	"multiply.1880" [label="multiply.1880 \n f32[16]"];
	"add.1888" [label="add.1888 \n f32[16]"];
	"multiply.130" [label="multiply.130 \n f32[] multiply(f32[] %constant.132, f32[] %p37.707), metadata="];
	"broadcast.199" [label="broadcast.199 \n f32[16]"];
	"multiply.1869" [label="multiply.1869 \n f32[16]"];
	"broadcast.1870" [label="broadcast.1870 \n f32[16]"];
	"multiply.1871" [label="multiply.1871 \n f32[16]"];
	"add.1872" [label="add.1872 \n f32[16]"];
	"sqrt.1873" [label="sqrt.1873 \n f32[16]"];
	"broadcast.1874" [label="broadcast.1874 \n f32[16]"];
	"add.1875" [label="add.1875 \n f32[16]"];
	"divide.1890" [label="divide.1890 \n f32[16]"];
	"constant.1845" [label="constant.1845 \n f32[] constant(-0), metadata="];
	"broadcast.1891" [label="broadcast.1891 \n f32[16]"];
	"multiply.1892" [label="multiply.1892 \n f32[16]"];
	"add.1893" [label="add.1893 \n f32[16]"];
	"p63.1944" [label="p63.1944 \n f32[16,16]"];
	"multiply.131" [label="multiply.131 \n f32[] multiply(f32[] %constant.133, f32[] %p39.728), metadata="];
	"broadcast.203" [label="broadcast.203 \n f32[16,16]"];
	"constant.136" [label="constant.136 \n f32[1]"];
	"compare.1909" [label="compare.1909 \n pred[1]"];
	"constant.137" [label="constant.137 \n f32[1]"];
	"select.1911" [label="select.1911 \n f32[1]"];
	"constant.213" [label="constant.213 \n f32[1]"];
	"multiply.199" [label="multiply.199 \n f32[1]"];
	"reshape.722" [label="reshape.722 \n f32[] reshape(f32[1]"];
	"broadcast.206" [label="broadcast.206 \n f32[16,16]"];
	"multiply.1916" [label="multiply.1916 \n f32[16,16]"];
	"broadcast.1934" [label="broadcast.1934 \n f32[16,16]"];
	"multiply.1935" [label="multiply.1935 \n f32[16,16]"];
	"add.1943" [label="add.1943 \n f32[16,16]"];
	"multiply.135" [label="multiply.135 \n f32[] multiply(f32[] %constant.138, f32[] %p37.707), metadata="];
	"broadcast.210" [label="broadcast.210 \n f32[16,16]"];
	"multiply.1924" [label="multiply.1924 \n f32[16,16]"];
	"broadcast.1925" [label="broadcast.1925 \n f32[16,16]"];
	"multiply.1926" [label="multiply.1926 \n f32[16,16]"];
	"add.1927" [label="add.1927 \n f32[16,16]"];
	"sqrt.1928" [label="sqrt.1928 \n f32[16,16]"];
	"broadcast.1929" [label="broadcast.1929 \n f32[16,16]"];
	"add.1930" [label="add.1930 \n f32[16,16]"];
	"divide.1945" [label="divide.1945 \n f32[16,16]"];
	"constant.1899" [label="constant.1899 \n f32[] constant(-0), metadata="];
	"broadcast.1946" [label="broadcast.1946 \n f32[16,16]"];
	"multiply.1947" [label="multiply.1947 \n f32[16,16]"];
	"add.1948" [label="add.1948 \n f32[16,16]"];
	"constant.1894" [label="constant.1894 \n f32[] constant(-0), metadata="];
	"broadcast.1898" [label="broadcast.1898 \n f32[16,16]"];
	"multiply.1949" [label="multiply.1949 \n f32[16,16]"];
	"add.1950" [label="add.1950 \n f32[16,16]"];
	"p64.1995" [label="p64.1995 \n f32[16]"];
	"multiply.136" [label="multiply.136 \n f32[] multiply(f32[] %constant.140, f32[] %p39.728), metadata="];
	"broadcast.214" [label="broadcast.214 \n f32[16]"];
	"constant.142" [label="constant.142 \n f32[1]"];
	"compare.1961" [label="compare.1961 \n pred[1]"];
	"constant.144" [label="constant.144 \n f32[1]"];
	"select.1963" [label="select.1963 \n f32[1]"];
	"constant.214" [label="constant.214 \n f32[1]"];
	"multiply.200" [label="multiply.200 \n f32[1]"];
	"reshape.727" [label="reshape.727 \n f32[] reshape(f32[1]"];
	"broadcast.215" [label="broadcast.215 \n f32[16]"];
	"multiply.1967" [label="multiply.1967 \n f32[16]"];
	"broadcast.1985" [label="broadcast.1985 \n f32[16]"];
	"multiply.1986" [label="multiply.1986 \n f32[16]"];
	"add.1994" [label="add.1994 \n f32[16]"];
	"multiply.140" [label="multiply.140 \n f32[] multiply(f32[] %constant.145, f32[] %p37.707), metadata="];
	"broadcast.219" [label="broadcast.219 \n f32[16]"];
	"multiply.1975" [label="multiply.1975 \n f32[16]"];
	"broadcast.1976" [label="broadcast.1976 \n f32[16]"];
	"multiply.1977" [label="multiply.1977 \n f32[16]"];
	"add.1978" [label="add.1978 \n f32[16]"];
	"sqrt.1979" [label="sqrt.1979 \n f32[16]"];
	"broadcast.1980" [label="broadcast.1980 \n f32[16]"];
	"add.1981" [label="add.1981 \n f32[16]"];
	"divide.1996" [label="divide.1996 \n f32[16]"];
	"constant.1951" [label="constant.1951 \n f32[] constant(-0), metadata="];
	"broadcast.1997" [label="broadcast.1997 \n f32[16]"];
	"multiply.1998" [label="multiply.1998 \n f32[16]"];
	"add.1999" [label="add.1999 \n f32[16]"];
	"p65.2044" [label="p65.2044 \n f32[16]"];
	"multiply.142" [label="multiply.142 \n f32[] multiply(f32[] %constant.146, f32[] %p39.728), metadata="];
	"broadcast.223" [label="broadcast.223 \n f32[16]"];
	"constant.149" [label="constant.149 \n f32[1]"];
	"compare.2010" [label="compare.2010 \n pred[1]"];
	"constant.150" [label="constant.150 \n f32[1]"];
	"select.2012" [label="select.2012 \n f32[1]"];
	"constant.216" [label="constant.216 \n f32[1]"];
	"multiply.202" [label="multiply.202 \n f32[1]"];
	"reshape.731" [label="reshape.731 \n f32[] reshape(f32[1]"];
	"broadcast.224" [label="broadcast.224 \n f32[16]"];
	"multiply.2016" [label="multiply.2016 \n f32[16]"];
	"broadcast.2034" [label="broadcast.2034 \n f32[16]"];
	"multiply.2035" [label="multiply.2035 \n f32[16]"];
	"add.2043" [label="add.2043 \n f32[16]"];
	"multiply.146" [label="multiply.146 \n f32[] multiply(f32[] %constant.152, f32[] %p37.707), metadata="];
	"broadcast.227" [label="broadcast.227 \n f32[16]"];
	"multiply.2024" [label="multiply.2024 \n f32[16]"];
	"broadcast.2025" [label="broadcast.2025 \n f32[16]"];
	"multiply.2026" [label="multiply.2026 \n f32[16]"];
	"add.2027" [label="add.2027 \n f32[16]"];
	"sqrt.2028" [label="sqrt.2028 \n f32[16]"];
	"broadcast.2029" [label="broadcast.2029 \n f32[16]"];
	"add.2030" [label="add.2030 \n f32[16]"];
	"divide.2045" [label="divide.2045 \n f32[16]"];
	"constant.2000" [label="constant.2000 \n f32[] constant(-0), metadata="];
	"broadcast.2046" [label="broadcast.2046 \n f32[16]"];
	"multiply.2047" [label="multiply.2047 \n f32[16]"];
	"add.2048" [label="add.2048 \n f32[16]"];
	"p66.2093" [label="p66.2093 \n f32[16]"];
	"multiply.147" [label="multiply.147 \n f32[] multiply(f32[] %constant.153, f32[] %p39.728), metadata="];
	"broadcast.230" [label="broadcast.230 \n f32[16]"];
	"constant.156" [label="constant.156 \n f32[1]"];
	"compare.2059" [label="compare.2059 \n pred[1]"];
	"constant.157" [label="constant.157 \n f32[1]"];
	"select.2061" [label="select.2061 \n f32[1]"];
	"constant.217" [label="constant.217 \n f32[1]"];
	"multiply.203" [label="multiply.203 \n f32[1]"];
	"reshape.735" [label="reshape.735 \n f32[] reshape(f32[1]"];
	"broadcast.231" [label="broadcast.231 \n f32[16]"];
	"multiply.2065" [label="multiply.2065 \n f32[16]"];
	"broadcast.2083" [label="broadcast.2083 \n f32[16]"];
	"multiply.2084" [label="multiply.2084 \n f32[16]"];
	"add.2092" [label="add.2092 \n f32[16]"];
	"multiply.151" [label="multiply.151 \n f32[] multiply(f32[] %constant.158, f32[] %p37.707), metadata="];
	"broadcast.234" [label="broadcast.234 \n f32[16]"];
	"multiply.2073" [label="multiply.2073 \n f32[16]"];
	"broadcast.2074" [label="broadcast.2074 \n f32[16]"];
	"multiply.2075" [label="multiply.2075 \n f32[16]"];
	"add.2076" [label="add.2076 \n f32[16]"];
	"sqrt.2077" [label="sqrt.2077 \n f32[16]"];
	"broadcast.2078" [label="broadcast.2078 \n f32[16]"];
	"add.2079" [label="add.2079 \n f32[16]"];
	"divide.2094" [label="divide.2094 \n f32[16]"];
	"constant.2049" [label="constant.2049 \n f32[] constant(-0), metadata="];
	"broadcast.2095" [label="broadcast.2095 \n f32[16]"];
	"multiply.2096" [label="multiply.2096 \n f32[16]"];
	"add.2097" [label="add.2097 \n f32[16]"];
	"p67.2142" [label="p67.2142 \n f32[30522]"];
	"multiply.152" [label="multiply.152 \n f32[] multiply(f32[] %constant.160, f32[] %p39.728), metadata="];
	"broadcast.237" [label="broadcast.237 \n f32[30522]"];
	"constant.162" [label="constant.162 \n f32[1]"];
	"compare.2108" [label="compare.2108 \n pred[1]"];
	"constant.164" [label="constant.164 \n f32[1]"];
	"select.2110" [label="select.2110 \n f32[1]"];
	"constant.218" [label="constant.218 \n f32[1]"];
	"multiply.204" [label="multiply.204 \n f32[1]"];
	"reshape.738" [label="reshape.738 \n f32[] reshape(f32[1]"];
	"broadcast.238" [label="broadcast.238 \n f32[30522]"];
	"multiply.2114" [label="multiply.2114 \n f32[30522]"];
	"broadcast.2132" [label="broadcast.2132 \n f32[30522]"];
	"multiply.2133" [label="multiply.2133 \n f32[30522]"];
	"add.2141" [label="add.2141 \n f32[30522]"];
	"multiply.156" [label="multiply.156 \n f32[] multiply(f32[] %constant.165, f32[] %p37.707), metadata="];
	"broadcast.241" [label="broadcast.241 \n f32[30522]"];
	"multiply.2122" [label="multiply.2122 \n f32[30522]"];
	"broadcast.2123" [label="broadcast.2123 \n f32[30522]"];
	"multiply.2124" [label="multiply.2124 \n f32[30522]"];
	"add.2125" [label="add.2125 \n f32[30522]"];
	"sqrt.2126" [label="sqrt.2126 \n f32[30522]"];
	"broadcast.2127" [label="broadcast.2127 \n f32[30522]"];
	"add.2128" [label="add.2128 \n f32[30522]"];
	"divide.2143" [label="divide.2143 \n f32[30522]"];
	"constant.2098" [label="constant.2098 \n f32[] constant(-0), metadata="];
	"broadcast.2144" [label="broadcast.2144 \n f32[30522]"];
	"multiply.2145" [label="multiply.2145 \n f32[30522]"];
	"add.2146" [label="add.2146 \n f32[30522]"];
	"p68.2197" [label="p68.2197 \n f32[2,16]"];
	"multiply.158" [label="multiply.158 \n f32[] multiply(f32[] %constant.166, f32[] %p39.728), metadata="];
	"broadcast.244" [label="broadcast.244 \n f32[2,16]"];
	"constant.169" [label="constant.169 \n f32[1]"];
	"compare.2162" [label="compare.2162 \n pred[1]"];
	"constant.170" [label="constant.170 \n f32[1]"];
	"select.2164" [label="select.2164 \n f32[1]"];
	"constant.220" [label="constant.220 \n f32[1]"];
	"multiply.206" [label="multiply.206 \n f32[1]"];
	"reshape.741" [label="reshape.741 \n f32[] reshape(f32[1]"];
	"broadcast.246" [label="broadcast.246 \n f32[2,16]"];
	"multiply.2169" [label="multiply.2169 \n f32[2,16]"];
	"broadcast.2187" [label="broadcast.2187 \n f32[2,16]"];
	"multiply.2188" [label="multiply.2188 \n f32[2,16]"];
	"add.2196" [label="add.2196 \n f32[2,16]"];
	"multiply.162" [label="multiply.162 \n f32[] multiply(f32[] %constant.172, f32[] %p37.707), metadata="];
	"broadcast.249" [label="broadcast.249 \n f32[2,16]"];
	"multiply.2177" [label="multiply.2177 \n f32[2,16]"];
	"broadcast.2178" [label="broadcast.2178 \n f32[2,16]"];
	"multiply.2179" [label="multiply.2179 \n f32[2,16]"];
	"add.2180" [label="add.2180 \n f32[2,16]"];
	"sqrt.2181" [label="sqrt.2181 \n f32[2,16]"];
	"broadcast.2182" [label="broadcast.2182 \n f32[2,16]"];
	"add.2183" [label="add.2183 \n f32[2,16]"];
	"divide.2198" [label="divide.2198 \n f32[2,16]"];
	"constant.2152" [label="constant.2152 \n f32[] constant(-0), metadata="];
	"broadcast.2199" [label="broadcast.2199 \n f32[2,16]"];
	"multiply.2200" [label="multiply.2200 \n f32[2,16]"];
	"add.2201" [label="add.2201 \n f32[2,16]"];
	"constant.2147" [label="constant.2147 \n f32[] constant(-0), metadata="];
	"broadcast.2151" [label="broadcast.2151 \n f32[2,16]"];
	"multiply.2202" [label="multiply.2202 \n f32[2,16]"];
	"add.2203" [label="add.2203 \n f32[2,16]"];
	"p69.2248" [label="p69.2248 \n f32[2]"];
	"multiply.163" [label="multiply.163 \n f32[] multiply(f32[] %constant.173, f32[] %p39.728), metadata="];
	"broadcast.252" [label="broadcast.252 \n f32[2]"];
	"constant.176" [label="constant.176 \n f32[1]"];
	"compare.2214" [label="compare.2214 \n pred[1]"];
	"constant.177" [label="constant.177 \n f32[1]"];
	"select.2216" [label="select.2216 \n f32[1]"];
	"constant.221" [label="constant.221 \n f32[1]"];
	"multiply.207" [label="multiply.207 \n f32[1]"];
	"reshape.744" [label="reshape.744 \n f32[] reshape(f32[1]"];
	"broadcast.253" [label="broadcast.253 \n f32[2]"];
	"multiply.2220" [label="multiply.2220 \n f32[2]"];
	"broadcast.2238" [label="broadcast.2238 \n f32[2]"];
	"multiply.2239" [label="multiply.2239 \n f32[2]"];
	"add.2247" [label="add.2247 \n f32[2]"];
	"multiply.167" [label="multiply.167 \n f32[] multiply(f32[] %constant.178, f32[] %p37.707), metadata="];
	"broadcast.256" [label="broadcast.256 \n f32[2]"];
	"multiply.2228" [label="multiply.2228 \n f32[2]"];
	"broadcast.2229" [label="broadcast.2229 \n f32[2]"];
	"multiply.2230" [label="multiply.2230 \n f32[2]"];
	"add.2231" [label="add.2231 \n f32[2]"];
	"sqrt.2232" [label="sqrt.2232 \n f32[2]"];
	"broadcast.2233" [label="broadcast.2233 \n f32[2]"];
	"add.2234" [label="add.2234 \n f32[2]"];
	"divide.2249" [label="divide.2249 \n f32[2]"];
	"constant.2204" [label="constant.2204 \n f32[] constant(-0), metadata="];
	"broadcast.2250" [label="broadcast.2250 \n f32[2]"];
	"multiply.2251" [label="multiply.2251 \n f32[2]"];
	"add.2252" [label="add.2252 \n f32[2]"];
	"constant.180" [label="constant.180 \n f32[1]"];
	"constant.181" [label="constant.181 \n f32[1]"];
	"tuple.2259" [label="tuple.2259 \n (f32[30522,16]"]; 
 	"constant" -> "multiply.32";
	"p39.728" -> "multiply.32";
	"multiply.32" -> "broadcast.2";
	"p3.21" -> "reshape";
	"p4.22" -> "divide.24";
	"reshape" -> "divide.24";
	"divide.24" -> "all-reduce.32";
	"p2.20" -> "all-reduce.32";
	"AddComputation.28" -> "all-reduce.32";
	"all-reduce.32" -> "get-tuple-element.96";
	"p34.64" -> "all-reduce.101";
	"p33.63" -> "all-reduce.101";
	"p32.62" -> "all-reduce.101";
	"p31.61" -> "all-reduce.101";
	"p30.60" -> "all-reduce.101";
	"p29.59" -> "all-reduce.101";
	"p28.58" -> "all-reduce.101";
	"p27.57" -> "all-reduce.101";
	"p26.56" -> "all-reduce.101";
	"p25.55" -> "all-reduce.101";
	"p24.54" -> "all-reduce.101";
	"p23.53" -> "all-reduce.101";
	"p22.52" -> "all-reduce.101";
	"p21.51" -> "all-reduce.101";
	"p20.50" -> "all-reduce.101";
	"p19.49" -> "all-reduce.101";
	"p18.48" -> "all-reduce.101";
	"p17.47" -> "all-reduce.101";
	"p16.46" -> "all-reduce.101";
	"p15.45" -> "all-reduce.101";
	"p14.44" -> "all-reduce.101";
	"p13.43" -> "all-reduce.101";
	"p12.42" -> "all-reduce.101";
	"p11.41" -> "all-reduce.101";
	"p10.40" -> "all-reduce.101";
	"p9.39" -> "all-reduce.101";
	"p8.38" -> "all-reduce.101";
	"p7.37" -> "all-reduce.101";
	"p6.36" -> "all-reduce.101";
	"p5.35" -> "all-reduce.101";
	"get-tuple-element.96" -> "all-reduce.101";
	"AddComputation.97" -> "all-reduce.101";
	"all-reduce.101" -> "get-tuple-element.218";
	"constant.219" -> "broadcast.220";
	"get-tuple-element.218" -> "multiply.221";
	"broadcast.220" -> "multiply.221";
	"multiply.221" -> "multiply.603";
	"multiply.221" -> "multiply.603";
	"multiply.603" -> "reduce.610";
	"constant.604" -> "reduce.610";
	"AddComputation.606" -> "reduce.610";
	"reduce.610" -> "sqrt.611";
	"sqrt.611" -> "multiply.613";
	"sqrt.611" -> "multiply.613";
	"multiply.613" -> "reshape.1";
	"p36.614" -> "add.616";
	"reshape.1" -> "add.616";
	"all-reduce.101" -> "get-tuple-element.214";
	"constant.215" -> "broadcast.216";
	"get-tuple-element.214" -> "multiply.217";
	"broadcast.216" -> "multiply.217";
	"multiply.217" -> "multiply.590";
	"multiply.217" -> "multiply.590";
	"multiply.590" -> "reduce.597";
	"constant.591" -> "reduce.597";
	"AddComputation.593" -> "reduce.597";
	"reduce.597" -> "sqrt.598";
	"sqrt.598" -> "multiply.600";
	"sqrt.598" -> "multiply.600";
	"multiply.600" -> "reshape.3";
	"add.616" -> "add.618";
	"reshape.3" -> "add.618";
	"all-reduce.101" -> "get-tuple-element.210";
	"constant.211" -> "broadcast.212";
	"get-tuple-element.210" -> "multiply.213";
	"broadcast.212" -> "multiply.213";
	"multiply.213" -> "multiply.577";
	"multiply.213" -> "multiply.577";
	"multiply.577" -> "reduce.584";
	"constant.578" -> "reduce.584";
	"AddComputation.580" -> "reduce.584";
	"reduce.584" -> "sqrt.585";
	"sqrt.585" -> "multiply.587";
	"sqrt.585" -> "multiply.587";
	"multiply.587" -> "reshape.5";
	"add.618" -> "add.620";
	"reshape.5" -> "add.620";
	"all-reduce.101" -> "get-tuple-element.170";
	"constant.171" -> "broadcast.172";
	"get-tuple-element.170" -> "multiply.173";
	"broadcast.172" -> "multiply.173";
	"multiply.173" -> "multiply.564";
	"multiply.173" -> "multiply.564";
	"multiply.564" -> "reduce.571";
	"constant.565" -> "reduce.571";
	"AddComputation.567" -> "reduce.571";
	"reduce.571" -> "sqrt.572";
	"sqrt.572" -> "multiply.574";
	"sqrt.572" -> "multiply.574";
	"multiply.574" -> "reshape.6";
	"add.620" -> "add.622";
	"reshape.6" -> "add.622";
	"all-reduce.101" -> "get-tuple-element.166";
	"constant.167" -> "broadcast.168";
	"get-tuple-element.166" -> "multiply.169";
	"broadcast.168" -> "multiply.169";
	"multiply.169" -> "multiply.551";
	"multiply.169" -> "multiply.551";
	"multiply.551" -> "reduce.558";
	"constant.552" -> "reduce.558";
	"AddComputation.554" -> "reduce.558";
	"reduce.558" -> "sqrt.559";
	"sqrt.559" -> "multiply.561";
	"sqrt.559" -> "multiply.561";
	"multiply.561" -> "reshape.7";
	"add.622" -> "add.624";
	"reshape.7" -> "add.624";
	"all-reduce.101" -> "get-tuple-element.150";
	"constant.151" -> "broadcast.152";
	"get-tuple-element.150" -> "multiply.153";
	"broadcast.152" -> "multiply.153";
	"multiply.153" -> "multiply.538";
	"multiply.153" -> "multiply.538";
	"multiply.538" -> "reduce.545";
	"constant.539" -> "reduce.545";
	"AddComputation.541" -> "reduce.545";
	"reduce.545" -> "sqrt.546";
	"sqrt.546" -> "multiply.548";
	"sqrt.546" -> "multiply.548";
	"multiply.548" -> "reshape.8";
	"add.624" -> "add.626";
	"reshape.8" -> "add.626";
	"all-reduce.101" -> "get-tuple-element.146";
	"constant.147" -> "broadcast.148";
	"get-tuple-element.146" -> "multiply.149";
	"broadcast.148" -> "multiply.149";
	"multiply.149" -> "multiply.525";
	"multiply.149" -> "multiply.525";
	"multiply.525" -> "reduce.532";
	"constant.526" -> "reduce.532";
	"AddComputation.528" -> "reduce.532";
	"reduce.532" -> "sqrt.533";
	"sqrt.533" -> "multiply.535";
	"sqrt.533" -> "multiply.535";
	"multiply.535" -> "reshape.9";
	"add.626" -> "add.628";
	"reshape.9" -> "add.628";
	"all-reduce.101" -> "get-tuple-element.142";
	"constant.143" -> "broadcast.144";
	"get-tuple-element.142" -> "multiply.145";
	"broadcast.144" -> "multiply.145";
	"multiply.145" -> "multiply.512";
	"multiply.145" -> "multiply.512";
	"multiply.512" -> "reduce.519";
	"constant.513" -> "reduce.519";
	"AddComputation.515" -> "reduce.519";
	"reduce.519" -> "sqrt.520";
	"sqrt.520" -> "multiply.522";
	"sqrt.520" -> "multiply.522";
	"multiply.522" -> "reshape.10";
	"add.628" -> "add.630";
	"reshape.10" -> "add.630";
	"all-reduce.101" -> "get-tuple-element.190";
	"constant.191" -> "broadcast.192";
	"get-tuple-element.190" -> "multiply.193";
	"broadcast.192" -> "multiply.193";
	"multiply.193" -> "multiply.499";
	"multiply.193" -> "multiply.499";
	"multiply.499" -> "reduce.506";
	"constant.500" -> "reduce.506";
	"AddComputation.502" -> "reduce.506";
	"reduce.506" -> "sqrt.507";
	"sqrt.507" -> "multiply.509";
	"sqrt.507" -> "multiply.509";
	"multiply.509" -> "reshape.11";
	"add.630" -> "add.632";
	"reshape.11" -> "add.632";
	"all-reduce.101" -> "get-tuple-element.138";
	"constant.139" -> "broadcast.140";
	"get-tuple-element.138" -> "multiply.141";
	"broadcast.140" -> "multiply.141";
	"multiply.141" -> "multiply.486";
	"multiply.141" -> "multiply.486";
	"multiply.486" -> "reduce.493";
	"constant.487" -> "reduce.493";
	"AddComputation.489" -> "reduce.493";
	"reduce.493" -> "sqrt.494";
	"sqrt.494" -> "multiply.496";
	"sqrt.494" -> "multiply.496";
	"multiply.496" -> "reshape.13";
	"add.632" -> "add.634";
	"reshape.13" -> "add.634";
	"all-reduce.101" -> "get-tuple-element.186";
	"constant.187" -> "broadcast.188";
	"get-tuple-element.186" -> "multiply.189";
	"broadcast.188" -> "multiply.189";
	"multiply.189" -> "multiply.473";
	"multiply.189" -> "multiply.473";
	"multiply.473" -> "reduce.480";
	"constant.474" -> "reduce.480";
	"AddComputation.476" -> "reduce.480";
	"reduce.480" -> "sqrt.481";
	"sqrt.481" -> "multiply.483";
	"sqrt.481" -> "multiply.483";
	"multiply.483" -> "reshape.14";
	"add.634" -> "add.636";
	"reshape.14" -> "add.636";
	"all-reduce.101" -> "get-tuple-element.134";
	"constant.135" -> "broadcast.136";
	"get-tuple-element.134" -> "multiply.137";
	"broadcast.136" -> "multiply.137";
	"multiply.137" -> "multiply.460";
	"multiply.137" -> "multiply.460";
	"multiply.460" -> "reduce.467";
	"constant.461" -> "reduce.467";
	"AddComputation.463" -> "reduce.467";
	"reduce.467" -> "sqrt.468";
	"sqrt.468" -> "multiply.470";
	"sqrt.468" -> "multiply.470";
	"multiply.470" -> "reshape.15";
	"add.636" -> "add.638";
	"reshape.15" -> "add.638";
	"all-reduce.101" -> "get-tuple-element.130";
	"constant.131" -> "broadcast.132";
	"get-tuple-element.130" -> "multiply.133";
	"broadcast.132" -> "multiply.133";
	"multiply.133" -> "multiply.447";
	"multiply.133" -> "multiply.447";
	"multiply.447" -> "reduce.454";
	"constant.448" -> "reduce.454";
	"AddComputation.450" -> "reduce.454";
	"reduce.454" -> "sqrt.455";
	"sqrt.455" -> "multiply.457";
	"sqrt.455" -> "multiply.457";
	"multiply.457" -> "reshape.16";
	"add.638" -> "add.640";
	"reshape.16" -> "add.640";
	"all-reduce.101" -> "get-tuple-element.126";
	"constant.127" -> "broadcast.128";
	"get-tuple-element.126" -> "multiply.129";
	"broadcast.128" -> "multiply.129";
	"multiply.129" -> "multiply.434";
	"multiply.129" -> "multiply.434";
	"multiply.434" -> "reduce.441";
	"constant.435" -> "reduce.441";
	"AddComputation.437" -> "reduce.441";
	"reduce.441" -> "sqrt.442";
	"sqrt.442" -> "multiply.444";
	"sqrt.442" -> "multiply.444";
	"multiply.444" -> "reshape.17";
	"add.640" -> "add.642";
	"reshape.17" -> "add.642";
	"all-reduce.101" -> "get-tuple-element.182";
	"constant.183" -> "broadcast.184";
	"get-tuple-element.182" -> "multiply.185";
	"broadcast.184" -> "multiply.185";
	"multiply.185" -> "multiply.421";
	"multiply.185" -> "multiply.421";
	"multiply.421" -> "reduce.428";
	"constant.422" -> "reduce.428";
	"AddComputation.424" -> "reduce.428";
	"reduce.428" -> "sqrt.429";
	"sqrt.429" -> "multiply.431";
	"sqrt.429" -> "multiply.431";
	"multiply.431" -> "reshape.19";
	"add.642" -> "add.644";
	"reshape.19" -> "add.644";
	"all-reduce.101" -> "get-tuple-element.122";
	"constant.123" -> "broadcast.124";
	"get-tuple-element.122" -> "multiply.125";
	"broadcast.124" -> "multiply.125";
	"multiply.125" -> "multiply.408";
	"multiply.125" -> "multiply.408";
	"multiply.408" -> "reduce.415";
	"constant.409" -> "reduce.415";
	"AddComputation.411" -> "reduce.415";
	"reduce.415" -> "sqrt.416";
	"sqrt.416" -> "multiply.418";
	"sqrt.416" -> "multiply.418";
	"multiply.418" -> "reshape.20";
	"add.644" -> "add.646";
	"reshape.20" -> "add.646";
	"all-reduce.101" -> "get-tuple-element.118";
	"constant.119" -> "broadcast.120";
	"get-tuple-element.118" -> "multiply.121";
	"broadcast.120" -> "multiply.121";
	"multiply.121" -> "multiply.395";
	"multiply.121" -> "multiply.395";
	"multiply.395" -> "reduce.402";
	"constant.396" -> "reduce.402";
	"AddComputation.398" -> "reduce.402";
	"reduce.402" -> "sqrt.403";
	"sqrt.403" -> "multiply.405";
	"sqrt.403" -> "multiply.405";
	"multiply.405" -> "reshape.21";
	"add.646" -> "add.648";
	"reshape.21" -> "add.648";
	"all-reduce.101" -> "get-tuple-element.178";
	"constant.179" -> "broadcast.180";
	"get-tuple-element.178" -> "multiply.181";
	"broadcast.180" -> "multiply.181";
	"multiply.181" -> "multiply.382";
	"multiply.181" -> "multiply.382";
	"multiply.382" -> "reduce.389";
	"constant.383" -> "reduce.389";
	"AddComputation.385" -> "reduce.389";
	"reduce.389" -> "sqrt.390";
	"sqrt.390" -> "multiply.392";
	"sqrt.390" -> "multiply.392";
	"multiply.392" -> "reshape.22";
	"add.648" -> "add.650";
	"reshape.22" -> "add.650";
	"all-reduce.101" -> "get-tuple-element.114";
	"constant.115" -> "broadcast.116";
	"get-tuple-element.114" -> "multiply.117";
	"broadcast.116" -> "multiply.117";
	"multiply.117" -> "multiply.369";
	"multiply.117" -> "multiply.369";
	"multiply.369" -> "reduce.376";
	"constant.370" -> "reduce.376";
	"AddComputation.372" -> "reduce.376";
	"reduce.376" -> "sqrt.377";
	"sqrt.377" -> "multiply.379";
	"sqrt.377" -> "multiply.379";
	"multiply.379" -> "reshape.23";
	"add.650" -> "add.652";
	"reshape.23" -> "add.652";
	"all-reduce.101" -> "get-tuple-element.110";
	"constant.111" -> "broadcast.112";
	"get-tuple-element.110" -> "multiply.113";
	"broadcast.112" -> "multiply.113";
	"multiply.113" -> "multiply.356";
	"multiply.113" -> "multiply.356";
	"multiply.356" -> "reduce.363";
	"constant.357" -> "reduce.363";
	"AddComputation.359" -> "reduce.363";
	"reduce.363" -> "sqrt.364";
	"sqrt.364" -> "multiply.366";
	"sqrt.364" -> "multiply.366";
	"multiply.366" -> "reshape.24";
	"add.652" -> "add.654";
	"reshape.24" -> "add.654";
	"all-reduce.101" -> "get-tuple-element.106";
	"constant.107" -> "broadcast.108";
	"get-tuple-element.106" -> "multiply.109";
	"broadcast.108" -> "multiply.109";
	"multiply.109" -> "multiply.343";
	"multiply.109" -> "multiply.343";
	"multiply.343" -> "reduce.350";
	"constant.344" -> "reduce.350";
	"AddComputation.346" -> "reduce.350";
	"reduce.350" -> "sqrt.351";
	"sqrt.351" -> "multiply.353";
	"sqrt.351" -> "multiply.353";
	"multiply.353" -> "reshape.25";
	"add.654" -> "add.656";
	"reshape.25" -> "add.656";
	"all-reduce.101" -> "get-tuple-element.174";
	"constant.175" -> "broadcast.176";
	"get-tuple-element.174" -> "multiply.177";
	"broadcast.176" -> "multiply.177";
	"multiply.177" -> "multiply.330";
	"multiply.177" -> "multiply.330";
	"multiply.330" -> "reduce.337";
	"constant.331" -> "reduce.337";
	"AddComputation.333" -> "reduce.337";
	"reduce.337" -> "sqrt.338";
	"sqrt.338" -> "multiply.340";
	"sqrt.338" -> "multiply.340";
	"multiply.340" -> "reshape.26";
	"add.656" -> "add.658";
	"reshape.26" -> "add.658";
	"all-reduce.101" -> "get-tuple-element.102";
	"constant.103" -> "broadcast.104";
	"get-tuple-element.102" -> "multiply.105";
	"broadcast.104" -> "multiply.105";
	"multiply.105" -> "multiply.317";
	"multiply.105" -> "multiply.317";
	"multiply.317" -> "reduce.324";
	"constant.318" -> "reduce.324";
	"AddComputation.320" -> "reduce.324";
	"reduce.324" -> "sqrt.325";
	"sqrt.325" -> "multiply.327";
	"sqrt.325" -> "multiply.327";
	"multiply.327" -> "reshape.27";
	"add.658" -> "add.660";
	"reshape.27" -> "add.660";
	"p35.314" -> "reshape.28";
	"add.660" -> "divide.662";
	"reshape.28" -> "divide.662";
	"all-reduce.101" -> "get-tuple-element.206";
	"constant.207" -> "broadcast.208";
	"get-tuple-element.206" -> "multiply.209";
	"broadcast.208" -> "multiply.209";
	"multiply.209" -> "multiply.303";
	"multiply.209" -> "multiply.303";
	"multiply.303" -> "reduce.310";
	"constant.304" -> "reduce.310";
	"AddComputation.306" -> "reduce.310";
	"reduce.310" -> "sqrt.311";
	"sqrt.311" -> "multiply.313";
	"sqrt.311" -> "multiply.313";
	"multiply.313" -> "reshape.29";
	"divide.662" -> "add.664";
	"reshape.29" -> "add.664";
	"all-reduce.101" -> "get-tuple-element.162";
	"constant.163" -> "broadcast.164";
	"get-tuple-element.162" -> "multiply.165";
	"broadcast.164" -> "multiply.165";
	"multiply.165" -> "multiply.290";
	"multiply.165" -> "multiply.290";
	"multiply.290" -> "reduce.297";
	"constant.291" -> "reduce.297";
	"AddComputation.293" -> "reduce.297";
	"reduce.297" -> "sqrt.298";
	"sqrt.298" -> "multiply.300";
	"sqrt.298" -> "multiply.300";
	"multiply.300" -> "reshape.30";
	"add.664" -> "add.666";
	"reshape.30" -> "add.666";
	"all-reduce.101" -> "get-tuple-element.202";
	"constant.203" -> "broadcast.204";
	"get-tuple-element.202" -> "multiply.205";
	"broadcast.204" -> "multiply.205";
	"multiply.205" -> "multiply.277";
	"multiply.205" -> "multiply.277";
	"multiply.277" -> "reduce.284";
	"constant.278" -> "reduce.284";
	"AddComputation.280" -> "reduce.284";
	"reduce.284" -> "sqrt.285";
	"sqrt.285" -> "multiply.287";
	"sqrt.285" -> "multiply.287";
	"multiply.287" -> "reshape.31";
	"add.666" -> "add.668";
	"reshape.31" -> "add.668";
	"all-reduce.101" -> "get-tuple-element.158";
	"constant.159" -> "broadcast.160";
	"get-tuple-element.158" -> "multiply.161";
	"broadcast.160" -> "multiply.161";
	"multiply.161" -> "multiply.264";
	"multiply.161" -> "multiply.264";
	"multiply.264" -> "reduce.271";
	"constant.265" -> "reduce.271";
	"AddComputation.267" -> "reduce.271";
	"reduce.271" -> "sqrt.272";
	"sqrt.272" -> "multiply.274";
	"sqrt.272" -> "multiply.274";
	"multiply.274" -> "reshape.32";
	"add.668" -> "add.670";
	"reshape.32" -> "add.670";
	"all-reduce.101" -> "get-tuple-element.198";
	"constant.199" -> "broadcast.200";
	"get-tuple-element.198" -> "multiply.201";
	"broadcast.200" -> "multiply.201";
	"multiply.201" -> "multiply.251";
	"multiply.201" -> "multiply.251";
	"multiply.251" -> "reduce.258";
	"constant.252" -> "reduce.258";
	"AddComputation.254" -> "reduce.258";
	"reduce.258" -> "sqrt.259";
	"sqrt.259" -> "multiply.261";
	"sqrt.259" -> "multiply.261";
	"multiply.261" -> "reshape.33";
	"add.670" -> "add.672";
	"reshape.33" -> "add.672";
	"all-reduce.101" -> "get-tuple-element.154";
	"constant.155" -> "broadcast.156";
	"get-tuple-element.154" -> "multiply.157";
	"broadcast.156" -> "multiply.157";
	"multiply.157" -> "multiply.238";
	"multiply.157" -> "multiply.238";
	"multiply.238" -> "reduce.245";
	"constant.239" -> "reduce.245";
	"AddComputation.241" -> "reduce.245";
	"reduce.245" -> "sqrt.246";
	"sqrt.246" -> "multiply.248";
	"sqrt.246" -> "multiply.248";
	"multiply.248" -> "reshape.34";
	"add.672" -> "add.674";
	"reshape.34" -> "add.674";
	"all-reduce.101" -> "get-tuple-element.194";
	"constant.195" -> "broadcast.196";
	"get-tuple-element.194" -> "multiply.197";
	"broadcast.196" -> "multiply.197";
	"multiply.197" -> "multiply.225";
	"multiply.197" -> "multiply.225";
	"multiply.225" -> "reduce.232";
	"constant.226" -> "reduce.232";
	"AddComputation.228" -> "reduce.232";
	"reduce.232" -> "sqrt.233";
	"sqrt.233" -> "multiply.235";
	"sqrt.233" -> "multiply.235";
	"multiply.235" -> "reshape.35";
	"add.674" -> "add.676";
	"reshape.35" -> "add.676";
	"all-reduce.101" -> "get-tuple-element.679";
	"add.676" -> "all-reduce.684";
	"get-tuple-element.679" -> "all-reduce.684";
	"AddComputation.680" -> "all-reduce.684";
	"all-reduce.684" -> "get-tuple-element.685";
	"get-tuple-element.685" -> "power.687";
	"constant.3" -> "power.687";
	"p0.8" -> "reshape.40";
	"power.687" -> "add.689";
	"reshape.40" -> "add.689";
	"constant.2" -> "divide.692";
	"add.689" -> "divide.692";
	"divide.692" -> "compare.699";
	"constant.8" -> "compare.699";
	"compare.699" -> "select.701";
	"divide.692" -> "select.701";
	"constant.9" -> "select.701";
	"select.701" -> "multiply.168";
	"constant.182" -> "multiply.168";
	"multiply.168" -> "reshape.650";
	"reshape.650" -> "broadcast.6";
	"get-tuple-element.218" -> "multiply.706";
	"broadcast.6" -> "multiply.706";
	"p38.722" -> "broadcast.726";
	"multiply.706" -> "multiply.727";
	"broadcast.726" -> "multiply.727";
	"broadcast.2" -> "add.736";
	"multiply.727" -> "add.736";
	"constant.10" -> "multiply.35";
	"p37.707" -> "multiply.35";
	"multiply.35" -> "broadcast.9";
	"multiply.706" -> "multiply.715";
	"multiply.706" -> "multiply.715";
	"p1.10" -> "broadcast.716";
	"multiply.715" -> "multiply.717";
	"broadcast.716" -> "multiply.717";
	"broadcast.9" -> "add.718";
	"multiply.717" -> "add.718";
	"add.718" -> "sqrt.719";
	"p0.8" -> "broadcast.720";
	"sqrt.719" -> "add.721";
	"broadcast.720" -> "add.721";
	"add.736" -> "divide.738";
	"add.721" -> "divide.738";
	"constant.6" -> "broadcast.739";
	"divide.738" -> "multiply.740";
	"broadcast.739" -> "multiply.740";
	"p40.737" -> "add.741";
	"multiply.740" -> "add.741";
	"constant.1" -> "broadcast.5";
	"add.741" -> "multiply.742";
	"broadcast.5" -> "multiply.742";
	"add.741" -> "add.743";
	"multiply.742" -> "add.743";
	"constant.12" -> "multiply.36";
	"p39.728" -> "multiply.36";
	"multiply.36" -> "broadcast.12";
	"divide.692" -> "compare.759";
	"constant.16" -> "compare.759";
	"compare.759" -> "select.761";
	"divide.692" -> "select.761";
	"constant.18" -> "select.761";
	"select.761" -> "multiply.170";
	"constant.184" -> "multiply.170";
	"multiply.170" -> "reshape.653";
	"reshape.653" -> "broadcast.15";
	"get-tuple-element.214" -> "multiply.766";
	"broadcast.15" -> "multiply.766";
	"p38.722" -> "broadcast.784";
	"multiply.766" -> "multiply.785";
	"broadcast.784" -> "multiply.785";
	"broadcast.12" -> "add.793";
	"multiply.785" -> "add.793";
	"constant.19" -> "multiply.39";
	"p37.707" -> "multiply.39";
	"multiply.39" -> "broadcast.18";
	"multiply.766" -> "multiply.774";
	"multiply.766" -> "multiply.774";
	"p1.10" -> "broadcast.775";
	"multiply.774" -> "multiply.776";
	"broadcast.775" -> "multiply.776";
	"broadcast.18" -> "add.777";
	"multiply.776" -> "add.777";
	"add.777" -> "sqrt.778";
	"p0.8" -> "broadcast.779";
	"sqrt.778" -> "add.780";
	"broadcast.779" -> "add.780";
	"add.793" -> "divide.795";
	"add.780" -> "divide.795";
	"constant.749" -> "broadcast.796";
	"divide.795" -> "multiply.797";
	"broadcast.796" -> "multiply.797";
	"p41.794" -> "add.798";
	"multiply.797" -> "add.798";
	"constant.744" -> "broadcast.748";
	"add.798" -> "multiply.799";
	"broadcast.748" -> "multiply.799";
	"add.798" -> "add.800";
	"multiply.799" -> "add.800";
	"constant.20" -> "multiply.40";
	"p39.728" -> "multiply.40";
	"multiply.40" -> "broadcast.22";
	"divide.692" -> "compare.816";
	"constant.22" -> "compare.816";
	"compare.816" -> "select.818";
	"divide.692" -> "select.818";
	"constant.23" -> "select.818";
	"select.818" -> "multiply.171";
	"constant.185" -> "multiply.171";
	"multiply.171" -> "reshape.656";
	"reshape.656" -> "broadcast.25";
	"get-tuple-element.210" -> "multiply.823";
	"broadcast.25" -> "multiply.823";
	"p38.722" -> "broadcast.841";
	"multiply.823" -> "multiply.842";
	"broadcast.841" -> "multiply.842";
	"broadcast.22" -> "add.850";
	"multiply.842" -> "add.850";
	"constant.24" -> "multiply.43";
	"p37.707" -> "multiply.43";
	"multiply.43" -> "broadcast.28";
	"multiply.823" -> "multiply.831";
	"multiply.823" -> "multiply.831";
	"p1.10" -> "broadcast.832";
	"multiply.831" -> "multiply.833";
	"broadcast.832" -> "multiply.833";
	"broadcast.28" -> "add.834";
	"multiply.833" -> "add.834";
	"add.834" -> "sqrt.835";
	"p0.8" -> "broadcast.836";
	"sqrt.835" -> "add.837";
	"broadcast.836" -> "add.837";
	"add.850" -> "divide.852";
	"add.837" -> "divide.852";
	"constant.806" -> "broadcast.853";
	"divide.852" -> "multiply.854";
	"broadcast.853" -> "multiply.854";
	"p42.851" -> "add.855";
	"multiply.854" -> "add.855";
	"constant.801" -> "broadcast.805";
	"add.855" -> "multiply.856";
	"broadcast.805" -> "multiply.856";
	"add.855" -> "add.857";
	"multiply.856" -> "add.857";
	"constant.25" -> "multiply.44";
	"p39.728" -> "multiply.44";
	"multiply.44" -> "broadcast.31";
	"divide.692" -> "compare.868";
	"constant.27" -> "compare.868";
	"compare.868" -> "select.870";
	"divide.692" -> "select.870";
	"constant.28" -> "select.870";
	"select.870" -> "multiply.172";
	"constant.186" -> "multiply.172";
	"multiply.172" -> "reshape.659";
	"reshape.659" -> "broadcast.32";
	"get-tuple-element.170" -> "multiply.874";
	"broadcast.32" -> "multiply.874";
	"p38.722" -> "broadcast.892";
	"multiply.874" -> "multiply.893";
	"broadcast.892" -> "multiply.893";
	"broadcast.31" -> "add.901";
	"multiply.893" -> "add.901";
	"constant.29" -> "multiply.47";
	"p37.707" -> "multiply.47";
	"multiply.47" -> "broadcast.35";
	"multiply.874" -> "multiply.882";
	"multiply.874" -> "multiply.882";
	"p1.10" -> "broadcast.883";
	"multiply.882" -> "multiply.884";
	"broadcast.883" -> "multiply.884";
	"broadcast.35" -> "add.885";
	"multiply.884" -> "add.885";
	"add.885" -> "sqrt.886";
	"p0.8" -> "broadcast.887";
	"sqrt.886" -> "add.888";
	"broadcast.887" -> "add.888";
	"add.901" -> "divide.903";
	"add.888" -> "divide.903";
	"constant.858" -> "broadcast.904";
	"divide.903" -> "multiply.905";
	"broadcast.904" -> "multiply.905";
	"p43.902" -> "add.906";
	"multiply.905" -> "add.906";
	"constant.30" -> "multiply.48";
	"p39.728" -> "multiply.48";
	"multiply.48" -> "broadcast.38";
	"divide.692" -> "compare.917";
	"constant.32" -> "compare.917";
	"compare.917" -> "select.919";
	"divide.692" -> "select.919";
	"constant.33" -> "select.919";
	"select.919" -> "multiply.174";
	"constant.188" -> "multiply.174";
	"multiply.174" -> "reshape.662";
	"reshape.662" -> "broadcast.39";
	"get-tuple-element.166" -> "multiply.923";
	"broadcast.39" -> "multiply.923";
	"p38.722" -> "broadcast.941";
	"multiply.923" -> "multiply.942";
	"broadcast.941" -> "multiply.942";
	"broadcast.38" -> "add.950";
	"multiply.942" -> "add.950";
	"constant.34" -> "multiply.51";
	"p37.707" -> "multiply.51";
	"multiply.51" -> "broadcast.42";
	"multiply.923" -> "multiply.931";
	"multiply.923" -> "multiply.931";
	"p1.10" -> "broadcast.932";
	"multiply.931" -> "multiply.933";
	"broadcast.932" -> "multiply.933";
	"broadcast.42" -> "add.934";
	"multiply.933" -> "add.934";
	"add.934" -> "sqrt.935";
	"p0.8" -> "broadcast.936";
	"sqrt.935" -> "add.937";
	"broadcast.936" -> "add.937";
	"add.950" -> "divide.952";
	"add.937" -> "divide.952";
	"constant.907" -> "broadcast.953";
	"divide.952" -> "multiply.954";
	"broadcast.953" -> "multiply.954";
	"p44.951" -> "add.955";
	"multiply.954" -> "add.955";
	"constant.35" -> "multiply.52";
	"p39.728" -> "multiply.52";
	"multiply.52" -> "broadcast.45";
	"divide.692" -> "compare.971";
	"constant.37" -> "compare.971";
	"compare.971" -> "select.973";
	"divide.692" -> "select.973";
	"constant.38" -> "select.973";
	"select.973" -> "multiply.175";
	"constant.189" -> "multiply.175";
	"multiply.175" -> "reshape.665";
	"reshape.665" -> "broadcast.47";
	"get-tuple-element.206" -> "multiply.978";
	"broadcast.47" -> "multiply.978";
	"p38.722" -> "broadcast.996";
	"multiply.978" -> "multiply.997";
	"broadcast.996" -> "multiply.997";
	"broadcast.45" -> "add.1005";
	"multiply.997" -> "add.1005";
	"constant.39" -> "multiply.55";
	"p37.707" -> "multiply.55";
	"multiply.55" -> "broadcast.50";
	"multiply.978" -> "multiply.986";
	"multiply.978" -> "multiply.986";
	"p1.10" -> "broadcast.987";
	"multiply.986" -> "multiply.988";
	"broadcast.987" -> "multiply.988";
	"broadcast.50" -> "add.989";
	"multiply.988" -> "add.989";
	"add.989" -> "sqrt.990";
	"p0.8" -> "broadcast.991";
	"sqrt.990" -> "add.992";
	"broadcast.991" -> "add.992";
	"add.1005" -> "divide.1007";
	"add.992" -> "divide.1007";
	"constant.961" -> "broadcast.1008";
	"divide.1007" -> "multiply.1009";
	"broadcast.1008" -> "multiply.1009";
	"p45.1006" -> "add.1010";
	"multiply.1009" -> "add.1010";
	"constant.956" -> "broadcast.960";
	"add.1010" -> "multiply.1011";
	"broadcast.960" -> "multiply.1011";
	"add.1010" -> "add.1012";
	"multiply.1011" -> "add.1012";
	"constant.40" -> "multiply.56";
	"p39.728" -> "multiply.56";
	"multiply.56" -> "broadcast.53";
	"divide.692" -> "compare.1023";
	"constant.42" -> "compare.1023";
	"compare.1023" -> "select.1025";
	"divide.692" -> "select.1025";
	"constant.43" -> "select.1025";
	"select.1025" -> "multiply.176";
	"constant.190" -> "multiply.176";
	"multiply.176" -> "reshape.668";
	"reshape.668" -> "broadcast.54";
	"get-tuple-element.162" -> "multiply.1029";
	"broadcast.54" -> "multiply.1029";
	"p38.722" -> "broadcast.1047";
	"multiply.1029" -> "multiply.1048";
	"broadcast.1047" -> "multiply.1048";
	"broadcast.53" -> "add.1056";
	"multiply.1048" -> "add.1056";
	"constant.44" -> "multiply.59";
	"p37.707" -> "multiply.59";
	"multiply.59" -> "broadcast.57";
	"multiply.1029" -> "multiply.1037";
	"multiply.1029" -> "multiply.1037";
	"p1.10" -> "broadcast.1038";
	"multiply.1037" -> "multiply.1039";
	"broadcast.1038" -> "multiply.1039";
	"broadcast.57" -> "add.1040";
	"multiply.1039" -> "add.1040";
	"add.1040" -> "sqrt.1041";
	"p0.8" -> "broadcast.1042";
	"sqrt.1041" -> "add.1043";
	"broadcast.1042" -> "add.1043";
	"add.1056" -> "divide.1058";
	"add.1043" -> "divide.1058";
	"constant.1013" -> "broadcast.1059";
	"divide.1058" -> "multiply.1060";
	"broadcast.1059" -> "multiply.1060";
	"p46.1057" -> "add.1061";
	"multiply.1060" -> "add.1061";
	"constant.45" -> "multiply.60";
	"p39.728" -> "multiply.60";
	"multiply.60" -> "broadcast.60";
	"divide.692" -> "compare.1077";
	"constant.47" -> "compare.1077";
	"compare.1077" -> "select.1079";
	"divide.692" -> "select.1079";
	"constant.48" -> "select.1079";
	"select.1079" -> "multiply.178";
	"constant.192" -> "multiply.178";
	"multiply.178" -> "reshape.671";
	"reshape.671" -> "broadcast.62";
	"get-tuple-element.202" -> "multiply.1084";
	"broadcast.62" -> "multiply.1084";
	"p38.722" -> "broadcast.1102";
	"multiply.1084" -> "multiply.1103";
	"broadcast.1102" -> "multiply.1103";
	"broadcast.60" -> "add.1111";
	"multiply.1103" -> "add.1111";
	"constant.49" -> "multiply.63";
	"p37.707" -> "multiply.63";
	"multiply.63" -> "broadcast.65";
	"multiply.1084" -> "multiply.1092";
	"multiply.1084" -> "multiply.1092";
	"p1.10" -> "broadcast.1093";
	"multiply.1092" -> "multiply.1094";
	"broadcast.1093" -> "multiply.1094";
	"broadcast.65" -> "add.1095";
	"multiply.1094" -> "add.1095";
	"add.1095" -> "sqrt.1096";
	"p0.8" -> "broadcast.1097";
	"sqrt.1096" -> "add.1098";
	"broadcast.1097" -> "add.1098";
	"add.1111" -> "divide.1113";
	"add.1098" -> "divide.1113";
	"constant.1067" -> "broadcast.1114";
	"divide.1113" -> "multiply.1115";
	"broadcast.1114" -> "multiply.1115";
	"p47.1112" -> "add.1116";
	"multiply.1115" -> "add.1116";
	"constant.1062" -> "broadcast.1066";
	"add.1116" -> "multiply.1117";
	"broadcast.1066" -> "multiply.1117";
	"add.1116" -> "add.1118";
	"multiply.1117" -> "add.1118";
	"constant.50" -> "multiply.64";
	"p39.728" -> "multiply.64";
	"multiply.64" -> "broadcast.68";
	"divide.692" -> "compare.1129";
	"constant.52" -> "compare.1129";
	"compare.1129" -> "select.1131";
	"divide.692" -> "select.1131";
	"constant.53" -> "select.1131";
	"select.1131" -> "multiply.179";
	"constant.193" -> "multiply.179";
	"multiply.179" -> "reshape.674";
	"reshape.674" -> "broadcast.69";
	"get-tuple-element.158" -> "multiply.1135";
	"broadcast.69" -> "multiply.1135";
	"p38.722" -> "broadcast.1153";
	"multiply.1135" -> "multiply.1154";
	"broadcast.1153" -> "multiply.1154";
	"broadcast.68" -> "add.1162";
	"multiply.1154" -> "add.1162";
	"constant.54" -> "multiply.67";
	"p37.707" -> "multiply.67";
	"multiply.67" -> "broadcast.72";
	"multiply.1135" -> "multiply.1143";
	"multiply.1135" -> "multiply.1143";
	"p1.10" -> "broadcast.1144";
	"multiply.1143" -> "multiply.1145";
	"broadcast.1144" -> "multiply.1145";
	"broadcast.72" -> "add.1146";
	"multiply.1145" -> "add.1146";
	"add.1146" -> "sqrt.1147";
	"p0.8" -> "broadcast.1148";
	"sqrt.1147" -> "add.1149";
	"broadcast.1148" -> "add.1149";
	"add.1162" -> "divide.1164";
	"add.1149" -> "divide.1164";
	"constant.1119" -> "broadcast.1165";
	"divide.1164" -> "multiply.1166";
	"broadcast.1165" -> "multiply.1166";
	"p48.1163" -> "add.1167";
	"multiply.1166" -> "add.1167";
	"constant.55" -> "multiply.68";
	"p39.728" -> "multiply.68";
	"multiply.68" -> "broadcast.75";
	"divide.692" -> "compare.1183";
	"constant.57" -> "compare.1183";
	"compare.1183" -> "select.1185";
	"divide.692" -> "select.1185";
	"constant.58" -> "select.1185";
	"select.1185" -> "multiply.180";
	"constant.194" -> "multiply.180";
	"multiply.180" -> "reshape.677";
	"reshape.677" -> "broadcast.77";
	"get-tuple-element.198" -> "multiply.1190";
	"broadcast.77" -> "multiply.1190";
	"p38.722" -> "broadcast.1208";
	"multiply.1190" -> "multiply.1209";
	"broadcast.1208" -> "multiply.1209";
	"broadcast.75" -> "add.1217";
	"multiply.1209" -> "add.1217";
	"constant.59" -> "multiply.71";
	"p37.707" -> "multiply.71";
	"multiply.71" -> "broadcast.80";
	"multiply.1190" -> "multiply.1198";
	"multiply.1190" -> "multiply.1198";
	"p1.10" -> "broadcast.1199";
	"multiply.1198" -> "multiply.1200";
	"broadcast.1199" -> "multiply.1200";
	"broadcast.80" -> "add.1201";
	"multiply.1200" -> "add.1201";
	"add.1201" -> "sqrt.1202";
	"p0.8" -> "broadcast.1203";
	"sqrt.1202" -> "add.1204";
	"broadcast.1203" -> "add.1204";
	"add.1217" -> "divide.1219";
	"add.1204" -> "divide.1219";
	"constant.1173" -> "broadcast.1220";
	"divide.1219" -> "multiply.1221";
	"broadcast.1220" -> "multiply.1221";
	"p49.1218" -> "add.1222";
	"multiply.1221" -> "add.1222";
	"constant.1168" -> "broadcast.1172";
	"add.1222" -> "multiply.1223";
	"broadcast.1172" -> "multiply.1223";
	"add.1222" -> "add.1224";
	"multiply.1223" -> "add.1224";
	"constant.60" -> "multiply.72";
	"p39.728" -> "multiply.72";
	"multiply.72" -> "broadcast.83";
	"divide.692" -> "compare.1235";
	"constant.62" -> "compare.1235";
	"compare.1235" -> "select.1237";
	"divide.692" -> "select.1237";
	"constant.63" -> "select.1237";
	"select.1237" -> "multiply.182";
	"constant.196" -> "multiply.182";
	"multiply.182" -> "reshape.680";
	"reshape.680" -> "broadcast.84";
	"get-tuple-element.154" -> "multiply.1241";
	"broadcast.84" -> "multiply.1241";
	"p38.722" -> "broadcast.1259";
	"multiply.1241" -> "multiply.1260";
	"broadcast.1259" -> "multiply.1260";
	"broadcast.83" -> "add.1268";
	"multiply.1260" -> "add.1268";
	"constant.64" -> "multiply.75";
	"p37.707" -> "multiply.75";
	"multiply.75" -> "broadcast.87";
	"multiply.1241" -> "multiply.1249";
	"multiply.1241" -> "multiply.1249";
	"p1.10" -> "broadcast.1250";
	"multiply.1249" -> "multiply.1251";
	"broadcast.1250" -> "multiply.1251";
	"broadcast.87" -> "add.1252";
	"multiply.1251" -> "add.1252";
	"add.1252" -> "sqrt.1253";
	"p0.8" -> "broadcast.1254";
	"sqrt.1253" -> "add.1255";
	"broadcast.1254" -> "add.1255";
	"add.1268" -> "divide.1270";
	"add.1255" -> "divide.1270";
	"constant.1225" -> "broadcast.1271";
	"divide.1270" -> "multiply.1272";
	"broadcast.1271" -> "multiply.1272";
	"p50.1269" -> "add.1273";
	"multiply.1272" -> "add.1273";
	"constant.65" -> "multiply.76";
	"p39.728" -> "multiply.76";
	"multiply.76" -> "broadcast.90";
	"divide.692" -> "compare.1289";
	"constant.67" -> "compare.1289";
	"compare.1289" -> "select.1291";
	"divide.692" -> "select.1291";
	"constant.68" -> "select.1291";
	"select.1291" -> "multiply.183";
	"constant.197" -> "multiply.183";
	"multiply.183" -> "reshape.683";
	"reshape.683" -> "broadcast.92";
	"get-tuple-element.194" -> "multiply.1296";
	"broadcast.92" -> "multiply.1296";
	"p38.722" -> "broadcast.1314";
	"multiply.1296" -> "multiply.1315";
	"broadcast.1314" -> "multiply.1315";
	"broadcast.90" -> "add.1323";
	"multiply.1315" -> "add.1323";
	"constant.69" -> "multiply.79";
	"p37.707" -> "multiply.79";
	"multiply.79" -> "broadcast.95";
	"multiply.1296" -> "multiply.1304";
	"multiply.1296" -> "multiply.1304";
	"p1.10" -> "broadcast.1305";
	"multiply.1304" -> "multiply.1306";
	"broadcast.1305" -> "multiply.1306";
	"broadcast.95" -> "add.1307";
	"multiply.1306" -> "add.1307";
	"add.1307" -> "sqrt.1308";
	"p0.8" -> "broadcast.1309";
	"sqrt.1308" -> "add.1310";
	"broadcast.1309" -> "add.1310";
	"add.1323" -> "divide.1325";
	"add.1310" -> "divide.1325";
	"constant.1279" -> "broadcast.1326";
	"divide.1325" -> "multiply.1327";
	"broadcast.1326" -> "multiply.1327";
	"p51.1324" -> "add.1328";
	"multiply.1327" -> "add.1328";
	"constant.1274" -> "broadcast.1278";
	"add.1328" -> "multiply.1329";
	"broadcast.1278" -> "multiply.1329";
	"add.1328" -> "add.1330";
	"multiply.1329" -> "add.1330";
	"constant.70" -> "multiply.80";
	"p39.728" -> "multiply.80";
	"multiply.80" -> "broadcast.98";
	"divide.692" -> "compare.1341";
	"constant.72" -> "compare.1341";
	"compare.1341" -> "select.1343";
	"divide.692" -> "select.1343";
	"constant.73" -> "select.1343";
	"select.1343" -> "multiply.184";
	"constant.198" -> "multiply.184";
	"multiply.184" -> "reshape.686";
	"reshape.686" -> "broadcast.99";
	"get-tuple-element.150" -> "multiply.1347";
	"broadcast.99" -> "multiply.1347";
	"p38.722" -> "broadcast.1365";
	"multiply.1347" -> "multiply.1366";
	"broadcast.1365" -> "multiply.1366";
	"broadcast.98" -> "add.1374";
	"multiply.1366" -> "add.1374";
	"constant.74" -> "multiply.83";
	"p37.707" -> "multiply.83";
	"multiply.83" -> "broadcast.102";
	"multiply.1347" -> "multiply.1355";
	"multiply.1347" -> "multiply.1355";
	"p1.10" -> "broadcast.1356";
	"multiply.1355" -> "multiply.1357";
	"broadcast.1356" -> "multiply.1357";
	"broadcast.102" -> "add.1358";
	"multiply.1357" -> "add.1358";
	"add.1358" -> "sqrt.1359";
	"p0.8" -> "broadcast.1360";
	"sqrt.1359" -> "add.1361";
	"broadcast.1360" -> "add.1361";
	"add.1374" -> "divide.1376";
	"add.1361" -> "divide.1376";
	"constant.1331" -> "broadcast.1377";
	"divide.1376" -> "multiply.1378";
	"broadcast.1377" -> "multiply.1378";
	"p52.1375" -> "add.1379";
	"multiply.1378" -> "add.1379";
	"constant.75" -> "multiply.84";
	"p39.728" -> "multiply.84";
	"multiply.84" -> "broadcast.106";
	"divide.692" -> "compare.1390";
	"constant.77" -> "compare.1390";
	"compare.1390" -> "select.1392";
	"divide.692" -> "select.1392";
	"constant.78" -> "select.1392";
	"select.1392" -> "multiply.186";
	"constant.200" -> "multiply.186";
	"multiply.186" -> "reshape.689";
	"reshape.689" -> "broadcast.107";
	"get-tuple-element.146" -> "multiply.1396";
	"broadcast.107" -> "multiply.1396";
	"p38.722" -> "broadcast.1414";
	"multiply.1396" -> "multiply.1415";
	"broadcast.1414" -> "multiply.1415";
	"broadcast.106" -> "add.1423";
	"multiply.1415" -> "add.1423";
	"constant.79" -> "multiply.87";
	"p37.707" -> "multiply.87";
	"multiply.87" -> "broadcast.111";
	"multiply.1396" -> "multiply.1404";
	"multiply.1396" -> "multiply.1404";
	"p1.10" -> "broadcast.1405";
	"multiply.1404" -> "multiply.1406";
	"broadcast.1405" -> "multiply.1406";
	"broadcast.111" -> "add.1407";
	"multiply.1406" -> "add.1407";
	"add.1407" -> "sqrt.1408";
	"p0.8" -> "broadcast.1409";
	"sqrt.1408" -> "add.1410";
	"broadcast.1409" -> "add.1410";
	"add.1423" -> "divide.1425";
	"add.1410" -> "divide.1425";
	"constant.1380" -> "broadcast.1426";
	"divide.1425" -> "multiply.1427";
	"broadcast.1426" -> "multiply.1427";
	"p53.1424" -> "add.1428";
	"multiply.1427" -> "add.1428";
	"constant.80" -> "multiply.88";
	"p39.728" -> "multiply.88";
	"multiply.88" -> "broadcast.115";
	"divide.692" -> "compare.1439";
	"constant.82" -> "compare.1439";
	"compare.1439" -> "select.1441";
	"divide.692" -> "select.1441";
	"constant.83" -> "select.1441";
	"select.1441" -> "multiply.187";
	"constant.201" -> "multiply.187";
	"multiply.187" -> "reshape.692";
	"reshape.692" -> "broadcast.117";
	"get-tuple-element.142" -> "multiply.1445";
	"broadcast.117" -> "multiply.1445";
	"p38.722" -> "broadcast.1463";
	"multiply.1445" -> "multiply.1464";
	"broadcast.1463" -> "multiply.1464";
	"broadcast.115" -> "add.1472";
	"multiply.1464" -> "add.1472";
	"constant.84" -> "multiply.91";
	"p37.707" -> "multiply.91";
	"multiply.91" -> "broadcast.121";
	"multiply.1445" -> "multiply.1453";
	"multiply.1445" -> "multiply.1453";
	"p1.10" -> "broadcast.1454";
	"multiply.1453" -> "multiply.1455";
	"broadcast.1454" -> "multiply.1455";
	"broadcast.121" -> "add.1456";
	"multiply.1455" -> "add.1456";
	"add.1456" -> "sqrt.1457";
	"p0.8" -> "broadcast.1458";
	"sqrt.1457" -> "add.1459";
	"broadcast.1458" -> "add.1459";
	"add.1472" -> "divide.1474";
	"add.1459" -> "divide.1474";
	"constant.1429" -> "broadcast.1475";
	"divide.1474" -> "multiply.1476";
	"broadcast.1475" -> "multiply.1476";
	"p54.1473" -> "add.1477";
	"multiply.1476" -> "add.1477";
	"constant.85" -> "multiply.92";
	"p39.728" -> "multiply.92";
	"multiply.92" -> "broadcast.125";
	"divide.692" -> "compare.1493";
	"constant.87" -> "compare.1493";
	"compare.1493" -> "select.1495";
	"divide.692" -> "select.1495";
	"constant.88" -> "select.1495";
	"select.1495" -> "multiply.188";
	"constant.202" -> "multiply.188";
	"multiply.188" -> "reshape.695";
	"reshape.695" -> "broadcast.127";
	"get-tuple-element.190" -> "multiply.1500";
	"broadcast.127" -> "multiply.1500";
	"p38.722" -> "broadcast.1518";
	"multiply.1500" -> "multiply.1519";
	"broadcast.1518" -> "multiply.1519";
	"broadcast.125" -> "add.1527";
	"multiply.1519" -> "add.1527";
	"constant.89" -> "multiply.95";
	"p37.707" -> "multiply.95";
	"multiply.95" -> "broadcast.131";
	"multiply.1500" -> "multiply.1508";
	"multiply.1500" -> "multiply.1508";
	"p1.10" -> "broadcast.1509";
	"multiply.1508" -> "multiply.1510";
	"broadcast.1509" -> "multiply.1510";
	"broadcast.131" -> "add.1511";
	"multiply.1510" -> "add.1511";
	"add.1511" -> "sqrt.1512";
	"p0.8" -> "broadcast.1513";
	"sqrt.1512" -> "add.1514";
	"broadcast.1513" -> "add.1514";
	"add.1527" -> "divide.1529";
	"add.1514" -> "divide.1529";
	"constant.1483" -> "broadcast.1530";
	"divide.1529" -> "multiply.1531";
	"broadcast.1530" -> "multiply.1531";
	"p55.1528" -> "add.1532";
	"multiply.1531" -> "add.1532";
	"constant.1478" -> "broadcast.1482";
	"add.1532" -> "multiply.1533";
	"broadcast.1482" -> "multiply.1533";
	"add.1532" -> "add.1534";
	"multiply.1533" -> "add.1534";
	"constant.90" -> "multiply.96";
	"p39.728" -> "multiply.96";
	"multiply.96" -> "broadcast.135";
	"divide.692" -> "compare.1545";
	"constant.92" -> "compare.1545";
	"compare.1545" -> "select.1547";
	"divide.692" -> "select.1547";
	"constant.93" -> "select.1547";
	"select.1547" -> "multiply.190";
	"constant.204" -> "multiply.190";
	"multiply.190" -> "reshape.698";
	"reshape.698" -> "broadcast.137";
	"get-tuple-element.138" -> "multiply.1551";
	"broadcast.137" -> "multiply.1551";
	"p38.722" -> "broadcast.1569";
	"multiply.1551" -> "multiply.1570";
	"broadcast.1569" -> "multiply.1570";
	"broadcast.135" -> "add.1578";
	"multiply.1570" -> "add.1578";
	"constant.94" -> "multiply.99";
	"p37.707" -> "multiply.99";
	"multiply.99" -> "broadcast.141";
	"multiply.1551" -> "multiply.1559";
	"multiply.1551" -> "multiply.1559";
	"p1.10" -> "broadcast.1560";
	"multiply.1559" -> "multiply.1561";
	"broadcast.1560" -> "multiply.1561";
	"broadcast.141" -> "add.1562";
	"multiply.1561" -> "add.1562";
	"add.1562" -> "sqrt.1563";
	"p0.8" -> "broadcast.1564";
	"sqrt.1563" -> "add.1565";
	"broadcast.1564" -> "add.1565";
	"add.1578" -> "divide.1580";
	"add.1565" -> "divide.1580";
	"constant.1535" -> "broadcast.1581";
	"divide.1580" -> "multiply.1582";
	"broadcast.1581" -> "multiply.1582";
	"p56.1579" -> "add.1583";
	"multiply.1582" -> "add.1583";
	"constant.95" -> "multiply.100";
	"p39.728" -> "multiply.100";
	"multiply.100" -> "broadcast.145";
	"divide.692" -> "compare.1599";
	"constant.97" -> "compare.1599";
	"compare.1599" -> "select.1601";
	"divide.692" -> "select.1601";
	"constant.98" -> "select.1601";
	"select.1601" -> "multiply.191";
	"constant.205" -> "multiply.191";
	"multiply.191" -> "reshape.701";
	"reshape.701" -> "broadcast.147";
	"get-tuple-element.186" -> "multiply.1606";
	"broadcast.147" -> "multiply.1606";
	"p38.722" -> "broadcast.1624";
	"multiply.1606" -> "multiply.1625";
	"broadcast.1624" -> "multiply.1625";
	"broadcast.145" -> "add.1633";
	"multiply.1625" -> "add.1633";
	"constant.99" -> "multiply.103";
	"p37.707" -> "multiply.103";
	"multiply.103" -> "broadcast.151";
	"multiply.1606" -> "multiply.1614";
	"multiply.1606" -> "multiply.1614";
	"p1.10" -> "broadcast.1615";
	"multiply.1614" -> "multiply.1616";
	"broadcast.1615" -> "multiply.1616";
	"broadcast.151" -> "add.1617";
	"multiply.1616" -> "add.1617";
	"add.1617" -> "sqrt.1618";
	"p0.8" -> "broadcast.1619";
	"sqrt.1618" -> "add.1620";
	"broadcast.1619" -> "add.1620";
	"add.1633" -> "divide.1635";
	"add.1620" -> "divide.1635";
	"constant.1589" -> "broadcast.1636";
	"divide.1635" -> "multiply.1637";
	"broadcast.1636" -> "multiply.1637";
	"p57.1634" -> "add.1638";
	"multiply.1637" -> "add.1638";
	"constant.1584" -> "broadcast.1588";
	"add.1638" -> "multiply.1639";
	"broadcast.1588" -> "multiply.1639";
	"add.1638" -> "add.1640";
	"multiply.1639" -> "add.1640";
	"constant.100" -> "multiply.104";
	"p39.728" -> "multiply.104";
	"multiply.104" -> "broadcast.155";
	"divide.692" -> "compare.1651";
	"constant.102" -> "compare.1651";
	"compare.1651" -> "select.1653";
	"divide.692" -> "select.1653";
	"constant.104" -> "select.1653";
	"select.1653" -> "multiply.192";
	"constant.206" -> "multiply.192";
	"multiply.192" -> "reshape.705";
	"reshape.705" -> "broadcast.157";
	"get-tuple-element.134" -> "multiply.1657";
	"broadcast.157" -> "multiply.1657";
	"p38.722" -> "broadcast.1675";
	"multiply.1657" -> "multiply.1676";
	"broadcast.1675" -> "multiply.1676";
	"broadcast.155" -> "add.1684";
	"multiply.1676" -> "add.1684";
	"constant.105" -> "multiply.108";
	"p37.707" -> "multiply.108";
	"multiply.108" -> "broadcast.161";
	"multiply.1657" -> "multiply.1665";
	"multiply.1657" -> "multiply.1665";
	"p1.10" -> "broadcast.1666";
	"multiply.1665" -> "multiply.1667";
	"broadcast.1666" -> "multiply.1667";
	"broadcast.161" -> "add.1668";
	"multiply.1667" -> "add.1668";
	"add.1668" -> "sqrt.1669";
	"p0.8" -> "broadcast.1670";
	"sqrt.1669" -> "add.1671";
	"broadcast.1670" -> "add.1671";
	"add.1684" -> "divide.1686";
	"add.1671" -> "divide.1686";
	"constant.1641" -> "broadcast.1687";
	"divide.1686" -> "multiply.1688";
	"broadcast.1687" -> "multiply.1688";
	"p58.1685" -> "add.1689";
	"multiply.1688" -> "add.1689";
	"constant.106" -> "multiply.110";
	"p39.728" -> "multiply.110";
	"multiply.110" -> "broadcast.165";
	"divide.692" -> "compare.1700";
	"constant.109" -> "compare.1700";
	"compare.1700" -> "select.1702";
	"divide.692" -> "select.1702";
	"constant.110" -> "select.1702";
	"select.1702" -> "multiply.194";
	"constant.208" -> "multiply.194";
	"multiply.194" -> "reshape.708";
	"reshape.708" -> "broadcast.166";
	"get-tuple-element.130" -> "multiply.1706";
	"broadcast.166" -> "multiply.1706";
	"p38.722" -> "broadcast.1724";
	"multiply.1706" -> "multiply.1725";
	"broadcast.1724" -> "multiply.1725";
	"broadcast.165" -> "add.1733";
	"multiply.1725" -> "add.1733";
	"constant.112" -> "multiply.114";
	"p37.707" -> "multiply.114";
	"multiply.114" -> "broadcast.170";
	"multiply.1706" -> "multiply.1714";
	"multiply.1706" -> "multiply.1714";
	"p1.10" -> "broadcast.1715";
	"multiply.1714" -> "multiply.1716";
	"broadcast.1715" -> "multiply.1716";
	"broadcast.170" -> "add.1717";
	"multiply.1716" -> "add.1717";
	"add.1717" -> "sqrt.1718";
	"p0.8" -> "broadcast.1719";
	"sqrt.1718" -> "add.1720";
	"broadcast.1719" -> "add.1720";
	"add.1733" -> "divide.1735";
	"add.1720" -> "divide.1735";
	"constant.1690" -> "broadcast.1736";
	"divide.1735" -> "multiply.1737";
	"broadcast.1736" -> "multiply.1737";
	"p59.1734" -> "add.1738";
	"multiply.1737" -> "add.1738";
	"constant.113" -> "multiply.115";
	"p39.728" -> "multiply.115";
	"multiply.115" -> "broadcast.174";
	"divide.692" -> "compare.1749";
	"constant.116" -> "compare.1749";
	"compare.1749" -> "select.1751";
	"divide.692" -> "select.1751";
	"constant.117" -> "select.1751";
	"select.1751" -> "multiply.195";
	"constant.209" -> "multiply.195";
	"multiply.195" -> "reshape.713";
	"reshape.713" -> "broadcast.175";
	"get-tuple-element.126" -> "multiply.1755";
	"broadcast.175" -> "multiply.1755";
	"p38.722" -> "broadcast.1773";
	"multiply.1755" -> "multiply.1774";
	"broadcast.1773" -> "multiply.1774";
	"broadcast.174" -> "add.1782";
	"multiply.1774" -> "add.1782";
	"constant.118" -> "multiply.119";
	"p37.707" -> "multiply.119";
	"multiply.119" -> "broadcast.179";
	"multiply.1755" -> "multiply.1763";
	"multiply.1755" -> "multiply.1763";
	"p1.10" -> "broadcast.1764";
	"multiply.1763" -> "multiply.1765";
	"broadcast.1764" -> "multiply.1765";
	"broadcast.179" -> "add.1766";
	"multiply.1765" -> "add.1766";
	"add.1766" -> "sqrt.1767";
	"p0.8" -> "broadcast.1768";
	"sqrt.1767" -> "add.1769";
	"broadcast.1768" -> "add.1769";
	"add.1782" -> "divide.1784";
	"add.1769" -> "divide.1784";
	"constant.1739" -> "broadcast.1785";
	"divide.1784" -> "multiply.1786";
	"broadcast.1785" -> "multiply.1786";
	"p60.1783" -> "add.1787";
	"multiply.1786" -> "add.1787";
	"constant.120" -> "multiply.120";
	"p39.728" -> "multiply.120";
	"multiply.120" -> "broadcast.183";
	"divide.692" -> "compare.1803";
	"constant.122" -> "compare.1803";
	"compare.1803" -> "select.1805";
	"divide.692" -> "select.1805";
	"constant.124" -> "select.1805";
	"select.1805" -> "multiply.196";
	"constant.210" -> "multiply.196";
	"multiply.196" -> "reshape.716";
	"reshape.716" -> "broadcast.186";
	"get-tuple-element.182" -> "multiply.1810";
	"broadcast.186" -> "multiply.1810";
	"p38.722" -> "broadcast.1828";
	"multiply.1810" -> "multiply.1829";
	"broadcast.1828" -> "multiply.1829";
	"broadcast.183" -> "add.1837";
	"multiply.1829" -> "add.1837";
	"constant.125" -> "multiply.124";
	"p37.707" -> "multiply.124";
	"multiply.124" -> "broadcast.190";
	"multiply.1810" -> "multiply.1818";
	"multiply.1810" -> "multiply.1818";
	"p1.10" -> "broadcast.1819";
	"multiply.1818" -> "multiply.1820";
	"broadcast.1819" -> "multiply.1820";
	"broadcast.190" -> "add.1821";
	"multiply.1820" -> "add.1821";
	"add.1821" -> "sqrt.1822";
	"p0.8" -> "broadcast.1823";
	"sqrt.1822" -> "add.1824";
	"broadcast.1823" -> "add.1824";
	"add.1837" -> "divide.1839";
	"add.1824" -> "divide.1839";
	"constant.1793" -> "broadcast.1840";
	"divide.1839" -> "multiply.1841";
	"broadcast.1840" -> "multiply.1841";
	"p61.1838" -> "add.1842";
	"multiply.1841" -> "add.1842";
	"constant.1788" -> "broadcast.1792";
	"add.1842" -> "multiply.1843";
	"broadcast.1792" -> "multiply.1843";
	"add.1842" -> "add.1844";
	"multiply.1843" -> "add.1844";
	"constant.126" -> "multiply.126";
	"p39.728" -> "multiply.126";
	"multiply.126" -> "broadcast.194";
	"divide.692" -> "compare.1855";
	"constant.129" -> "compare.1855";
	"compare.1855" -> "select.1857";
	"divide.692" -> "select.1857";
	"constant.130" -> "select.1857";
	"select.1857" -> "multiply.198";
	"constant.212" -> "multiply.198";
	"multiply.198" -> "reshape.719";
	"reshape.719" -> "broadcast.195";
	"get-tuple-element.122" -> "multiply.1861";
	"broadcast.195" -> "multiply.1861";
	"p38.722" -> "broadcast.1879";
	"multiply.1861" -> "multiply.1880";
	"broadcast.1879" -> "multiply.1880";
	"broadcast.194" -> "add.1888";
	"multiply.1880" -> "add.1888";
	"constant.132" -> "multiply.130";
	"p37.707" -> "multiply.130";
	"multiply.130" -> "broadcast.199";
	"multiply.1861" -> "multiply.1869";
	"multiply.1861" -> "multiply.1869";
	"p1.10" -> "broadcast.1870";
	"multiply.1869" -> "multiply.1871";
	"broadcast.1870" -> "multiply.1871";
	"broadcast.199" -> "add.1872";
	"multiply.1871" -> "add.1872";
	"add.1872" -> "sqrt.1873";
	"p0.8" -> "broadcast.1874";
	"sqrt.1873" -> "add.1875";
	"broadcast.1874" -> "add.1875";
	"add.1888" -> "divide.1890";
	"add.1875" -> "divide.1890";
	"constant.1845" -> "broadcast.1891";
	"divide.1890" -> "multiply.1892";
	"broadcast.1891" -> "multiply.1892";
	"p62.1889" -> "add.1893";
	"multiply.1892" -> "add.1893";
	"constant.133" -> "multiply.131";
	"p39.728" -> "multiply.131";
	"multiply.131" -> "broadcast.203";
	"divide.692" -> "compare.1909";
	"constant.136" -> "compare.1909";
	"compare.1909" -> "select.1911";
	"divide.692" -> "select.1911";
	"constant.137" -> "select.1911";
	"select.1911" -> "multiply.199";
	"constant.213" -> "multiply.199";
	"multiply.199" -> "reshape.722";
	"reshape.722" -> "broadcast.206";
	"get-tuple-element.178" -> "multiply.1916";
	"broadcast.206" -> "multiply.1916";
	"p38.722" -> "broadcast.1934";
	"multiply.1916" -> "multiply.1935";
	"broadcast.1934" -> "multiply.1935";
	"broadcast.203" -> "add.1943";
	"multiply.1935" -> "add.1943";
	"constant.138" -> "multiply.135";
	"p37.707" -> "multiply.135";
	"multiply.135" -> "broadcast.210";
	"multiply.1916" -> "multiply.1924";
	"multiply.1916" -> "multiply.1924";
	"p1.10" -> "broadcast.1925";
	"multiply.1924" -> "multiply.1926";
	"broadcast.1925" -> "multiply.1926";
	"broadcast.210" -> "add.1927";
	"multiply.1926" -> "add.1927";
	"add.1927" -> "sqrt.1928";
	"p0.8" -> "broadcast.1929";
	"sqrt.1928" -> "add.1930";
	"broadcast.1929" -> "add.1930";
	"add.1943" -> "divide.1945";
	"add.1930" -> "divide.1945";
	"constant.1899" -> "broadcast.1946";
	"divide.1945" -> "multiply.1947";
	"broadcast.1946" -> "multiply.1947";
	"p63.1944" -> "add.1948";
	"multiply.1947" -> "add.1948";
	"constant.1894" -> "broadcast.1898";
	"add.1948" -> "multiply.1949";
	"broadcast.1898" -> "multiply.1949";
	"add.1948" -> "add.1950";
	"multiply.1949" -> "add.1950";
	"constant.140" -> "multiply.136";
	"p39.728" -> "multiply.136";
	"multiply.136" -> "broadcast.214";
	"divide.692" -> "compare.1961";
	"constant.142" -> "compare.1961";
	"compare.1961" -> "select.1963";
	"divide.692" -> "select.1963";
	"constant.144" -> "select.1963";
	"select.1963" -> "multiply.200";
	"constant.214" -> "multiply.200";
	"multiply.200" -> "reshape.727";
	"reshape.727" -> "broadcast.215";
	"get-tuple-element.114" -> "multiply.1967";
	"broadcast.215" -> "multiply.1967";
	"p38.722" -> "broadcast.1985";
	"multiply.1967" -> "multiply.1986";
	"broadcast.1985" -> "multiply.1986";
	"broadcast.214" -> "add.1994";
	"multiply.1986" -> "add.1994";
	"constant.145" -> "multiply.140";
	"p37.707" -> "multiply.140";
	"multiply.140" -> "broadcast.219";
	"multiply.1967" -> "multiply.1975";
	"multiply.1967" -> "multiply.1975";
	"p1.10" -> "broadcast.1976";
	"multiply.1975" -> "multiply.1977";
	"broadcast.1976" -> "multiply.1977";
	"broadcast.219" -> "add.1978";
	"multiply.1977" -> "add.1978";
	"add.1978" -> "sqrt.1979";
	"p0.8" -> "broadcast.1980";
	"sqrt.1979" -> "add.1981";
	"broadcast.1980" -> "add.1981";
	"add.1994" -> "divide.1996";
	"add.1981" -> "divide.1996";
	"constant.1951" -> "broadcast.1997";
	"divide.1996" -> "multiply.1998";
	"broadcast.1997" -> "multiply.1998";
	"p64.1995" -> "add.1999";
	"multiply.1998" -> "add.1999";
	"constant.146" -> "multiply.142";
	"p39.728" -> "multiply.142";
	"multiply.142" -> "broadcast.223";
	"divide.692" -> "compare.2010";
	"constant.149" -> "compare.2010";
	"compare.2010" -> "select.2012";
	"divide.692" -> "select.2012";
	"constant.150" -> "select.2012";
	"select.2012" -> "multiply.202";
	"constant.216" -> "multiply.202";
	"multiply.202" -> "reshape.731";
	"reshape.731" -> "broadcast.224";
	"get-tuple-element.110" -> "multiply.2016";
	"broadcast.224" -> "multiply.2016";
	"p38.722" -> "broadcast.2034";
	"multiply.2016" -> "multiply.2035";
	"broadcast.2034" -> "multiply.2035";
	"broadcast.223" -> "add.2043";
	"multiply.2035" -> "add.2043";
	"constant.152" -> "multiply.146";
	"p37.707" -> "multiply.146";
	"multiply.146" -> "broadcast.227";
	"multiply.2016" -> "multiply.2024";
	"multiply.2016" -> "multiply.2024";
	"p1.10" -> "broadcast.2025";
	"multiply.2024" -> "multiply.2026";
	"broadcast.2025" -> "multiply.2026";
	"broadcast.227" -> "add.2027";
	"multiply.2026" -> "add.2027";
	"add.2027" -> "sqrt.2028";
	"p0.8" -> "broadcast.2029";
	"sqrt.2028" -> "add.2030";
	"broadcast.2029" -> "add.2030";
	"add.2043" -> "divide.2045";
	"add.2030" -> "divide.2045";
	"constant.2000" -> "broadcast.2046";
	"divide.2045" -> "multiply.2047";
	"broadcast.2046" -> "multiply.2047";
	"p65.2044" -> "add.2048";
	"multiply.2047" -> "add.2048";
	"constant.153" -> "multiply.147";
	"p39.728" -> "multiply.147";
	"multiply.147" -> "broadcast.230";
	"divide.692" -> "compare.2059";
	"constant.156" -> "compare.2059";
	"compare.2059" -> "select.2061";
	"divide.692" -> "select.2061";
	"constant.157" -> "select.2061";
	"select.2061" -> "multiply.203";
	"constant.217" -> "multiply.203";
	"multiply.203" -> "reshape.735";
	"reshape.735" -> "broadcast.231";
	"get-tuple-element.106" -> "multiply.2065";
	"broadcast.231" -> "multiply.2065";
	"p38.722" -> "broadcast.2083";
	"multiply.2065" -> "multiply.2084";
	"broadcast.2083" -> "multiply.2084";
	"broadcast.230" -> "add.2092";
	"multiply.2084" -> "add.2092";
	"constant.158" -> "multiply.151";
	"p37.707" -> "multiply.151";
	"multiply.151" -> "broadcast.234";
	"multiply.2065" -> "multiply.2073";
	"multiply.2065" -> "multiply.2073";
	"p1.10" -> "broadcast.2074";
	"multiply.2073" -> "multiply.2075";
	"broadcast.2074" -> "multiply.2075";
	"broadcast.234" -> "add.2076";
	"multiply.2075" -> "add.2076";
	"add.2076" -> "sqrt.2077";
	"p0.8" -> "broadcast.2078";
	"sqrt.2077" -> "add.2079";
	"broadcast.2078" -> "add.2079";
	"add.2092" -> "divide.2094";
	"add.2079" -> "divide.2094";
	"constant.2049" -> "broadcast.2095";
	"divide.2094" -> "multiply.2096";
	"broadcast.2095" -> "multiply.2096";
	"p66.2093" -> "add.2097";
	"multiply.2096" -> "add.2097";
	"constant.160" -> "multiply.152";
	"p39.728" -> "multiply.152";
	"multiply.152" -> "broadcast.237";
	"divide.692" -> "compare.2108";
	"constant.162" -> "compare.2108";
	"compare.2108" -> "select.2110";
	"divide.692" -> "select.2110";
	"constant.164" -> "select.2110";
	"select.2110" -> "multiply.204";
	"constant.218" -> "multiply.204";
	"multiply.204" -> "reshape.738";
	"reshape.738" -> "broadcast.238";
	"get-tuple-element.118" -> "multiply.2114";
	"broadcast.238" -> "multiply.2114";
	"p38.722" -> "broadcast.2132";
	"multiply.2114" -> "multiply.2133";
	"broadcast.2132" -> "multiply.2133";
	"broadcast.237" -> "add.2141";
	"multiply.2133" -> "add.2141";
	"constant.165" -> "multiply.156";
	"p37.707" -> "multiply.156";
	"multiply.156" -> "broadcast.241";
	"multiply.2114" -> "multiply.2122";
	"multiply.2114" -> "multiply.2122";
	"p1.10" -> "broadcast.2123";
	"multiply.2122" -> "multiply.2124";
	"broadcast.2123" -> "multiply.2124";
	"broadcast.241" -> "add.2125";
	"multiply.2124" -> "add.2125";
	"add.2125" -> "sqrt.2126";
	"p0.8" -> "broadcast.2127";
	"sqrt.2126" -> "add.2128";
	"broadcast.2127" -> "add.2128";
	"add.2141" -> "divide.2143";
	"add.2128" -> "divide.2143";
	"constant.2098" -> "broadcast.2144";
	"divide.2143" -> "multiply.2145";
	"broadcast.2144" -> "multiply.2145";
	"p67.2142" -> "add.2146";
	"multiply.2145" -> "add.2146";
	"constant.166" -> "multiply.158";
	"p39.728" -> "multiply.158";
	"multiply.158" -> "broadcast.244";
	"divide.692" -> "compare.2162";
	"constant.169" -> "compare.2162";
	"compare.2162" -> "select.2164";
	"divide.692" -> "select.2164";
	"constant.170" -> "select.2164";
	"select.2164" -> "multiply.206";
	"constant.220" -> "multiply.206";
	"multiply.206" -> "reshape.741";
	"reshape.741" -> "broadcast.246";
	"get-tuple-element.174" -> "multiply.2169";
	"broadcast.246" -> "multiply.2169";
	"p38.722" -> "broadcast.2187";
	"multiply.2169" -> "multiply.2188";
	"broadcast.2187" -> "multiply.2188";
	"broadcast.244" -> "add.2196";
	"multiply.2188" -> "add.2196";
	"constant.172" -> "multiply.162";
	"p37.707" -> "multiply.162";
	"multiply.162" -> "broadcast.249";
	"multiply.2169" -> "multiply.2177";
	"multiply.2169" -> "multiply.2177";
	"p1.10" -> "broadcast.2178";
	"multiply.2177" -> "multiply.2179";
	"broadcast.2178" -> "multiply.2179";
	"broadcast.249" -> "add.2180";
	"multiply.2179" -> "add.2180";
	"add.2180" -> "sqrt.2181";
	"p0.8" -> "broadcast.2182";
	"sqrt.2181" -> "add.2183";
	"broadcast.2182" -> "add.2183";
	"add.2196" -> "divide.2198";
	"add.2183" -> "divide.2198";
	"constant.2152" -> "broadcast.2199";
	"divide.2198" -> "multiply.2200";
	"broadcast.2199" -> "multiply.2200";
	"p68.2197" -> "add.2201";
	"multiply.2200" -> "add.2201";
	"constant.2147" -> "broadcast.2151";
	"add.2201" -> "multiply.2202";
	"broadcast.2151" -> "multiply.2202";
	"add.2201" -> "add.2203";
	"multiply.2202" -> "add.2203";
	"constant.173" -> "multiply.163";
	"p39.728" -> "multiply.163";
	"multiply.163" -> "broadcast.252";
	"divide.692" -> "compare.2214";
	"constant.176" -> "compare.2214";
	"compare.2214" -> "select.2216";
	"divide.692" -> "select.2216";
	"constant.177" -> "select.2216";
	"select.2216" -> "multiply.207";
	"constant.221" -> "multiply.207";
	"multiply.207" -> "reshape.744";
	"reshape.744" -> "broadcast.253";
	"get-tuple-element.102" -> "multiply.2220";
	"broadcast.253" -> "multiply.2220";
	"p38.722" -> "broadcast.2238";
	"multiply.2220" -> "multiply.2239";
	"broadcast.2238" -> "multiply.2239";
	"broadcast.252" -> "add.2247";
	"multiply.2239" -> "add.2247";
	"constant.178" -> "multiply.167";
	"p37.707" -> "multiply.167";
	"multiply.167" -> "broadcast.256";
	"multiply.2220" -> "multiply.2228";
	"multiply.2220" -> "multiply.2228";
	"p1.10" -> "broadcast.2229";
	"multiply.2228" -> "multiply.2230";
	"broadcast.2229" -> "multiply.2230";
	"broadcast.256" -> "add.2231";
	"multiply.2230" -> "add.2231";
	"add.2231" -> "sqrt.2232";
	"p0.8" -> "broadcast.2233";
	"sqrt.2232" -> "add.2234";
	"broadcast.2233" -> "add.2234";
	"add.2247" -> "divide.2249";
	"add.2234" -> "divide.2249";
	"constant.2204" -> "broadcast.2250";
	"divide.2249" -> "multiply.2251";
	"broadcast.2250" -> "multiply.2251";
	"p69.2248" -> "add.2252";
	"multiply.2251" -> "add.2252";
	"all-reduce.32" -> "get-tuple-element.33";
	"add.743" -> "tuple.2259";
	"add.800" -> "tuple.2259";
	"add.857" -> "tuple.2259";
	"add.906" -> "tuple.2259";
	"add.955" -> "tuple.2259";
	"add.1012" -> "tuple.2259";
	"add.1061" -> "tuple.2259";
	"add.1118" -> "tuple.2259";
	"add.1167" -> "tuple.2259";
	"add.1224" -> "tuple.2259";
	"add.1273" -> "tuple.2259";
	"add.1330" -> "tuple.2259";
	"add.1379" -> "tuple.2259";
	"add.1428" -> "tuple.2259";
	"add.1477" -> "tuple.2259";
	"add.1534" -> "tuple.2259";
	"add.1583" -> "tuple.2259";
	"add.1640" -> "tuple.2259";
	"add.1689" -> "tuple.2259";
	"add.1738" -> "tuple.2259";
	"add.1787" -> "tuple.2259";
	"add.1844" -> "tuple.2259";
	"add.1893" -> "tuple.2259";
	"add.1950" -> "tuple.2259";
	"add.1999" -> "tuple.2259";
	"add.2048" -> "tuple.2259";
	"add.2097" -> "tuple.2259";
	"add.2146" -> "tuple.2259";
	"add.2203" -> "tuple.2259";
	"add.2252" -> "tuple.2259";
	"constant.180" -> "tuple.2259";
	"divide.24" -> "tuple.2259";
	"get-tuple-element.33" -> "tuple.2259";
	"add.736" -> "tuple.2259";
	"add.718" -> "tuple.2259";
	"add.793" -> "tuple.2259";
	"add.777" -> "tuple.2259";
	"add.850" -> "tuple.2259";
	"add.834" -> "tuple.2259";
	"add.1005" -> "tuple.2259";
	"add.989" -> "tuple.2259";
	"add.1111" -> "tuple.2259";
	"add.1095" -> "tuple.2259";
	"add.1217" -> "tuple.2259";
	"add.1201" -> "tuple.2259";
	"add.1323" -> "tuple.2259";
	"add.1307" -> "tuple.2259";
	"add.1527" -> "tuple.2259";
	"add.1511" -> "tuple.2259";
	"add.1633" -> "tuple.2259";
	"add.1617" -> "tuple.2259";
	"add.1837" -> "tuple.2259";
	"add.1821" -> "tuple.2259";
	"add.1943" -> "tuple.2259";
	"add.1927" -> "tuple.2259";
	"add.2196" -> "tuple.2259";
	"add.2180" -> "tuple.2259";
	"add.901" -> "tuple.2259";
	"add.885" -> "tuple.2259";
	"add.950" -> "tuple.2259";
	"add.934" -> "tuple.2259";
	"add.1056" -> "tuple.2259";
	"add.1040" -> "tuple.2259";
	"add.1162" -> "tuple.2259";
	"add.1146" -> "tuple.2259";
	"add.1268" -> "tuple.2259";
	"add.1252" -> "tuple.2259";
	"add.1374" -> "tuple.2259";
	"add.1358" -> "tuple.2259";
	"add.1423" -> "tuple.2259";
	"add.1407" -> "tuple.2259";
	"add.1472" -> "tuple.2259";
	"add.1456" -> "tuple.2259";
	"add.1578" -> "tuple.2259";
	"add.1562" -> "tuple.2259";
	"add.1684" -> "tuple.2259";
	"add.1668" -> "tuple.2259";
	"add.1733" -> "tuple.2259";
	"add.1717" -> "tuple.2259";
	"add.1782" -> "tuple.2259";
	"add.1766" -> "tuple.2259";
	"add.1888" -> "tuple.2259";
	"add.1872" -> "tuple.2259";
	"add.2141" -> "tuple.2259";
	"add.2125" -> "tuple.2259";
	"add.1994" -> "tuple.2259";
	"add.1978" -> "tuple.2259";
	"add.2043" -> "tuple.2259";
	"add.2027" -> "tuple.2259";
	"add.2092" -> "tuple.2259";
	"add.2076" -> "tuple.2259";
	"add.2247" -> "tuple.2259";
	"add.2231" -> "tuple.2259";
	"constant.181" -> "tuple.2259";
 }