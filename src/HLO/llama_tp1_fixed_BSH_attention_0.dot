digraph HloModule { 
	"p4.5" [label="p4.5 \n f32[64,4,4,1024]"];
	"p5.6" [label="p5.6 \n f32[64,4,4,1024]"];
	"p16.17" [label="p16.17 \n f32[4096,32000]"];
	"iota.27" [label="iota.27 \n s32[64]"];
	"broadcast.28" [label="broadcast.28 \n s32[64,64]"];
	"p1.2" [label="p1.2 \n s32[64]"];
	"broadcast.29" [label="broadcast.29 \n s32[64,64]"];
	"compare.30" [label="compare.30 \n pred[64,64]"];
	"broadcast.34" [label="broadcast.34 \n pred[4,64,64]"];
	"broadcast.31" [label="broadcast.31 \n s32[4,64]"];
	"p2.3" [label="p2.3 \n s32[4]"];
	"broadcast.32" [label="broadcast.32 \n s32[4,64]"];
	"compare.33" [label="compare.33 \n pred[4,64]"];
	"broadcast.35" [label="broadcast.35 \n pred[4,64,64]"];
	"and.36" [label="and.36 \n pred[4,64,64]"];
	"reshape.90" [label="reshape.90 \n pred[4,64,64]"];
	"broadcast.91" [label="broadcast.91 \n pred[4,4,64,64]"];
	"convert.20" [label="convert.20 \n f32[64]"];
	"reshape.21" [label="reshape.21 \n f32[64,1]"];
	"constant.22" [label="constant.22 \n f32[512]"];
	"reshape.23" [label="reshape.23 \n f32[1,512]"];
	"dot.24" [label="dot.24 \n f32[64,512]"];
	"cosine.26" [label="cosine.26 \n f32[64,512]"];
	"reshape.60" [label="reshape.60 \n f32[64,512]"];
	"broadcast.61" [label="broadcast.61 \n f32[64,4,4,512]"];
	"p0.1" [label="p0.1 \n f32[4,64,4096]"];
	"p6.7" [label="p6.7 \n f32[4096]"];
	"transpose.50" [label="transpose.50 \n f32[4096,64,4]"];
	"reshape.51" [label="reshape.51 \n f32[4096,256]"];
	"p7.8" [label="p7.8 \n f32[4096,4096]"];
	"dot.52" [label="dot.52 \n f32[256,4096]"];
	"reshape.55" [label="reshape.55 \n f32[64,4,4,1024]"];
	"slice.62" [label="slice.62 \n f32[64,4,4,512]"];
	"multiply.64" [label="multiply.64 \n f32[64,4,4,512]"];
	"sine.25" [label="sine.25 \n f32[64,512]"];
	"reshape.58" [label="reshape.58 \n f32[64,512]"];
	"broadcast.59" [label="broadcast.59 \n f32[64,4,4,512]"];
	"slice.63" [label="slice.63 \n f32[64,4,4,512]"];
	"multiply.65" [label="multiply.65 \n f32[64,4,4,512]"];
	"subtract.66" [label="subtract.66 \n f32[64,4,4,512]"];
	"multiply.67" [label="multiply.67 \n f32[64,4,4,512]"];
	"multiply.68" [label="multiply.68 \n f32[64,4,4,512]"];
	"add.69" [label="add.69 \n f32[64,4,4,512]"];
	"concatenate.70" [label="concatenate.70 \n f32[64,4,4,1024]"];
	"broadcast.85" [label="broadcast.85 \n f32[64,4,4,1024]"];
	"divide.86" [label="divide.86 \n f32[64,4,4,1024]"];
	"reshape.73" [label="reshape.73 \n f32[64,512]"];
	"broadcast.74" [label="broadcast.74 \n f32[64,4,4,512]"];
	"p8.9" [label="p8.9 \n f32[4096,4096]"];
	"dot.53" [label="dot.53 \n f32[256,4096]"];
	"reshape.56" [label="reshape.56 \n f32[64,4,4,1024]"];
	"slice.75" [label="slice.75 \n f32[64,4,4,512]"];
	"multiply.77" [label="multiply.77 \n f32[64,4,4,512]"];
	"reshape.71" [label="reshape.71 \n f32[64,512]"];
	"broadcast.72" [label="broadcast.72 \n f32[64,4,4,512]"];
	"slice.76" [label="slice.76 \n f32[64,4,4,512]"];
	"multiply.78" [label="multiply.78 \n f32[64,4,4,512]"];
	"subtract.79" [label="subtract.79 \n f32[64,4,4,512]"];
	"multiply.80" [label="multiply.80 \n f32[64,4,4,512]"];
	"multiply.81" [label="multiply.81 \n f32[64,4,4,512]"];
	"add.82" [label="add.82 \n f32[64,4,4,512]"];
	"concatenate.83" [label="concatenate.83 \n f32[64,4,4,1024]"];
	"dot.87" [label="dot.87 \n f32[4,4,64,64]"];
	"broadcast.89" [label="broadcast.89 \n f32[4,4,64,64]"];
	"select.92" [label="select.92 \n f32[4,4,64,64]"];
	"reduce.94" [label="reduce.94 \n f32[4,4,64]"];
	"reshape.100" [label="reshape.100 \n f32[4,4,64]"];
	"broadcast.101" [label="broadcast.101 \n f32[4,4,64,64]"];
	"subtract.102" [label="subtract.102 \n f32[4,4,64,64]"];
	"exponential.103" [label="exponential.103 \n f32[4,4,64,64]"];
	"reduce.105" [label="reduce.105 \n f32[4,4,64]"];
	"reshape.111" [label="reshape.111 \n f32[4,4,64]"];
	"broadcast.112" [label="broadcast.112 \n f32[4,4,64,64]"];
	"divide.113" [label="divide.113 \n f32[4,4,64,64]"];
	"p9.10" [label="p9.10 \n f32[4096,4096]"];
	"dot.54" [label="dot.54 \n f32[256,4096]"];
	"reshape.57" [label="reshape.57 \n f32[64,4,4,1024]"];
	"dot.114" [label="dot.114 \n f32[4,4,64,1024]"];
	"transpose.115" [label="transpose.115 \n f32[64,4,4,1024]"];
	"reshape.116" [label="reshape.116 \n f32[256,4096]"];
	"p10.11" [label="p10.11 \n f32[4096,4096]"];
	"dot.117" [label="dot.117 \n f32[256,4096]"];
	"reshape.118" [label="reshape.118 \n f32[64,4,4096]"];
	"transpose.119" [label="transpose.119 \n f32[4,64,4096]"];
	"add.120" [label="add.120 \n f32[4,64,4096]"];
	"p11.12" [label="p11.12 \n f32[4096]"];
	"reshape.123" [label="reshape.123 \n f32[256,4096]"];
	"p12.13" [label="p12.13 \n f32[4096,11008]"];
	"dot.124" [label="dot.124 \n f32[256,11008]"];
	"logistic.125" [label="logistic.125 \n f32[256,11008]"];
	"multiply.126" [label="multiply.126 \n f32[256,11008]"];
	"p13.14" [label="p13.14 \n f32[4096,11008]"];
	"dot.127" [label="dot.127 \n f32[256,11008]"];
	"multiply.128" [label="multiply.128 \n f32[256,11008]"];
	"p14.15" [label="p14.15 \n f32[4096,11008]"];
	"dot.129" [label="dot.129 \n f32[256,4096]"];
	"reshape.130" [label="reshape.130 \n f32[4,64,4096]"];
	"add.131" [label="add.131 \n f32[4,64,4096]"];
	"transpose.132" [label="transpose.132 \n f32[64,4,4096]"];
	"p3.4" [label="p3.4 \n s32[1]"];
	"gather.133" [label="gather.133 \n f32[1,4,4096]"];
	"transpose.134" [label="transpose.134 \n f32[4,1,4096]"];
	"p15.16" [label="p15.16 \n f32[4096]"];
	"transpose.137" [label="transpose.137 \n f32[4096,1,4]"];
	"reshape.138" [label="reshape.138 \n f32[4096,4]"];
	"dot.139" [label="dot.139 \n f32[32000,4]"];
	"reshape.140" [label="reshape.140 \n f32[32000,1,4]"];
	"tuple.141" [label="tuple.141 \n (f32[32000,1,4]"]; 
 	"p4.5" -> "custom-call.37";
	"p5.6" -> "custom-call.38";
	"p16.17" -> "custom-call.19";
	"iota.27" -> "broadcast.28";
	"p1.2" -> "broadcast.29";
	"broadcast.28" -> "compare.30";
	"broadcast.29" -> "compare.30";
	"compare.30" -> "broadcast.34";
	"iota.27" -> "broadcast.31";
	"p2.3" -> "broadcast.32";
	"broadcast.31" -> "compare.33";
	"broadcast.32" -> "compare.33";
	"compare.33" -> "broadcast.35";
	"broadcast.34" -> "and.36";
	"broadcast.35" -> "and.36";
	"and.36" -> "reshape.90";
	"reshape.90" -> "broadcast.91";
	"p1.2" -> "convert.20";
	"convert.20" -> "reshape.21";
	"constant.22" -> "reshape.23";
	"reshape.21" -> "dot.24";
	"reshape.23" -> "dot.24";
	"dot.24" -> "cosine.26";
	"cosine.26" -> "reshape.60";
	"reshape.60" -> "broadcast.61";
	"p6.7" -> "custom-call.39";
	"p0.1" -> "custom-call.49";
	"custom-call.39" -> "custom-call.49";
	"constant.48" -> "custom-call.49";
	"custom-call.49" -> "transpose.50";
	"transpose.50" -> "reshape.51";
	"p7.8" -> "custom-call.40";
	"reshape.51" -> "dot.52";
	"custom-call.40" -> "dot.52";
	"dot.52" -> "reshape.55";
	"reshape.55" -> "slice.62";
	"broadcast.61" -> "multiply.64";
	"slice.62" -> "multiply.64";
	"dot.24" -> "sine.25";
	"sine.25" -> "reshape.58";
	"reshape.58" -> "broadcast.59";
	"reshape.55" -> "slice.63";
	"broadcast.59" -> "multiply.65";
	"slice.63" -> "multiply.65";
	"multiply.64" -> "subtract.66";
	"multiply.65" -> "subtract.66";
	"broadcast.61" -> "multiply.67";
	"slice.63" -> "multiply.67";
	"broadcast.59" -> "multiply.68";
	"slice.62" -> "multiply.68";
	"multiply.67" -> "add.69";
	"multiply.68" -> "add.69";
	"subtract.66" -> "concatenate.70";
	"add.69" -> "concatenate.70";
	"constant.84" -> "broadcast.85";
	"concatenate.70" -> "divide.86";
	"broadcast.85" -> "divide.86";
	"cosine.26" -> "reshape.73";
	"reshape.73" -> "broadcast.74";
	"p8.9" -> "custom-call.41";
	"reshape.51" -> "dot.53";
	"custom-call.41" -> "dot.53";
	"dot.53" -> "reshape.56";
	"reshape.56" -> "slice.75";
	"broadcast.74" -> "multiply.77";
	"slice.75" -> "multiply.77";
	"sine.25" -> "reshape.71";
	"reshape.71" -> "broadcast.72";
	"reshape.56" -> "slice.76";
	"broadcast.72" -> "multiply.78";
	"slice.76" -> "multiply.78";
	"multiply.77" -> "subtract.79";
	"multiply.78" -> "subtract.79";
	"broadcast.74" -> "multiply.80";
	"slice.76" -> "multiply.80";
	"broadcast.72" -> "multiply.81";
	"slice.75" -> "multiply.81";
	"multiply.80" -> "add.82";
	"multiply.81" -> "add.82";
	"subtract.79" -> "concatenate.83";
	"add.82" -> "concatenate.83";
	"divide.86" -> "dot.87";
	"concatenate.83" -> "dot.87";
	"constant.88" -> "broadcast.89";
	"broadcast.91" -> "select.92";
	"dot.87" -> "select.92";
	"broadcast.89" -> "select.92";
	"select.92" -> "reduce.94";
	"constant.93" -> "reduce.94";
	"reduce.94.Reducer.99" -> "reduce.94";
	"reduce.94" -> "reshape.100";
	"reshape.100" -> "broadcast.101";
	"select.92" -> "subtract.102";
	"broadcast.101" -> "subtract.102";
	"subtract.102" -> "exponential.103";
	"exponential.103" -> "reduce.105";
	"constant.104" -> "reduce.105";
	"reduce.105.Reducer.110" -> "reduce.105";
	"reduce.105" -> "reshape.111";
	"reshape.111" -> "broadcast.112";
	"exponential.103" -> "divide.113";
	"broadcast.112" -> "divide.113";
	"p9.10" -> "custom-call.42";
	"reshape.51" -> "dot.54";
	"custom-call.42" -> "dot.54";
	"dot.54" -> "reshape.57";
	"divide.113" -> "dot.114";
	"reshape.57" -> "dot.114";
	"dot.114" -> "transpose.115";
	"transpose.115" -> "reshape.116";
	"p10.11" -> "custom-call.43";
	"reshape.116" -> "dot.117";
	"custom-call.43" -> "dot.117";
	"dot.117" -> "reshape.118";
	"reshape.118" -> "transpose.119";
	"transpose.119" -> "add.120";
	"p0.1" -> "add.120";
	"p11.12" -> "custom-call.44";
	"add.120" -> "custom-call.122";
	"custom-call.44" -> "custom-call.122";
	"constant.121" -> "custom-call.122";
	"custom-call.122" -> "reshape.123";
	"p12.13" -> "custom-call.45";
	"reshape.123" -> "dot.124";
	"custom-call.45" -> "dot.124";
	"dot.124" -> "logistic.125";
	"dot.124" -> "multiply.126";
	"logistic.125" -> "multiply.126";
	"p13.14" -> "custom-call.46";
	"reshape.123" -> "dot.127";
	"custom-call.46" -> "dot.127";
	"multiply.126" -> "multiply.128";
	"dot.127" -> "multiply.128";
	"p14.15" -> "custom-call.47";
	"multiply.128" -> "dot.129";
	"custom-call.47" -> "dot.129";
	"dot.129" -> "reshape.130";
	"reshape.130" -> "add.131";
	"add.120" -> "add.131";
	"add.131" -> "transpose.132";
	"transpose.132" -> "gather.133";
	"p3.4" -> "gather.133";
	"gather.133" -> "transpose.134";
	"p15.16" -> "custom-call.18";
	"transpose.134" -> "custom-call.136";
	"custom-call.18" -> "custom-call.136";
	"constant.135" -> "custom-call.136";
	"custom-call.136" -> "transpose.137";
	"transpose.137" -> "reshape.138";
	"custom-call.19" -> "dot.139";
	"reshape.138" -> "dot.139";
	"dot.139" -> "reshape.140";
	"reshape.140" -> "tuple.141";
	"concatenate.83" -> "tuple.141";
	"reshape.57" -> "tuple.141";
 }