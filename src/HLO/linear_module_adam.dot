digraph HloModule {
	"p8.53" [label="p8.53 \n f32[1,4]"];
	"p7.49" [label="p7.49 \n f32[] parameter(7), frontend_attributes="];
	"broadcast.50" [label="broadcast.50 \n f32[1,4]"];
	"p5.14" [label="p5.14 \n f32[4]"];
	"p4.7" [label="p4.7 \n f32[] parameter(4), frontend_attributes="];
	"broadcast.5" [label="broadcast.5 \n f32[4]"];
	"multiply.1" [label="multiply.1 \n f32[4]"];
	"reshape.10" [label="reshape.10 \n f32[1,4]"];
	"multiply.51" [label="multiply.51 \n f32[1,4]"];
	"p6.26" [label="p6.26 \n f32[] parameter(6), frontend_attributes="];
	"multiply.6" [label="multiply.6 \n f32[] multiply(f32[] %constant.9, f32[] %p6.26), metadata="];
	"broadcast.3" [label="broadcast.3 \n f32[1,4]"];
	"multiply.34" [label="multiply.34 \n f32[1,4]"];
	"p3.6" [label="p3.6 \n f32[] parameter(3), frontend_attributes="];
	"broadcast.35" [label="broadcast.35 \n f32[1,4]"];
	"multiply.36" [label="multiply.36 \n f32[1,4]"];
	"add.37" [label="add.37 \n f32[1,4]"];
	"sqrt.38" [label="sqrt.38 \n f32[1,4]"];
	"p2.5" [label="p2.5 \n f32[] parameter(2), frontend_attributes="];
	"broadcast.39" [label="broadcast.39 \n f32[1,4]"];
	"divide.40" [label="divide.40 \n f32[1,4]"];
	"p1.3" [label="p1.3 \n f32[] parameter(1), frontend_attributes="];
	"broadcast.41" [label="broadcast.41 \n f32[1,4]"];
	"add.42" [label="add.42 \n f32[1,4]"];
	"divide.54" [label="divide.54 \n f32[1,4]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"broadcast.55" [label="broadcast.55 \n f32[1,4]"];
	"multiply.56" [label="multiply.56 \n f32[1,4]"];
	"add.57" [label="add.57 \n f32[1,4]"];
	"p9.88" [label="p9.88 \n f32[1]"];
	"reshape.18" [label="reshape.18 \n f32[1]"];
	"reshape.47" [label="reshape.47 \n f32[1]"];
	"multiply.86" [label="multiply.86 \n f32[1]"];
	"multiply.5" [label="multiply.5 \n f32[] multiply(f32[] %constant.10, f32[] %p6.26), metadata="];
	"reshape.50" [label="reshape.50 \n f32[1]"];
	"multiply.72" [label="multiply.72 \n f32[1]"];
	"reshape.21" [label="reshape.21 \n f32[1]"];
	"multiply.74" [label="multiply.74 \n f32[1]"];
	"add.75" [label="add.75 \n f32[1]"];
	"sqrt.76" [label="sqrt.76 \n f32[1]"];
	"reshape.22" [label="reshape.22 \n f32[1]"];
	"divide.78" [label="divide.78 \n f32[1]"];
	"reshape.23" [label="reshape.23 \n f32[1]"];
	"add.80" [label="add.80 \n f32[1]"];
	"divide.89" [label="divide.89 \n f32[1]"];
	"reshape.24" [label="reshape.24 \n f32[1]"];
	"multiply.91" [label="multiply.91 \n f32[1]"];
	"add.92" [label="add.92 \n f32[1]"];
	"reshape.27" [label="reshape.27 \n f32[4]"];
	"multiply.2" [label="multiply.2 \n f32[4]"];
	"reshape.114" [label="reshape.114 \n f32[1]"];
	"add.115" [label="add.115 \n f32[1]"];
	"reshape.33" [label="reshape.33 \n f32[1]"];
	"multiply.117" [label="multiply.117 \n f32[1]"];
	"tuple.118" [label="tuple.118 \n (f32[1,4]"]; 
 	"p7.49" -> "broadcast.50";
	"p4.7" -> "broadcast.5";
	"p5.14" -> "multiply.1";
	"broadcast.5" -> "multiply.1";
	"multiply.1" -> "reshape.10";
	"reshape.10" -> "custom-call.4";
	"broadcast.50" -> "multiply.51";
	"custom-call.4" -> "multiply.51";
	"constant.9" -> "multiply.6";
	"p6.26" -> "multiply.6";
	"multiply.6" -> "broadcast.3";
	"custom-call.4" -> "multiply.34";
	"custom-call.4" -> "multiply.34";
	"p3.6" -> "broadcast.35";
	"multiply.34" -> "multiply.36";
	"broadcast.35" -> "multiply.36";
	"broadcast.3" -> "add.37";
	"multiply.36" -> "add.37";
	"add.37" -> "sqrt.38";
	"p2.5" -> "broadcast.39";
	"sqrt.38" -> "divide.40";
	"broadcast.39" -> "divide.40";
	"p1.3" -> "broadcast.41";
	"divide.40" -> "add.42";
	"broadcast.41" -> "add.42";
	"multiply.51" -> "divide.54";
	"add.42" -> "divide.54";
	"p0.1" -> "broadcast.55";
	"divide.54" -> "multiply.56";
	"broadcast.55" -> "multiply.56";
	"p8.53" -> "add.57";
	"multiply.56" -> "add.57";
	"p7.49" -> "reshape.18";
	"p4.7" -> "reshape.47";
	"reshape.47" -> "custom-call.5";
	"reshape.18" -> "multiply.86";
	"custom-call.5" -> "multiply.86";
	"constant.10" -> "multiply.5";
	"p6.26" -> "multiply.5";
	"multiply.5" -> "reshape.50";
	"custom-call.5" -> "multiply.72";
	"custom-call.5" -> "multiply.72";
	"p3.6" -> "reshape.21";
	"multiply.72" -> "multiply.74";
	"reshape.21" -> "multiply.74";
	"reshape.50" -> "add.75";
	"multiply.74" -> "add.75";
	"add.75" -> "sqrt.76";
	"p2.5" -> "reshape.22";
	"sqrt.76" -> "divide.78";
	"reshape.22" -> "divide.78";
	"p1.3" -> "reshape.23";
	"divide.78" -> "add.80";
	"reshape.23" -> "add.80";
	"multiply.86" -> "divide.89";
	"add.80" -> "divide.89";
	"p0.1" -> "reshape.24";
	"divide.89" -> "multiply.91";
	"reshape.24" -> "multiply.91";
	"p9.88" -> "add.92";
	"multiply.91" -> "add.92";
	"p8.53" -> "custom-call.6";
	"custom-call.6" -> "reshape.27";
	"p5.14" -> "multiply.2";
	"reshape.27" -> "multiply.2";
	"multiply.2" -> "reduce";
	"constant" -> "reduce";
	"scalar_add_computation" -> "reduce";
	"reduce" -> "reshape.114";
	"p9.88" -> "custom-call.7";
	"reshape.114" -> "add.115";
	"custom-call.7" -> "add.115";
	"p4.7" -> "reshape.33";
	"add.115" -> "multiply.117";
	"reshape.33" -> "multiply.117";
	"add.57" -> "tuple.118";
	"add.92" -> "tuple.118";
	"p5.14" -> "tuple.118";
	"add.115" -> "tuple.118";
	"multiply.117" -> "tuple.118";
	"custom-call.5" -> "tuple.118";
	"custom-call.4" -> "tuple.118";
	"multiply.51" -> "tuple.118";
	"add.37" -> "tuple.118";
	"multiply.86" -> "tuple.118";
	"add.75" -> "tuple.118";
}