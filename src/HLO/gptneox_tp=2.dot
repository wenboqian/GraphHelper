digraph HloModule {
	"p24.25" [label="p24.25 \n f32[6144,25216]"];
	"p0.1" [label="p0.1 \n f32[6144,1,4]"];
	"transpose.51" [label="transpose.51 \n f32[4,1,6144]"];
	"reshape.170" [label="reshape.170 \n f32[4,6144]"];
	"convert.171" [label="convert.171 \n f32[4,6144]"];
	"broadcast.173" [label="broadcast.173 \n f32[4]"];
	"broadcast.175" [label="broadcast.175 \n f32[4]"];
	"p16.17" [label="p16.17 \n f32[6144]"];
	"broadcast.178" [label="broadcast.178 \n f32[4,6144]"];
	"multiply.179" [label="multiply.179 \n f32[4,6144]"];
	"p17.18" [label="p17.18 \n f32[6144]"];
	"broadcast.180" [label="broadcast.180 \n f32[4,6144]"];
	"add.181" [label="add.181 \n f32[4,6144]"];
	"convert.182" [label="convert.182 \n f32[4,6144]"];
	"reshape.183" [label="reshape.183 \n f32[4,1,6144]"];
	"reshape.184" [label="reshape.184 \n f32[4,6144]"];
	"p18.19" [label="p18.19 \n f32[6144,12288]"];
	"dot.185" [label="dot.185 \n f32[4,12288]"];
	"p19.20" [label="p19.20 \n f32[12288]"];
	"broadcast.186" [label="broadcast.186 \n f32[4,12288]"];
	"add.187" [label="add.187 \n f32[4,12288]"];
	"p20.21" [label="p20.21 \n f32[12288,6144]"];
	"dot.189" [label="dot.189 \n f32[4,6144]"];
	"p21.22" [label="p21.22 \n f32[6144]"];
	"broadcast.190" [label="broadcast.190 \n f32[4,6144]"];
	"add.191" [label="add.191 \n f32[4,6144]"];
	"reshape.192" [label="reshape.192 \n f32[4,1,6144]"];
	"iota.26" [label="iota.26 \n s32[128]"];
	"broadcast.27" [label="broadcast.27 \n s32[1,128]"];
	"p2.3" [label="p2.3 \n s32[1]"];
	"broadcast.28" [label="broadcast.28 \n s32[1,128]"];
	"compare.29" [label="compare.29 \n pred[1,128]"];
	"broadcast.33" [label="broadcast.33 \n pred[4,1,128]"];
	"broadcast.30" [label="broadcast.30 \n s32[4,128]"];
	"p3.4" [label="p3.4 \n s32[4]"];
	"broadcast.31" [label="broadcast.31 \n s32[4,128]"];
	"compare.32" [label="compare.32 \n pred[4,128]"];
	"broadcast.34" [label="broadcast.34 \n pred[4,1,128]"];
	"and.35" [label="and.35 \n pred[4,1,128]"];
	"broadcast.92" [label="broadcast.92 \n pred[4,32,1,128]"];
	"reshape.52" [label="reshape.52 \n f32[4,6144]"];
	"convert.53" [label="convert.53 \n f32[4,6144]"];
	"broadcast.55" [label="broadcast.55 \n f32[4]"];
	"broadcast.57" [label="broadcast.57 \n f32[4]"];
	"p6.7" [label="p6.7 \n f32[6144]"];
	"broadcast.60" [label="broadcast.60 \n f32[4,6144]"];
	"multiply.61" [label="multiply.61 \n f32[4,6144]"];
	"p7.8" [label="p7.8 \n f32[6144]"];
	"broadcast.62" [label="broadcast.62 \n f32[4,6144]"];
	"add.63" [label="add.63 \n f32[4,6144]"];
	"convert.64" [label="convert.64 \n f32[4,6144]"];
	"reshape.65" [label="reshape.65 \n f32[4,1,6144]"];
	"transpose.66" [label="transpose.66 \n f32[6144,1,4]"];
	"reshape.67" [label="reshape.67 \n f32[6144,4]"];
	"p8.9" [label="p8.9 \n f32[6144,3072]"];
	"dot.68" [label="dot.68 \n f32[4,3072]"];
	"p9.10" [label="p9.10 \n f32[3072]"];
	"broadcast.69" [label="broadcast.69 \n f32[4,3072]"];
	"add.70" [label="add.70 \n f32[4,3072]"];
	"reshape.77" [label="reshape.77 \n f32[1,4,32,96]"];
	"reshape.80" [label="reshape.80 \n f32[1,128,96]"];
	"p1.2" [label="p1.2 \n f32[1,96,96]"];
	"dot.81" [label="dot.81 \n f32[1,128,96]"];
	"reshape.82" [label="reshape.82 \n f32[1,4,32,96]"];
	"broadcast.87" [label="broadcast.87 \n f32[1,4,32,96]"];
	"divide.88" [label="divide.88 \n f32[1,4,32,96]"];
	"p4.5" [label="p4.5 \n f32[128,4,32,96]"];
	"dot.89" [label="dot.89 \n f32[4,32,1,128]"];
	"broadcast.91" [label="broadcast.91 \n f32[4,32,1,128]"];
	"select.93" [label="select.93 \n f32[4,32,1,128]"];
	"reduce.100" [label="reduce.100 \n f32[4,32,1]"];
	"broadcast.37" [label="broadcast.37 \n s32[4,1]"];
	"broadcast.36" [label="broadcast.36 \n s32[4,1]"];
	"compare.38" [label="compare.38 \n pred[4,1]"];
	"broadcast.97" [label="broadcast.97 \n pred[4,32,1,1]"];
	"p10.11" [label="p10.11 \n f32[6144,3072]"];
	"dot.71" [label="dot.71 \n f32[4,3072]"];
	"p11.12" [label="p11.12 \n f32[3072]"];
	"broadcast.72" [label="broadcast.72 \n f32[4,3072]"];
	"add.73" [label="add.73 \n f32[4,3072]"];
	"reshape.78" [label="reshape.78 \n f32[1,4,32,96]"];
	"reshape.83" [label="reshape.83 \n f32[1,128,96]"];
	"dot.84" [label="dot.84 \n f32[1,128,96]"];
	"reshape.85" [label="reshape.85 \n f32[1,4,32,96]"];
	"dot.94" [label="dot.94 \n f32[4,32,1,1]"];
	"broadcast.96" [label="broadcast.96 \n f32[4,32,1,1]"];
	"select.98" [label="select.98 \n f32[4,32,1,1]"];
	"reduce.106" [label="reduce.106 \n f32[4,32,1]"];
	"maximum.112" [label="maximum.112 \n f32[4,32,1]"];
	"broadcast.113" [label="broadcast.113 \n f32[4,32,1,128]"];
	"subtract.114" [label="subtract.114 \n f32[4,32,1,128]"];
	"exponential.115" [label="exponential.115 \n f32[4,32,1,128]"];
	"convert.123" [label="convert.123 \n f32[4,32,1,128]"];
	"p5.6" [label="p5.6 \n f32[128,4,32,96]"];
	"dot.136" [label="dot.136 \n f32[4,32,1,96]"];
	"broadcast.124" [label="broadcast.124 \n f32[4,32,1,1]"];
	"subtract.125" [label="subtract.125 \n f32[4,32,1,1]"];
	"exponential.126" [label="exponential.126 \n f32[4,32,1,1]"];
	"convert.134" [label="convert.134 \n f32[4,32,1,1]"];
	"p12.13" [label="p12.13 \n f32[6144,3072]"];
	"dot.74" [label="dot.74 \n f32[4,3072]"];
	"p13.14" [label="p13.14 \n f32[3072]"];
	"broadcast.75" [label="broadcast.75 \n f32[4,3072]"];
	"add.76" [label="add.76 \n f32[4,3072]"];
	"reshape.79" [label="reshape.79 \n f32[1,4,32,96]"];
	"dot.137" [label="dot.137 \n f32[4,32,1,96]"];
	"add.138" [label="add.138 \n f32[4,32,1,96]"];
	"reduce.117" [label="reduce.117 \n f32[4,32,1]"];
	"reduce.127" [label="reduce.127 \n f32[4,32,1]"];
	"add.133" [label="add.133 \n f32[4,32,1]"];
	"convert.135" [label="convert.135 \n f32[4,32,1]"];
	"broadcast.139" [label="broadcast.139 \n f32[4,32,1,96]"];
	"divide.140" [label="divide.140 \n f32[4,32,1,96]"];
	"transpose.141" [label="transpose.141 \n f32[4,1,32,96]"];
	"reshape.152" [label="reshape.152 \n f32[4,3072]"];
	"p14.15" [label="p14.15 \n f32[3072,6144]"];
	"dot.153" [label="dot.153 \n f32[4,6144]"];
	"p15.16" [label="p15.16 \n f32[6144]"];
	"broadcast.154" [label="broadcast.154 \n f32[4,6144]"];
	"add.155" [label="add.155 \n f32[4,6144]"];
	"reshape.156" [label="reshape.156 \n f32[4,1,6144]"];
	"add.163" [label="add.163 \n f32[4,1,6144]"];
	"add.199" [label="add.199 \n f32[4,1,6144]"];
	"transpose.200" [label="transpose.200 \n f32[6144,1,4]"];
	"reshape.204" [label="reshape.204 \n f32[6144,4]"];
	"convert.205" [label="convert.205 \n f32[6144,4]"];
	"broadcast.207" [label="broadcast.207 \n f32[4]"];
	"broadcast.209" [label="broadcast.209 \n f32[4]"];
	"p22.23" [label="p22.23 \n f32[6144]"];
	"broadcast.212" [label="broadcast.212 \n f32[6144,4]"];
	"multiply.213" [label="multiply.213 \n f32[6144,4]"];
	"p23.24" [label="p23.24 \n f32[6144]"];
	"broadcast.214" [label="broadcast.214 \n f32[6144,4]"];
	"add.215" [label="add.215 \n f32[6144,4]"];
	"convert.216" [label="convert.216 \n f32[6144,4]"];
	"reshape.217" [label="reshape.217 \n f32[6144,1,4]"];
	"reshape.218" [label="reshape.218 \n f32[6144,4]"];
	"dot.219" [label="dot.219 \n f32[25216,4]"];
	"reshape.220" [label="reshape.220 \n f32[25216,1,4]"];
	"scatter.142" [label="scatter.142 \n f32[128,4,32,96]"];
	"scatter.147" [label="scatter.147 \n f32[128,4,32,96]"];
	"tuple.221" [label="tuple.221 \n (f32[25216,1,4]"]; 
 	"p24.25" -> "custom-call.203";
	"p0.1" -> "transpose.51";
	"transpose.51" -> "reshape.170";
	"reshape.170" -> "convert.171";
	"constant.172" -> "broadcast.173";
	"constant.174" -> "broadcast.175";
	"convert.171" -> "batch-norm-training.176";
	"broadcast.173" -> "batch-norm-training.176";
	"broadcast.175" -> "batch-norm-training.176";
	"batch-norm-training.176" -> "get-tuple-element.177";
	"p16.17" -> "custom-call.164";
	"custom-call.164" -> "broadcast.178";
	"get-tuple-element.177" -> "multiply.179";
	"broadcast.178" -> "multiply.179";
	"p17.18" -> "custom-call.165";
	"custom-call.165" -> "broadcast.180";
	"multiply.179" -> "add.181";
	"broadcast.180" -> "add.181";
	"add.181" -> "convert.182";
	"convert.182" -> "reshape.183";
	"reshape.183" -> "reshape.184";
	"p18.19" -> "custom-call.166";
	"reshape.184" -> "dot.185";
	"custom-call.166" -> "dot.185";
	"p19.20" -> "custom-call.167";
	"custom-call.167" -> "broadcast.186";
	"dot.185" -> "add.187";
	"broadcast.186" -> "add.187";
	"add.187" -> "custom-call.188";
	"p20.21" -> "custom-call.168";
	"custom-call.188" -> "dot.189";
	"custom-call.168" -> "dot.189";
	"p21.22" -> "custom-call.169";
	"custom-call.169" -> "broadcast.190";
	"dot.189" -> "add.191";
	"broadcast.190" -> "add.191";
	"add.191" -> "reshape.192";
	"reshape.192" -> "all-reduce.193";
	"all-reduce.193.Reducer.198" -> "all-reduce.193";
	"iota.26" -> "broadcast.27";
	"p2.3" -> "broadcast.28";
	"broadcast.27" -> "compare.29";
	"broadcast.28" -> "compare.29";
	"compare.29" -> "broadcast.33";
	"iota.26" -> "broadcast.30";
	"p3.4" -> "broadcast.31";
	"broadcast.30" -> "compare.32";
	"broadcast.31" -> "compare.32";
	"compare.32" -> "broadcast.34";
	"broadcast.33" -> "and.35";
	"broadcast.34" -> "and.35";
	"and.35" -> "broadcast.92";
	"transpose.51" -> "reshape.52";
	"reshape.52" -> "convert.53";
	"constant.54" -> "broadcast.55";
	"constant.56" -> "broadcast.57";
	"convert.53" -> "batch-norm-training.58";
	"broadcast.55" -> "batch-norm-training.58";
	"broadcast.57" -> "batch-norm-training.58";
	"batch-norm-training.58" -> "get-tuple-element.59";
	"p6.7" -> "custom-call.39";
	"custom-call.39" -> "broadcast.60";
	"get-tuple-element.59" -> "multiply.61";
	"broadcast.60" -> "multiply.61";
	"p7.8" -> "custom-call.40";
	"custom-call.40" -> "broadcast.62";
	"multiply.61" -> "add.63";
	"broadcast.62" -> "add.63";
	"add.63" -> "convert.64";
	"convert.64" -> "reshape.65";
	"reshape.65" -> "transpose.66";
	"transpose.66" -> "reshape.67";
	"p8.9" -> "custom-call.41";
	"reshape.67" -> "dot.68";
	"custom-call.41" -> "dot.68";
	"p9.10" -> "custom-call.42";
	"custom-call.42" -> "broadcast.69";
	"dot.68" -> "add.70";
	"broadcast.69" -> "add.70";
	"add.70" -> "reshape.77";
	"reshape.77" -> "reshape.80";
	"reshape.80" -> "dot.81";
	"p1.2" -> "dot.81";
	"dot.81" -> "reshape.82";
	"constant.86" -> "broadcast.87";
	"reshape.82" -> "divide.88";
	"broadcast.87" -> "divide.88";
	"p4.5" -> "custom-call.49";
	"divide.88" -> "dot.89";
	"custom-call.49" -> "dot.89";
	"constant.90" -> "broadcast.91";
	"broadcast.92" -> "select.93";
	"dot.89" -> "select.93";
	"broadcast.91" -> "select.93";
	"select.93" -> "reduce.100";
	"constant.99" -> "reduce.100";
	"reduce.100.MaxFunc.105" -> "reduce.100";
	"p2.3" -> "broadcast.37";
	"p3.4" -> "broadcast.36";
	"broadcast.37" -> "compare.38";
	"broadcast.36" -> "compare.38";
	"compare.38" -> "broadcast.97";
	"p10.11" -> "custom-call.43";
	"reshape.67" -> "dot.71";
	"custom-call.43" -> "dot.71";
	"p11.12" -> "custom-call.44";
	"custom-call.44" -> "broadcast.72";
	"dot.71" -> "add.73";
	"broadcast.72" -> "add.73";
	"add.73" -> "reshape.78";
	"reshape.78" -> "reshape.83";
	"reshape.83" -> "dot.84";
	"p1.2" -> "dot.84";
	"dot.84" -> "reshape.85";
	"divide.88" -> "dot.94";
	"reshape.85" -> "dot.94";
	"constant.95" -> "broadcast.96";
	"broadcast.97" -> "select.98";
	"dot.94" -> "select.98";
	"broadcast.96" -> "select.98";
	"select.98" -> "reduce.106";
	"constant.99" -> "reduce.106";
	"reduce.106.MaxFunc.111" -> "reduce.106";
	"reduce.100" -> "maximum.112";
	"reduce.106" -> "maximum.112";
	"maximum.112" -> "broadcast.113";
	"select.93" -> "subtract.114";
	"broadcast.113" -> "subtract.114";
	"subtract.114" -> "exponential.115";
	"exponential.115" -> "convert.123";
	"p5.6" -> "custom-call.50";
	"convert.123" -> "dot.136";
	"custom-call.50" -> "dot.136";
	"maximum.112" -> "broadcast.124";
	"select.98" -> "subtract.125";
	"broadcast.124" -> "subtract.125";
	"subtract.125" -> "exponential.126";
	"exponential.126" -> "convert.134";
	"p12.13" -> "custom-call.45";
	"reshape.67" -> "dot.74";
	"custom-call.45" -> "dot.74";
	"p13.14" -> "custom-call.46";
	"custom-call.46" -> "broadcast.75";
	"dot.74" -> "add.76";
	"broadcast.75" -> "add.76";
	"add.76" -> "reshape.79";
	"convert.134" -> "dot.137";
	"reshape.79" -> "dot.137";
	"dot.136" -> "add.138";
	"dot.137" -> "add.138";
	"exponential.115" -> "reduce.117";
	"constant.116" -> "reduce.117";
	"reduce.117.AddFunc.122" -> "reduce.117";
	"exponential.126" -> "reduce.127";
	"constant.116" -> "reduce.127";
	"reduce.127.AddFunc.132" -> "reduce.127";
	"reduce.117" -> "add.133";
	"reduce.127" -> "add.133";
	"add.133" -> "convert.135";
	"convert.135" -> "broadcast.139";
	"add.138" -> "divide.140";
	"broadcast.139" -> "divide.140";
	"divide.140" -> "transpose.141";
	"transpose.141" -> "reshape.152";
	"p14.15" -> "custom-call.47";
	"reshape.152" -> "dot.153";
	"custom-call.47" -> "dot.153";
	"p15.16" -> "custom-call.48";
	"custom-call.48" -> "broadcast.154";
	"dot.153" -> "add.155";
	"broadcast.154" -> "add.155";
	"add.155" -> "reshape.156";
	"reshape.156" -> "all-reduce.157";
	"all-reduce.157.Reducer.162" -> "all-reduce.157";
	"all-reduce.157" -> "add.163";
	"transpose.51" -> "add.163";
	"all-reduce.193" -> "add.199";
	"add.163" -> "add.199";
	"add.199" -> "transpose.200";
	"transpose.200" -> "reshape.204";
	"reshape.204" -> "convert.205";
	"constant.206" -> "broadcast.207";
	"constant.208" -> "broadcast.209";
	"convert.205" -> "batch-norm-training.210";
	"broadcast.207" -> "batch-norm-training.210";
	"broadcast.209" -> "batch-norm-training.210";
	"batch-norm-training.210" -> "get-tuple-element.211";
	"p22.23" -> "custom-call.201";
	"custom-call.201" -> "broadcast.212";
	"get-tuple-element.211" -> "multiply.213";
	"broadcast.212" -> "multiply.213";
	"p23.24" -> "custom-call.202";
	"custom-call.202" -> "broadcast.214";
	"multiply.213" -> "add.215";
	"broadcast.214" -> "add.215";
	"add.215" -> "convert.216";
	"convert.216" -> "reshape.217";
	"reshape.217" -> "reshape.218";
	"custom-call.203" -> "dot.219";
	"reshape.218" -> "dot.219";
	"dot.219" -> "reshape.220";
	"custom-call.49" -> "scatter.142";
	"p2.3" -> "scatter.142";
	"reshape.85" -> "scatter.142";
	"scatter.142.AssignFunc.146" -> "scatter.142";
	"custom-call.50" -> "scatter.147";
	"p2.3" -> "scatter.147";
	"reshape.79" -> "scatter.147";
	"scatter.147.AssignFunc.151" -> "scatter.147";
	"reshape.220" -> "tuple.221";
	"scatter.142" -> "tuple.221";
	"scatter.147" -> "tuple.221";
}