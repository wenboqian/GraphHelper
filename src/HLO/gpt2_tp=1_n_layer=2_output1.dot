digraph HloModule { 
	"iota.48" [label="iota.48 \n s32[128]"];
	"broadcast.49" [label="broadcast.49 \n s32[1,128]"];
	"p1.2" [label="p1.2 \n s32[1]"];
	"broadcast.50" [label="broadcast.50 \n s32[1,128]"];
	"compare.51" [label="compare.51 \n pred[1,128]"];
	"broadcast.55" [label="broadcast.55 \n pred[4,1,128]"];
	"broadcast.52" [label="broadcast.52 \n s32[4,128]"];
	"p2.3" [label="p2.3 \n s32[4]"];
	"broadcast.53" [label="broadcast.53 \n s32[4,128]"];
	"compare.54" [label="compare.54 \n pred[4,128]"];
	"broadcast.56" [label="broadcast.56 \n pred[4,1,128]"];
	"and.57" [label="and.57 \n pred[4,1,128]"];
	"reshape.266" [label="reshape.266 \n pred[4,128]"];
	"broadcast.267" [label="broadcast.267 \n pred[4,12,1,128]"];
	"reshape.115" [label="reshape.115 \n pred[4,128]"];
	"p0.1" [label="p0.1 \n f32[768,1,4]"];
	"reshape.79" [label="reshape.79 \n f32[768,4]"];
	"broadcast.59" [label="broadcast.59 \n s32[4,1]"];
	"broadcast.58" [label="broadcast.58 \n s32[4,1]"];
	"compare.60" [label="compare.60 \n pred[4,1]"];
	"reshape.121" [label="reshape.121 \n pred[4]"];
	"reshape.177" [label="reshape.177 \n f32[4,768]"];
	"p17.18" [label="p17.18 \n f32[768,768]"];
	"dot.178" [label="dot.178 \n f32[4,768]"];
	"p18.19" [label="p18.19 \n f32[768]"];
	"reshape.179" [label="reshape.179 \n f32[768]"];
	"broadcast.180" [label="broadcast.180 \n f32[4,768]"];
	"add.181" [label="add.181 \n f32[4,768]"];
	"transpose.182" [label="transpose.182 \n f32[768,4]"];
	"reshape.183" [label="reshape.183 \n f32[768,1,4]"];
	"add.184" [label="add.184 \n f32[768,1,4]"];
	"reshape.185" [label="reshape.185 \n f32[768,4]"];
	"convert.186" [label="convert.186 \n f32[768,4]"];
	"broadcast.188" [label="broadcast.188 \n f32[4]"];
	"broadcast.190" [label="broadcast.190 \n f32[4]"];
	"p19.20" [label="p19.20 \n f32[768]"];
	"broadcast.193" [label="broadcast.193 \n f32[768,4]"];
	"multiply.194" [label="multiply.194 \n f32[768,4]"];
	"p20.21" [label="p20.21 \n f32[768]"];
	"broadcast.195" [label="broadcast.195 \n f32[768,4]"];
	"add.196" [label="add.196 \n f32[768,4]"];
	"convert.197" [label="convert.197 \n f32[768,4]"];
	"reshape.198" [label="reshape.198 \n f32[768,1,4]"];
	"reshape.199" [label="reshape.199 \n f32[768,4]"];
	"p21.22" [label="p21.22 \n f32[768,3072]"];
	"dot.200" [label="dot.200 \n f32[4,3072]"];
	"p22.23" [label="p22.23 \n f32[3072]"];
	"reshape.201" [label="reshape.201 \n f32[3072]"];
	"broadcast.202" [label="broadcast.202 \n f32[4,3072]"];
	"add.203" [label="add.203 \n f32[4,3072]"];
	"p23.24" [label="p23.24 \n f32[768,3072]"];
	"dot.205" [label="dot.205 \n f32[4,768]"];
	"p24.25" [label="p24.25 \n f32[768]"];
	"reshape.206" [label="reshape.206 \n f32[768]"];
	"broadcast.207" [label="broadcast.207 \n f32[4,768]"];
	"add.208" [label="add.208 \n f32[4,768]"];
	"transpose.209" [label="transpose.209 \n f32[768,4]"];
	"reshape.210" [label="reshape.210 \n f32[768,1,4]"];
	"add.211" [label="add.211 \n f32[768,1,4]"];
	"reshape.230" [label="reshape.230 \n f32[768,4]"];
	"convert.231" [label="convert.231 \n f32[768,4]"];
	"broadcast.233" [label="broadcast.233 \n f32[4]"];
	"broadcast.235" [label="broadcast.235 \n f32[4]"];
	"p25.26" [label="p25.26 \n f32[768]"];
	"broadcast.238" [label="broadcast.238 \n f32[768,4]"];
	"multiply.239" [label="multiply.239 \n f32[768,4]"];
	"p26.27" [label="p26.27 \n f32[768]"];
	"broadcast.240" [label="broadcast.240 \n f32[768,4]"];
	"add.241" [label="add.241 \n f32[768,4]"];
	"convert.242" [label="convert.242 \n f32[768,4]"];
	"reshape.243" [label="reshape.243 \n f32[768,1,4]"];
	"reshape.244" [label="reshape.244 \n f32[768,4]"];
	"p27.28" [label="p27.28 \n f32[768,768]"];
	"dot.245" [label="dot.245 \n f32[4,768]"];
	"p28.29" [label="p28.29 \n f32[768]"];
	"reshape.246" [label="reshape.246 \n f32[768]"];
	"broadcast.247" [label="broadcast.247 \n f32[4,768]"];
	"add.248" [label="add.248 \n f32[4,768]"];
	"reshape.257" [label="reshape.257 \n f32[1,4,12,64]"];
	"broadcast.261" [label="broadcast.261 \n f32[1,4,12,64]"];
	"divide.262" [label="divide.262 \n f32[1,4,12,64]"];
	"p7.8" [label="p7.8 \n f32[128,4,12,64]"];
	"dot.263" [label="dot.263 \n f32[4,12,1,128]"];
	"broadcast.265" [label="broadcast.265 \n f32[4,12,1,128]"];
	"select.268" [label="select.268 \n f32[4,12,1,128]"];
	"reduce.276" [label="reduce.276 \n f32[4,12,1]"];
	"reshape.272" [label="reshape.272 \n pred[4]"];
	"broadcast.273" [label="broadcast.273 \n pred[4,12,1,1]"];
	"p29.30" [label="p29.30 \n f32[768,768]"];
	"dot.249" [label="dot.249 \n f32[4,768]"];
	"p30.31" [label="p30.31 \n f32[768]"];
	"reshape.250" [label="reshape.250 \n f32[768]"];
	"broadcast.251" [label="broadcast.251 \n f32[4,768]"];
	"add.252" [label="add.252 \n f32[4,768]"];
	"reshape.258" [label="reshape.258 \n f32[1,4,12,64]"];
	"dot.269" [label="dot.269 \n f32[4,12,1,1]"];
	"broadcast.271" [label="broadcast.271 \n f32[4,12,1,1]"];
	"select.274" [label="select.274 \n f32[4,12,1,1]"];
	"reduce.282" [label="reduce.282 \n f32[4,12,1]"];
	"maximum.288" [label="maximum.288 \n f32[4,12,1]"];
	"broadcast.289" [label="broadcast.289 \n f32[4,12,1,128]"];
	"subtract.290" [label="subtract.290 \n f32[4,12,1,128]"];
	"exponential.291" [label="exponential.291 \n f32[4,12,1,128]"];
	"convert.299" [label="convert.299 \n f32[4,12,1,128]"];
	"p8.9" [label="p8.9 \n f32[128,4,12,64]"];
	"dot.312" [label="dot.312 \n f32[4,12,1,64]"];
	"broadcast.300" [label="broadcast.300 \n f32[4,12,1,1]"];
	"subtract.301" [label="subtract.301 \n f32[4,12,1,1]"];
	"exponential.302" [label="exponential.302 \n f32[4,12,1,1]"];
	"convert.310" [label="convert.310 \n f32[4,12,1,1]"];
	"p31.32" [label="p31.32 \n f32[768,768]"];
	"dot.253" [label="dot.253 \n f32[4,768]"];
	"p32.33" [label="p32.33 \n f32[768]"];
	"reshape.254" [label="reshape.254 \n f32[768]"];
	"broadcast.255" [label="broadcast.255 \n f32[4,768]"];
	"add.256" [label="add.256 \n f32[4,768]"];
	"reshape.259" [label="reshape.259 \n f32[1,4,12,64]"];
	"dot.313" [label="dot.313 \n f32[4,12,1,64]"];
	"add.314" [label="add.314 \n f32[4,12,1,64]"];
	"reduce.293" [label="reduce.293 \n f32[4,12,1]"];
	"reduce.303" [label="reduce.303 \n f32[4,12,1]"];
	"add.309" [label="add.309 \n f32[4,12,1]"];
	"convert.311" [label="convert.311 \n f32[4,12,1]"];
	"broadcast.315" [label="broadcast.315 \n f32[4,12,1,64]"];
	"divide.316" [label="divide.316 \n f32[4,12,1,64]"];
	"transpose.317" [label="transpose.317 \n f32[1,4,12,64]"]; 
 	"iota.48" -> "broadcast.49";
	"p1.2" -> "broadcast.50";
	"broadcast.49" -> "compare.51";
	"broadcast.50" -> "compare.51";
	"compare.51" -> "broadcast.55";
	"iota.48" -> "broadcast.52";
	"p2.3" -> "broadcast.53";
	"broadcast.52" -> "compare.54";
	"broadcast.53" -> "compare.54";
	"compare.54" -> "broadcast.56";
	"broadcast.55" -> "and.57";
	"broadcast.56" -> "and.57";
	"and.57" -> "reshape.266";
	"reshape.266" -> "broadcast.267";
	"and.57" -> "reshape.115";
	"p0.1" -> "reshape.79";
	"p1.2" -> "broadcast.59";
	"p2.3" -> "broadcast.58";
	"broadcast.59" -> "compare.60";
	"broadcast.58" -> "compare.60";
	"compare.60" -> "reshape.121";
	"transpose.166" -> "reshape.177";
	"p17.18" -> "custom-call.71";
	"reshape.177" -> "dot.178";
	"custom-call.71" -> "dot.178";
	"p18.19" -> "custom-call.72";
	"custom-call.72" -> "reshape.179";
	"reshape.179" -> "broadcast.180";
	"dot.178" -> "add.181";
	"broadcast.180" -> "add.181";
	"add.181" -> "transpose.182";
	"transpose.182" -> "reshape.183";
	"reshape.183" -> "add.184";
	"p0.1" -> "add.184";
	"add.184" -> "reshape.185";
	"reshape.185" -> "convert.186";
	"constant.187" -> "broadcast.188";
	"constant.189" -> "broadcast.190";
	"convert.186" -> "batch-norm-training.191";
	"broadcast.188" -> "batch-norm-training.191";
	"broadcast.190" -> "batch-norm-training.191";
	"batch-norm-training.191" -> "get-tuple-element.192";
	"p19.20" -> "custom-call.73";
	"custom-call.73" -> "broadcast.193";
	"get-tuple-element.192" -> "multiply.194";
	"broadcast.193" -> "multiply.194";
	"p20.21" -> "custom-call.74";
	"custom-call.74" -> "broadcast.195";
	"multiply.194" -> "add.196";
	"broadcast.195" -> "add.196";
	"add.196" -> "convert.197";
	"convert.197" -> "reshape.198";
	"reshape.198" -> "reshape.199";
	"p21.22" -> "custom-call.75";
	"reshape.199" -> "dot.200";
	"custom-call.75" -> "dot.200";
	"p22.23" -> "custom-call.76";
	"custom-call.76" -> "reshape.201";
	"reshape.201" -> "broadcast.202";
	"dot.200" -> "add.203";
	"broadcast.202" -> "add.203";
	"add.203" -> "custom-call.204";
	"p23.24" -> "custom-call.77";
	"custom-call.204" -> "dot.205";
	"custom-call.77" -> "dot.205";
	"p24.25" -> "custom-call.78";
	"custom-call.78" -> "reshape.206";
	"reshape.206" -> "broadcast.207";
	"dot.205" -> "add.208";
	"broadcast.207" -> "add.208";
	"add.208" -> "transpose.209";
	"transpose.209" -> "reshape.210";
	"reshape.210" -> "add.211";
	"add.184" -> "add.211";
	"add.211" -> "reshape.230";
	"reshape.230" -> "convert.231";
	"constant.232" -> "broadcast.233";
	"constant.234" -> "broadcast.235";
	"convert.231" -> "batch-norm-training.236";
	"broadcast.233" -> "batch-norm-training.236";
	"broadcast.235" -> "batch-norm-training.236";
	"batch-norm-training.236" -> "get-tuple-element.237";
	"p25.26" -> "custom-call.214";
	"custom-call.214" -> "broadcast.238";
	"get-tuple-element.237" -> "multiply.239";
	"broadcast.238" -> "multiply.239";
	"p26.27" -> "custom-call.215";
	"custom-call.215" -> "broadcast.240";
	"multiply.239" -> "add.241";
	"broadcast.240" -> "add.241";
	"add.241" -> "convert.242";
	"convert.242" -> "reshape.243";
	"reshape.243" -> "reshape.244";
	"p27.28" -> "custom-call.216";
	"reshape.244" -> "dot.245";
	"custom-call.216" -> "dot.245";
	"p28.29" -> "custom-call.217";
	"custom-call.217" -> "reshape.246";
	"reshape.246" -> "broadcast.247";
	"dot.245" -> "add.248";
	"broadcast.247" -> "add.248";
	"add.248" -> "reshape.257";
	"constant.260" -> "broadcast.261";
	"reshape.257" -> "divide.262";
	"broadcast.261" -> "divide.262";
	"p7.8" -> "custom-call.212";
	"divide.262" -> "dot.263";
	"custom-call.212" -> "dot.263";
	"constant.264" -> "broadcast.265";
	"broadcast.267" -> "select.268";
	"dot.263" -> "select.268";
	"broadcast.265" -> "select.268";
	"select.268" -> "reduce.276";
	"constant.275" -> "reduce.276";
	"reduce.276.MaxFunc.281" -> "reduce.276";
	"compare.60" -> "reshape.272";
	"reshape.272" -> "broadcast.273";
	"p29.30" -> "custom-call.218";
	"reshape.244" -> "dot.249";
	"custom-call.218" -> "dot.249";
	"p30.31" -> "custom-call.219";
	"custom-call.219" -> "reshape.250";
	"reshape.250" -> "broadcast.251";
	"dot.249" -> "add.252";
	"broadcast.251" -> "add.252";
	"add.252" -> "reshape.258";
	"divide.262" -> "dot.269";
	"reshape.258" -> "dot.269";
	"constant.270" -> "broadcast.271";
	"broadcast.273" -> "select.274";
	"dot.269" -> "select.274";
	"broadcast.271" -> "select.274";
	"select.274" -> "reduce.282";
	"constant.275" -> "reduce.282";
	"reduce.282.MaxFunc.287" -> "reduce.282";
	"reduce.276" -> "maximum.288";
	"reduce.282" -> "maximum.288";
	"maximum.288" -> "broadcast.289";
	"select.268" -> "subtract.290";
	"broadcast.289" -> "subtract.290";
	"subtract.290" -> "exponential.291";
	"exponential.291" -> "convert.299";
	"p8.9" -> "custom-call.213";
	"convert.299" -> "dot.312";
	"custom-call.213" -> "dot.312";
	"maximum.288" -> "broadcast.300";
	"select.274" -> "subtract.301";
	"broadcast.300" -> "subtract.301";
	"subtract.301" -> "exponential.302";
	"exponential.302" -> "convert.310";
	"p31.32" -> "custom-call.220";
	"reshape.244" -> "dot.253";
	"custom-call.220" -> "dot.253";
	"p32.33" -> "custom-call.221";
	"custom-call.221" -> "reshape.254";
	"reshape.254" -> "broadcast.255";
	"dot.253" -> "add.256";
	"broadcast.255" -> "add.256";
	"add.256" -> "reshape.259";
	"convert.310" -> "dot.313";
	"reshape.259" -> "dot.313";
	"dot.312" -> "add.314";
	"dot.313" -> "add.314";
	"exponential.291" -> "reduce.293";
	"constant.292" -> "reduce.293";
	"reduce.293.AddFunc.298" -> "reduce.293";
	"exponential.302" -> "reduce.303";
	"constant.292" -> "reduce.303";
	"reduce.303.AddFunc.308" -> "reduce.303";
	"reduce.293" -> "add.309";
	"reduce.303" -> "add.309";
	"add.309" -> "convert.311";
	"convert.311" -> "broadcast.315";
	"add.314" -> "divide.316";
	"broadcast.315" -> "divide.316";
	"divide.316" -> "transpose.317";
 }