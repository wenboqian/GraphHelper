digraph HloModule { 
	"p3.4" [label="p3.4 \n s32[1]"];
	"p16.17" [label="p16.17 \n f32[4096,32000]"];
	"iota.27" [label="iota.27 \n s32[128]"];
	"broadcast.28" [label="broadcast.28 \n s32[1,128]"];
	"p1.2" [label="p1.2 \n s32[1]"];
	"broadcast.29" [label="broadcast.29 \n s32[1,128]"];
	"compare.30" [label="compare.30 \n pred[1,128]"];
	"broadcast.34" [label="broadcast.34 \n pred[4,1,128]"];
	"broadcast.31" [label="broadcast.31 \n s32[4,128]"];
	"p2.3" [label="p2.3 \n s32[4]"];
	"broadcast.32" [label="broadcast.32 \n s32[4,128]"];
	"compare.33" [label="compare.33 \n pred[4,128]"];
	"broadcast.35" [label="broadcast.35 \n pred[4,1,128]"];
	"and.36" [label="and.36 \n pred[4,1,128]"];
	"reshape.92" [label="reshape.92 \n pred[4,128]"];
	"broadcast.93" [label="broadcast.93 \n pred[4,4,1,128]"];
	"convert.20" [label="convert.20 \n f32[1]"];
	"reshape.21" [label="reshape.21 \n f32[1,1]"];
	"constant.22" [label="constant.22 \n f32[512]"];
	"reshape.23" [label="reshape.23 \n f32[1,512]"];
	"dot.24" [label="dot.24 \n f32[1,512]"];
	"cosine.26" [label="cosine.26 \n f32[1,512]"];
	"reshape.62" [label="reshape.62 \n f32[512]"];
	"broadcast.63" [label="broadcast.63 \n f32[1,4,4,512]"];
	"p0.1" [label="p0.1 \n f32[4096,1,4]"];
	"p6.7" [label="p6.7 \n f32[4096]"];
	"reshape.53" [label="reshape.53 \n f32[4096,4]"];
	"p7.8" [label="p7.8 \n f32[4096,4096]"];
	"dot.54" [label="dot.54 \n f32[4,4096]"];
	"reshape.57" [label="reshape.57 \n f32[1,4,4,1024]"];
	"slice.64" [label="slice.64 \n f32[1,4,4,512]"];
	"multiply.66" [label="multiply.66 \n f32[1,4,4,512]"];
	"sine.25" [label="sine.25 \n f32[1,512]"];
	"reshape.60" [label="reshape.60 \n f32[512]"];
	"broadcast.61" [label="broadcast.61 \n f32[1,4,4,512]"];
	"slice.65" [label="slice.65 \n f32[1,4,4,512]"];
	"multiply.67" [label="multiply.67 \n f32[1,4,4,512]"];
	"subtract.68" [label="subtract.68 \n f32[1,4,4,512]"];
	"multiply.69" [label="multiply.69 \n f32[1,4,4,512]"];
	"multiply.70" [label="multiply.70 \n f32[1,4,4,512]"];
	"add.71" [label="add.71 \n f32[1,4,4,512]"];
	"concatenate.72" [label="concatenate.72 \n f32[1,4,4,1024]"];
	"broadcast.87" [label="broadcast.87 \n f32[1,4,4,1024]"];
	"divide.88" [label="divide.88 \n f32[1,4,4,1024]"];
	"p4.5" [label="p4.5 \n f32[128,4,4,1024]"];
	"dot.89" [label="dot.89 \n f32[4,4,1,128]"];
	"broadcast.91" [label="broadcast.91 \n f32[4,4,1,128]"];
	"select.94" [label="select.94 \n f32[4,4,1,128]"];
	"reduce.102" [label="reduce.102 \n f32[4,4,1]"];
	"broadcast.38" [label="broadcast.38 \n s32[4,1]"];
	"broadcast.37" [label="broadcast.37 \n s32[4,1]"];
	"compare.39" [label="compare.39 \n pred[4,1]"];
	"reshape.98" [label="reshape.98 \n pred[4]"];
	"broadcast.99" [label="broadcast.99 \n pred[4,4,1,1]"];
	"reshape.75" [label="reshape.75 \n f32[512]"];
	"broadcast.76" [label="broadcast.76 \n f32[1,4,4,512]"];
	"p8.9" [label="p8.9 \n f32[4096,4096]"];
	"dot.55" [label="dot.55 \n f32[4,4096]"];
	"reshape.58" [label="reshape.58 \n f32[1,4,4,1024]"];
	"slice.77" [label="slice.77 \n f32[1,4,4,512]"];
	"multiply.79" [label="multiply.79 \n f32[1,4,4,512]"];
	"reshape.73" [label="reshape.73 \n f32[512]"];
	"broadcast.74" [label="broadcast.74 \n f32[1,4,4,512]"];
	"slice.78" [label="slice.78 \n f32[1,4,4,512]"];
	"multiply.80" [label="multiply.80 \n f32[1,4,4,512]"];
	"subtract.81" [label="subtract.81 \n f32[1,4,4,512]"];
	"multiply.82" [label="multiply.82 \n f32[1,4,4,512]"];
	"multiply.83" [label="multiply.83 \n f32[1,4,4,512]"];
	"add.84" [label="add.84 \n f32[1,4,4,512]"];
	"concatenate.85" [label="concatenate.85 \n f32[1,4,4,1024]"];
	"dot.95" [label="dot.95 \n f32[4,4,1,1]"];
	"broadcast.97" [label="broadcast.97 \n f32[4,4,1,1]"];
	"select.100" [label="select.100 \n f32[4,4,1,1]"];
	"reduce.109" [label="reduce.109 \n f32[4,4,1]"];
	"maximum.115" [label="maximum.115 \n f32[4,4,1]"];
	"reshape.116" [label="reshape.116 \n f32[4,4]"];
	"broadcast.117" [label="broadcast.117 \n f32[4,4,1,128]"];
	"subtract.118" [label="subtract.118 \n f32[4,4,1,128]"];
	"exponential.119" [label="exponential.119 \n f32[4,4,1,128]"];
	"p5.6" [label="p5.6 \n f32[128,4,4,1024]"];
	"dot.140" [label="dot.140 \n f32[4,4,1,1024]"];
	"reshape.127" [label="reshape.127 \n f32[4,4]"];
	"broadcast.128" [label="broadcast.128 \n f32[4,4,1,1]"];
	"subtract.129" [label="subtract.129 \n f32[4,4,1,1]"];
	"exponential.130" [label="exponential.130 \n f32[4,4,1,1]"];
	"p9.10" [label="p9.10 \n f32[4096,4096]"];
	"dot.56" [label="dot.56 \n f32[4,4096]"];
	"reshape.59" [label="reshape.59 \n f32[1,4,4,1024]"];
	"dot.141" [label="dot.141 \n f32[4,4,1,1024]"];
	"add.142" [label="add.142 \n f32[4,4,1,1024]"];
	"reduce.121" [label="reduce.121 \n f32[4,4,1]"];
	"reduce.132" [label="reduce.132 \n f32[4,4,1]"];
	"add.138" [label="add.138 \n f32[4,4,1]"];
	"convert.139" [label="convert.139 \n f32[4,4,1]"];
	"reshape.143" [label="reshape.143 \n f32[4,4]"];
	"broadcast.144" [label="broadcast.144 \n f32[4,4,1,1024]"];
	"divide.145" [label="divide.145 \n f32[4,4,1,1024]"];
	"transpose.146" [label="transpose.146 \n f32[1,4,4,1024]"];
	"reshape.157" [label="reshape.157 \n f32[4,4096]"];
	"p10.11" [label="p10.11 \n f32[4096,4096]"];
	"dot.158" [label="dot.158 \n f32[4,4096]"];
	"transpose.159" [label="transpose.159 \n f32[4096,4]"];
	"reshape.160" [label="reshape.160 \n f32[4096,1,4]"];
	"add.161" [label="add.161 \n f32[4096,1,4]"];
	"p11.12" [label="p11.12 \n f32[4096]"];
	"reshape.164" [label="reshape.164 \n f32[4096,4]"];
	"p12.13" [label="p12.13 \n f32[4096,11008]"];
	"dot.165" [label="dot.165 \n f32[4,11008]"];
	"logistic.166" [label="logistic.166 \n f32[4,11008]"];
	"multiply.167" [label="multiply.167 \n f32[4,11008]"];
	"p13.14" [label="p13.14 \n f32[4096,11008]"];
	"dot.168" [label="dot.168 \n f32[4,11008]"];
	"multiply.169" [label="multiply.169 \n f32[4,11008]"];
	"p14.15" [label="p14.15 \n f32[4096,11008]"];
	"dot.170" [label="dot.170 \n f32[4,4096]"];
	"transpose.171" [label="transpose.171 \n f32[4096,4]"];
	"reshape.172" [label="reshape.172 \n f32[4096,1,4]"];
	"add.173" [label="add.173 \n f32[4096,1,4]"];
	"p15.16" [label="p15.16 \n f32[4096]"];
	"reshape.176" [label="reshape.176 \n f32[4096,4]"];
	"dot.177" [label="dot.177 \n f32[32000,4]"];
	"reshape.178" [label="reshape.178 \n f32[32000,1,4]"];
	"scatter.147" [label="scatter.147 \n f32[128,4,4,1024]"];
	"scatter.152" [label="scatter.152 \n f32[128,4,4,1024]"];
	"tuple.179" [label="tuple.179 \n (f32[32000,1,4]"]; 
 	"p16.17" -> "custom-call.19";
	"iota.27" -> "broadcast.28";
	"p1.2" -> "broadcast.29";
	"broadcast.28" -> "compare.30";
	"broadcast.29" -> "compare.30";
	"compare.30" -> "broadcast.34";
	"iota.27" -> "broadcast.31";
	"p2.3" -> "broadcast.32";
	"broadcast.31" -> "compare.33";
	"broadcast.32" -> "compare.33";
	"compare.33" -> "broadcast.35";
	"broadcast.34" -> "and.36";
	"broadcast.35" -> "and.36";
	"and.36" -> "reshape.92";
	"reshape.92" -> "broadcast.93";
	"p1.2" -> "convert.20";
	"convert.20" -> "reshape.21";
	"constant.22" -> "reshape.23";
	"reshape.21" -> "dot.24";
	"reshape.23" -> "dot.24";
	"dot.24" -> "cosine.26";
	"cosine.26" -> "reshape.62";
	"reshape.62" -> "broadcast.63";
	"p6.7" -> "custom-call.42";
	"p0.1" -> "custom-call.52";
	"custom-call.42" -> "custom-call.52";
	"constant.51" -> "custom-call.52";
	"custom-call.52" -> "reshape.53";
	"p7.8" -> "custom-call.43";
	"reshape.53" -> "dot.54";
	"custom-call.43" -> "dot.54";
	"dot.54" -> "reshape.57";
	"reshape.57" -> "slice.64";
	"broadcast.63" -> "multiply.66";
	"slice.64" -> "multiply.66";
	"dot.24" -> "sine.25";
	"sine.25" -> "reshape.60";
	"reshape.60" -> "broadcast.61";
	"reshape.57" -> "slice.65";
	"broadcast.61" -> "multiply.67";
	"slice.65" -> "multiply.67";
	"multiply.66" -> "subtract.68";
	"multiply.67" -> "subtract.68";
	"broadcast.63" -> "multiply.69";
	"slice.65" -> "multiply.69";
	"broadcast.61" -> "multiply.70";
	"slice.64" -> "multiply.70";
	"multiply.69" -> "add.71";
	"multiply.70" -> "add.71";
	"subtract.68" -> "concatenate.72";
	"add.71" -> "concatenate.72";
	"constant.86" -> "broadcast.87";
	"concatenate.72" -> "divide.88";
	"broadcast.87" -> "divide.88";
	"p4.5" -> "custom-call.40";
	"divide.88" -> "dot.89";
	"custom-call.40" -> "dot.89";
	"constant.90" -> "broadcast.91";
	"broadcast.93" -> "select.94";
	"dot.89" -> "select.94";
	"broadcast.91" -> "select.94";
	"select.94" -> "reduce.102";
	"constant.101" -> "reduce.102";
	"reduce.102.Reducer.107" -> "reduce.102";
	"p1.2" -> "broadcast.38";
	"p2.3" -> "broadcast.37";
	"broadcast.38" -> "compare.39";
	"broadcast.37" -> "compare.39";
	"compare.39" -> "reshape.98";
	"reshape.98" -> "broadcast.99";
	"cosine.26" -> "reshape.75";
	"reshape.75" -> "broadcast.76";
	"p8.9" -> "custom-call.44";
	"reshape.53" -> "dot.55";
	"custom-call.44" -> "dot.55";
	"dot.55" -> "reshape.58";
	"reshape.58" -> "slice.77";
	"broadcast.76" -> "multiply.79";
	"slice.77" -> "multiply.79";
	"sine.25" -> "reshape.73";
	"reshape.73" -> "broadcast.74";
	"reshape.58" -> "slice.78";
	"broadcast.74" -> "multiply.80";
	"slice.78" -> "multiply.80";
	"multiply.79" -> "subtract.81";
	"multiply.80" -> "subtract.81";
	"broadcast.76" -> "multiply.82";
	"slice.78" -> "multiply.82";
	"broadcast.74" -> "multiply.83";
	"slice.77" -> "multiply.83";
	"multiply.82" -> "add.84";
	"multiply.83" -> "add.84";
	"subtract.81" -> "concatenate.85";
	"add.84" -> "concatenate.85";
	"divide.88" -> "dot.95";
	"concatenate.85" -> "dot.95";
	"constant.96" -> "broadcast.97";
	"broadcast.99" -> "select.100";
	"dot.95" -> "select.100";
	"broadcast.97" -> "select.100";
	"select.100" -> "reduce.109";
	"constant.108" -> "reduce.109";
	"reduce.109.Reducer.114" -> "reduce.109";
	"reduce.102" -> "maximum.115";
	"reduce.109" -> "maximum.115";
	"maximum.115" -> "reshape.116";
	"reshape.116" -> "broadcast.117";
	"select.94" -> "subtract.118";
	"broadcast.117" -> "subtract.118";
	"subtract.118" -> "exponential.119";
	"p5.6" -> "custom-call.41";
	"exponential.119" -> "dot.140";
	"custom-call.41" -> "dot.140";
	"maximum.115" -> "reshape.127";
	"reshape.127" -> "broadcast.128";
	"select.100" -> "subtract.129";
	"broadcast.128" -> "subtract.129";
	"subtract.129" -> "exponential.130";
	"p9.10" -> "custom-call.45";
	"reshape.53" -> "dot.56";
	"custom-call.45" -> "dot.56";
	"dot.56" -> "reshape.59";
	"exponential.130" -> "dot.141";
	"reshape.59" -> "dot.141";
	"dot.140" -> "add.142";
	"dot.141" -> "add.142";
	"exponential.119" -> "reduce.121";
	"constant.120" -> "reduce.121";
	"reduce.121.Reducer.126" -> "reduce.121";
	"exponential.130" -> "reduce.132";
	"constant.131" -> "reduce.132";
	"reduce.132.Reducer.137" -> "reduce.132";
	"reduce.121" -> "add.138";
	"reduce.132" -> "add.138";
	"add.138" -> "convert.139";
	"convert.139" -> "reshape.143";
	"reshape.143" -> "broadcast.144";
	"add.142" -> "divide.145";
	"broadcast.144" -> "divide.145";
	"divide.145" -> "transpose.146";
	"transpose.146" -> "reshape.157";
	"p10.11" -> "custom-call.46";
	"reshape.157" -> "dot.158";
	"custom-call.46" -> "dot.158";
	"dot.158" -> "transpose.159";
	"transpose.159" -> "reshape.160";
	"reshape.160" -> "add.161";
	"p0.1" -> "add.161";
	"p11.12" -> "custom-call.47";
	"add.161" -> "custom-call.163";
	"custom-call.47" -> "custom-call.163";
	"constant.162" -> "custom-call.163";
	"custom-call.163" -> "reshape.164";
	"p12.13" -> "custom-call.48";
	"reshape.164" -> "dot.165";
	"custom-call.48" -> "dot.165";
	"dot.165" -> "logistic.166";
	"dot.165" -> "multiply.167";
	"logistic.166" -> "multiply.167";
	"p13.14" -> "custom-call.49";
	"reshape.164" -> "dot.168";
	"custom-call.49" -> "dot.168";
	"multiply.167" -> "multiply.169";
	"dot.168" -> "multiply.169";
	"p14.15" -> "custom-call.50";
	"multiply.169" -> "dot.170";
	"custom-call.50" -> "dot.170";
	"dot.170" -> "transpose.171";
	"transpose.171" -> "reshape.172";
	"reshape.172" -> "add.173";
	"add.161" -> "add.173";
	"p15.16" -> "custom-call.18";
	"add.173" -> "custom-call.175";
	"custom-call.18" -> "custom-call.175";
	"constant.174" -> "custom-call.175";
	"custom-call.175" -> "reshape.176";
	"custom-call.19" -> "dot.177";
	"reshape.176" -> "dot.177";
	"dot.177" -> "reshape.178";
	"custom-call.40" -> "scatter.147";
	"p1.2" -> "scatter.147";
	"concatenate.85" -> "scatter.147";
	"scatter.147.AssignFunc.151" -> "scatter.147";
	"custom-call.41" -> "scatter.152";
	"p1.2" -> "scatter.152";
	"reshape.59" -> "scatter.152";
	"scatter.152.AssignFunc.156" -> "scatter.152";
	"reshape.178" -> "tuple.179";
	"scatter.147" -> "tuple.179";
	"scatter.152" -> "tuple.179";
 }