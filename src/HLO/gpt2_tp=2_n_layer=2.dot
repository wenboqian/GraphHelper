digraph HloModule { 
	"p3.4" [label="p3.4 \n s32[1]"];
	"p4.5" [label="p4.5 \n s32[1]"];
	"p43.44" [label="p43.44 \n f32[768,25129]"];
	"iota.48" [label="iota.48 \n s32[128]"];
	"broadcast.49" [label="broadcast.49 \n s32[1,128]"];
	"p1.2" [label="p1.2 \n s32[1]"];
	"broadcast.50" [label="broadcast.50 \n s32[1,128]"];
	"compare.51" [label="compare.51 \n pred[1,128]"];
	"broadcast.55" [label="broadcast.55 \n pred[4,1,128]"];
	"broadcast.52" [label="broadcast.52 \n s32[4,128]"];
	"p2.3" [label="p2.3 \n s32[4]"];
	"broadcast.53" [label="broadcast.53 \n s32[4,128]"];
	"compare.54" [label="compare.54 \n pred[4,128]"];
	"broadcast.56" [label="broadcast.56 \n pred[4,1,128]"];
	"and.57" [label="and.57 \n pred[4,1,128]"];
	"reshape.278" [label="reshape.278 \n pred[4,128]"];
	"broadcast.279" [label="broadcast.279 \n pred[4,6,1,128]"];
	"reshape.115" [label="reshape.115 \n pred[4,128]"];
	"broadcast.116" [label="broadcast.116 \n pred[4,6,1,128]"];
	"p0.1" [label="p0.1 \n f32[768,1,4]"];
	"reshape.79" [label="reshape.79 \n f32[768,4]"];
	"convert.80" [label="convert.80 \n f32[768,4]"];
	"broadcast.82" [label="broadcast.82 \n f32[4]"];
	"broadcast.84" [label="broadcast.84 \n f32[4]"];
	"p9.10" [label="p9.10 \n f32[768]"];
	"broadcast.87" [label="broadcast.87 \n f32[768,4]"];
	"multiply.88" [label="multiply.88 \n f32[768,4]"];
	"p10.11" [label="p10.11 \n f32[768]"];
	"broadcast.89" [label="broadcast.89 \n f32[768,4]"];
	"add.90" [label="add.90 \n f32[768,4]"];
	"convert.91" [label="convert.91 \n f32[768,4]"];
	"reshape.92" [label="reshape.92 \n f32[768,1,4]"];
	"reshape.93" [label="reshape.93 \n f32[768,4]"];
	"p11.12" [label="p11.12 \n f32[768,384]"];
	"dot.94" [label="dot.94 \n f32[4,384]"];
	"p12.13" [label="p12.13 \n f32[384]"];
	"reshape.95" [label="reshape.95 \n f32[384]"];
	"broadcast.96" [label="broadcast.96 \n f32[4,384]"];
	"add.97" [label="add.97 \n f32[4,384]"];
	"reshape.106" [label="reshape.106 \n f32[1,4,6,64]"];
	"broadcast.110" [label="broadcast.110 \n f32[1,4,6,64]"];
	"divide.111" [label="divide.111 \n f32[1,4,6,64]"];
	"p5.6" [label="p5.6 \n f32[128,4,6,64]"];
	"dot.112" [label="dot.112 \n f32[4,6,1,128]"];
	"broadcast.114" [label="broadcast.114 \n f32[4,6,1,128]"];
	"select.117" [label="select.117 \n f32[4,6,1,128]"];
	"reduce.125" [label="reduce.125 \n f32[4,6,1]"];
	"broadcast.59" [label="broadcast.59 \n s32[4,1]"];
	"broadcast.58" [label="broadcast.58 \n s32[4,1]"];
	"compare.60" [label="compare.60 \n pred[4,1]"];
	"reshape.121" [label="reshape.121 \n pred[4]"];
	"broadcast.122" [label="broadcast.122 \n pred[4,6,1,1]"];
	"p13.14" [label="p13.14 \n f32[768,384]"];
	"dot.98" [label="dot.98 \n f32[4,384]"];
	"p14.15" [label="p14.15 \n f32[384]"];
	"reshape.99" [label="reshape.99 \n f32[384]"];
	"broadcast.100" [label="broadcast.100 \n f32[4,384]"];
	"add.101" [label="add.101 \n f32[4,384]"];
	"reshape.107" [label="reshape.107 \n f32[1,4,6,64]"];
	"dot.118" [label="dot.118 \n f32[4,6,1,1]"];
	"broadcast.120" [label="broadcast.120 \n f32[4,6,1,1]"];
	"select.123" [label="select.123 \n f32[4,6,1,1]"];
	"reduce.131" [label="reduce.131 \n f32[4,6,1]"];
	"maximum.137" [label="maximum.137 \n f32[4,6,1]"];
	"broadcast.138" [label="broadcast.138 \n f32[4,6,1,128]"];
	"subtract.139" [label="subtract.139 \n f32[4,6,1,128]"];
	"exponential.140" [label="exponential.140 \n f32[4,6,1,128]"];
	"convert.148" [label="convert.148 \n f32[4,6,1,128]"];
	"p6.7" [label="p6.7 \n f32[128,4,6,64]"];
	"dot.161" [label="dot.161 \n f32[4,6,1,64]"];
	"broadcast.149" [label="broadcast.149 \n f32[4,6,1,1]"];
	"subtract.150" [label="subtract.150 \n f32[4,6,1,1]"];
	"exponential.151" [label="exponential.151 \n f32[4,6,1,1]"];
	"convert.159" [label="convert.159 \n f32[4,6,1,1]"];
	"p15.16" [label="p15.16 \n f32[768,384]"];
	"dot.102" [label="dot.102 \n f32[4,384]"];
	"p16.17" [label="p16.17 \n f32[384]"];
	"reshape.103" [label="reshape.103 \n f32[384]"];
	"broadcast.104" [label="broadcast.104 \n f32[4,384]"];
	"add.105" [label="add.105 \n f32[4,384]"];
	"reshape.108" [label="reshape.108 \n f32[1,4,6,64]"];
	"dot.162" [label="dot.162 \n f32[4,6,1,64]"];
	"add.163" [label="add.163 \n f32[4,6,1,64]"];
	"reduce.142" [label="reduce.142 \n f32[4,6,1]"];
	"reduce.152" [label="reduce.152 \n f32[4,6,1]"];
	"add.158" [label="add.158 \n f32[4,6,1]"];
	"convert.160" [label="convert.160 \n f32[4,6,1]"];
	"broadcast.164" [label="broadcast.164 \n f32[4,6,1,64]"];
	"divide.165" [label="divide.165 \n f32[4,6,1,64]"];
	"transpose.166" [label="transpose.166 \n f32[1,4,6,64]"];
	"reshape.177" [label="reshape.177 \n f32[4,384]"];
	"p17.18" [label="p17.18 \n f32[768,384]"];
	"dot.178" [label="dot.178 \n f32[4,768]"];
	"p18.19" [label="p18.19 \n f32[768]"];
	"reshape.179" [label="reshape.179 \n f32[768]"];
	"broadcast.180" [label="broadcast.180 \n f32[4,768]"];
	"add.181" [label="add.181 \n f32[4,768]"];
	"transpose.182" [label="transpose.182 \n f32[768,4]"];
	"reshape.183" [label="reshape.183 \n f32[768,1,4]"];
	"add.190" [label="add.190 \n f32[768,1,4]"];
	"reshape.191" [label="reshape.191 \n f32[768,4]"];
	"convert.192" [label="convert.192 \n f32[768,4]"];
	"broadcast.194" [label="broadcast.194 \n f32[4]"];
	"broadcast.196" [label="broadcast.196 \n f32[4]"];
	"p19.20" [label="p19.20 \n f32[768]"];
	"broadcast.199" [label="broadcast.199 \n f32[768,4]"];
	"multiply.200" [label="multiply.200 \n f32[768,4]"];
	"p20.21" [label="p20.21 \n f32[768]"];
	"broadcast.201" [label="broadcast.201 \n f32[768,4]"];
	"add.202" [label="add.202 \n f32[768,4]"];
	"convert.203" [label="convert.203 \n f32[768,4]"];
	"reshape.204" [label="reshape.204 \n f32[768,1,4]"];
	"reshape.205" [label="reshape.205 \n f32[768,4]"];
	"p21.22" [label="p21.22 \n f32[768,1536]"];
	"dot.206" [label="dot.206 \n f32[4,1536]"];
	"p22.23" [label="p22.23 \n f32[1536]"];
	"reshape.207" [label="reshape.207 \n f32[1536]"];
	"broadcast.208" [label="broadcast.208 \n f32[4,1536]"];
	"add.209" [label="add.209 \n f32[4,1536]"];
	"p23.24" [label="p23.24 \n f32[768,1536]"];
	"dot.211" [label="dot.211 \n f32[4,768]"];
	"p24.25" [label="p24.25 \n f32[768]"];
	"reshape.212" [label="reshape.212 \n f32[768]"];
	"broadcast.213" [label="broadcast.213 \n f32[4,768]"];
	"add.214" [label="add.214 \n f32[4,768]"];
	"transpose.215" [label="transpose.215 \n f32[768,4]"];
	"reshape.216" [label="reshape.216 \n f32[768,1,4]"];
	"add.223" [label="add.223 \n f32[768,1,4]"];
	"reshape.242" [label="reshape.242 \n f32[768,4]"];
	"convert.243" [label="convert.243 \n f32[768,4]"];
	"broadcast.245" [label="broadcast.245 \n f32[4]"];
	"broadcast.247" [label="broadcast.247 \n f32[4]"];
	"p25.26" [label="p25.26 \n f32[768]"];
	"broadcast.250" [label="broadcast.250 \n f32[768,4]"];
	"multiply.251" [label="multiply.251 \n f32[768,4]"];
	"p26.27" [label="p26.27 \n f32[768]"];
	"broadcast.252" [label="broadcast.252 \n f32[768,4]"];
	"add.253" [label="add.253 \n f32[768,4]"];
	"convert.254" [label="convert.254 \n f32[768,4]"];
	"reshape.255" [label="reshape.255 \n f32[768,1,4]"];
	"reshape.256" [label="reshape.256 \n f32[768,4]"];
	"p27.28" [label="p27.28 \n f32[768,384]"];
	"dot.257" [label="dot.257 \n f32[4,384]"];
	"p28.29" [label="p28.29 \n f32[384]"];
	"reshape.258" [label="reshape.258 \n f32[384]"];
	"broadcast.259" [label="broadcast.259 \n f32[4,384]"];
	"add.260" [label="add.260 \n f32[4,384]"];
	"reshape.269" [label="reshape.269 \n f32[1,4,6,64]"];
	"broadcast.273" [label="broadcast.273 \n f32[1,4,6,64]"];
	"divide.274" [label="divide.274 \n f32[1,4,6,64]"];
	"p7.8" [label="p7.8 \n f32[128,4,6,64]"];
	"dot.275" [label="dot.275 \n f32[4,6,1,128]"];
	"broadcast.277" [label="broadcast.277 \n f32[4,6,1,128]"];
	"select.280" [label="select.280 \n f32[4,6,1,128]"];
	"reduce.288" [label="reduce.288 \n f32[4,6,1]"];
	"reshape.284" [label="reshape.284 \n pred[4]"];
	"broadcast.285" [label="broadcast.285 \n pred[4,6,1,1]"];
	"p29.30" [label="p29.30 \n f32[768,384]"];
	"dot.261" [label="dot.261 \n f32[4,384]"];
	"p30.31" [label="p30.31 \n f32[384]"];
	"reshape.262" [label="reshape.262 \n f32[384]"];
	"broadcast.263" [label="broadcast.263 \n f32[4,384]"];
	"add.264" [label="add.264 \n f32[4,384]"];
	"reshape.270" [label="reshape.270 \n f32[1,4,6,64]"];
	"dot.281" [label="dot.281 \n f32[4,6,1,1]"];
	"broadcast.283" [label="broadcast.283 \n f32[4,6,1,1]"];
	"select.286" [label="select.286 \n f32[4,6,1,1]"];
	"reduce.294" [label="reduce.294 \n f32[4,6,1]"];
	"maximum.300" [label="maximum.300 \n f32[4,6,1]"];
	"broadcast.301" [label="broadcast.301 \n f32[4,6,1,128]"];
	"subtract.302" [label="subtract.302 \n f32[4,6,1,128]"];
	"exponential.303" [label="exponential.303 \n f32[4,6,1,128]"];
	"convert.311" [label="convert.311 \n f32[4,6,1,128]"];
	"p8.9" [label="p8.9 \n f32[128,4,6,64]"];
	"dot.324" [label="dot.324 \n f32[4,6,1,64]"];
	"broadcast.312" [label="broadcast.312 \n f32[4,6,1,1]"];
	"subtract.313" [label="subtract.313 \n f32[4,6,1,1]"];
	"exponential.314" [label="exponential.314 \n f32[4,6,1,1]"];
	"convert.322" [label="convert.322 \n f32[4,6,1,1]"];
	"p31.32" [label="p31.32 \n f32[768,384]"];
	"dot.265" [label="dot.265 \n f32[4,384]"];
	"p32.33" [label="p32.33 \n f32[384]"];
	"reshape.266" [label="reshape.266 \n f32[384]"];
	"broadcast.267" [label="broadcast.267 \n f32[4,384]"];
	"add.268" [label="add.268 \n f32[4,384]"];
	"reshape.271" [label="reshape.271 \n f32[1,4,6,64]"];
	"dot.325" [label="dot.325 \n f32[4,6,1,64]"];
	"add.326" [label="add.326 \n f32[4,6,1,64]"];
	"reduce.305" [label="reduce.305 \n f32[4,6,1]"];
	"reduce.315" [label="reduce.315 \n f32[4,6,1]"];
	"add.321" [label="add.321 \n f32[4,6,1]"];
	"convert.323" [label="convert.323 \n f32[4,6,1]"];
	"broadcast.327" [label="broadcast.327 \n f32[4,6,1,64]"];
	"divide.328" [label="divide.328 \n f32[4,6,1,64]"];
	"transpose.329" [label="transpose.329 \n f32[1,4,6,64]"];
	"reshape.340" [label="reshape.340 \n f32[4,384]"];
	"p33.34" [label="p33.34 \n f32[768,384]"];
	"dot.341" [label="dot.341 \n f32[4,768]"];
	"p34.35" [label="p34.35 \n f32[768]"];
	"reshape.342" [label="reshape.342 \n f32[768]"];
	"broadcast.343" [label="broadcast.343 \n f32[4,768]"];
	"add.344" [label="add.344 \n f32[4,768]"];
	"transpose.345" [label="transpose.345 \n f32[768,4]"];
	"reshape.346" [label="reshape.346 \n f32[768,1,4]"];
	"add.353" [label="add.353 \n f32[768,1,4]"];
	"reshape.354" [label="reshape.354 \n f32[768,4]"];
	"convert.355" [label="convert.355 \n f32[768,4]"];
	"broadcast.357" [label="broadcast.357 \n f32[4]"];
	"broadcast.359" [label="broadcast.359 \n f32[4]"];
	"p35.36" [label="p35.36 \n f32[768]"];
	"broadcast.362" [label="broadcast.362 \n f32[768,4]"];
	"multiply.363" [label="multiply.363 \n f32[768,4]"];
	"p36.37" [label="p36.37 \n f32[768]"];
	"broadcast.364" [label="broadcast.364 \n f32[768,4]"];
	"add.365" [label="add.365 \n f32[768,4]"];
	"convert.366" [label="convert.366 \n f32[768,4]"];
	"reshape.367" [label="reshape.367 \n f32[768,1,4]"];
	"reshape.368" [label="reshape.368 \n f32[768,4]"];
	"p37.38" [label="p37.38 \n f32[768,1536]"];
	"dot.369" [label="dot.369 \n f32[4,1536]"];
	"p38.39" [label="p38.39 \n f32[1536]"];
	"reshape.370" [label="reshape.370 \n f32[1536]"];
	"broadcast.371" [label="broadcast.371 \n f32[4,1536]"];
	"add.372" [label="add.372 \n f32[4,1536]"];
	"p39.40" [label="p39.40 \n f32[768,1536]"];
	"dot.374" [label="dot.374 \n f32[4,768]"];
	"p40.41" [label="p40.41 \n f32[768]"];
	"reshape.375" [label="reshape.375 \n f32[768]"];
	"broadcast.376" [label="broadcast.376 \n f32[4,768]"];
	"add.377" [label="add.377 \n f32[4,768]"];
	"transpose.378" [label="transpose.378 \n f32[768,4]"];
	"reshape.379" [label="reshape.379 \n f32[768,1,4]"];
	"add.386" [label="add.386 \n f32[768,1,4]"];
	"reshape.387" [label="reshape.387 \n f32[768,4]"];
	"convert.388" [label="convert.388 \n f32[768,4]"];
	"broadcast.390" [label="broadcast.390 \n f32[4]"];
	"broadcast.392" [label="broadcast.392 \n f32[4]"];
	"p41.42" [label="p41.42 \n f32[768]"];
	"broadcast.395" [label="broadcast.395 \n f32[768,4]"];
	"multiply.396" [label="multiply.396 \n f32[768,4]"];
	"p42.43" [label="p42.43 \n f32[768]"];
	"broadcast.397" [label="broadcast.397 \n f32[768,4]"];
	"add.398" [label="add.398 \n f32[768,4]"];
	"convert.399" [label="convert.399 \n f32[768,4]"];
	"reshape.400" [label="reshape.400 \n f32[768,1,4]"];
	"reshape.401" [label="reshape.401 \n f32[768,4]"];
	"dot.402" [label="dot.402 \n f32[25129,4]"];
	"reshape.403" [label="reshape.403 \n f32[25129,1,4]"];
	"scatter.167" [label="scatter.167 \n f32[128,4,6,64]"];
	"scatter.172" [label="scatter.172 \n f32[128,4,6,64]"];
	"scatter.330" [label="scatter.330 \n f32[128,4,6,64]"];
	"scatter.335" [label="scatter.335 \n f32[128,4,6,64]"];
	"tuple.404" [label="tuple.404 \n (f32[25129,1,4]"]; 
 	"p43.44" -> "custom-call.47";
	"iota.48" -> "broadcast.49";
	"p1.2" -> "broadcast.50";
	"broadcast.49" -> "compare.51";
	"broadcast.50" -> "compare.51";
	"compare.51" -> "broadcast.55";
	"iota.48" -> "broadcast.52";
	"p2.3" -> "broadcast.53";
	"broadcast.52" -> "compare.54";
	"broadcast.53" -> "compare.54";
	"compare.54" -> "broadcast.56";
	"broadcast.55" -> "and.57";
	"broadcast.56" -> "and.57";
	"and.57" -> "reshape.278";
	"reshape.278" -> "broadcast.279";
	"and.57" -> "reshape.115";
	"reshape.115" -> "broadcast.116";
	"p0.1" -> "reshape.79";
	"reshape.79" -> "convert.80";
	"constant.81" -> "broadcast.82";
	"constant.83" -> "broadcast.84";
	"convert.80" -> "batch-norm-training.85";
	"broadcast.82" -> "batch-norm-training.85";
	"broadcast.84" -> "batch-norm-training.85";
	"batch-norm-training.85" -> "get-tuple-element.86";
	"p9.10" -> "custom-call.63";
	"custom-call.63" -> "broadcast.87";
	"get-tuple-element.86" -> "multiply.88";
	"broadcast.87" -> "multiply.88";
	"p10.11" -> "custom-call.64";
	"custom-call.64" -> "broadcast.89";
	"multiply.88" -> "add.90";
	"broadcast.89" -> "add.90";
	"add.90" -> "convert.91";
	"convert.91" -> "reshape.92";
	"reshape.92" -> "reshape.93";
	"p11.12" -> "custom-call.65";
	"reshape.93" -> "dot.94";
	"custom-call.65" -> "dot.94";
	"p12.13" -> "custom-call.66";
	"custom-call.66" -> "reshape.95";
	"reshape.95" -> "broadcast.96";
	"dot.94" -> "add.97";
	"broadcast.96" -> "add.97";
	"add.97" -> "reshape.106";
	"constant.109" -> "broadcast.110";
	"reshape.106" -> "divide.111";
	"broadcast.110" -> "divide.111";
	"p5.6" -> "custom-call.61";
	"divide.111" -> "dot.112";
	"custom-call.61" -> "dot.112";
	"constant.113" -> "broadcast.114";
	"broadcast.116" -> "select.117";
	"dot.112" -> "select.117";
	"broadcast.114" -> "select.117";
	"select.117" -> "reduce.125";
	"constant.124" -> "reduce.125";
	"reduce.125.MaxFunc.130" -> "reduce.125";
	"p1.2" -> "broadcast.59";
	"p2.3" -> "broadcast.58";
	"broadcast.59" -> "compare.60";
	"broadcast.58" -> "compare.60";
	"compare.60" -> "reshape.121";
	"reshape.121" -> "broadcast.122";
	"p13.14" -> "custom-call.67";
	"reshape.93" -> "dot.98";
	"custom-call.67" -> "dot.98";
	"p14.15" -> "custom-call.68";
	"custom-call.68" -> "reshape.99";
	"reshape.99" -> "broadcast.100";
	"dot.98" -> "add.101";
	"broadcast.100" -> "add.101";
	"add.101" -> "reshape.107";
	"divide.111" -> "dot.118";
	"reshape.107" -> "dot.118";
	"constant.119" -> "broadcast.120";
	"broadcast.122" -> "select.123";
	"dot.118" -> "select.123";
	"broadcast.120" -> "select.123";
	"select.123" -> "reduce.131";
	"constant.124" -> "reduce.131";
	"reduce.131.MaxFunc.136" -> "reduce.131";
	"reduce.125" -> "maximum.137";
	"reduce.131" -> "maximum.137";
	"maximum.137" -> "broadcast.138";
	"select.117" -> "subtract.139";
	"broadcast.138" -> "subtract.139";
	"subtract.139" -> "exponential.140";
	"exponential.140" -> "convert.148";
	"p6.7" -> "custom-call.62";
	"convert.148" -> "dot.161";
	"custom-call.62" -> "dot.161";
	"maximum.137" -> "broadcast.149";
	"select.123" -> "subtract.150";
	"broadcast.149" -> "subtract.150";
	"subtract.150" -> "exponential.151";
	"exponential.151" -> "convert.159";
	"p15.16" -> "custom-call.69";
	"reshape.93" -> "dot.102";
	"custom-call.69" -> "dot.102";
	"p16.17" -> "custom-call.70";
	"custom-call.70" -> "reshape.103";
	"reshape.103" -> "broadcast.104";
	"dot.102" -> "add.105";
	"broadcast.104" -> "add.105";
	"add.105" -> "reshape.108";
	"convert.159" -> "dot.162";
	"reshape.108" -> "dot.162";
	"dot.161" -> "add.163";
	"dot.162" -> "add.163";
	"exponential.140" -> "reduce.142";
	"constant.141" -> "reduce.142";
	"reduce.142.AddFunc.147" -> "reduce.142";
	"exponential.151" -> "reduce.152";
	"constant.141" -> "reduce.152";
	"reduce.152.AddFunc.157" -> "reduce.152";
	"reduce.142" -> "add.158";
	"reduce.152" -> "add.158";
	"add.158" -> "convert.160";
	"convert.160" -> "broadcast.164";
	"add.163" -> "divide.165";
	"broadcast.164" -> "divide.165";
	"divide.165" -> "transpose.166";
	"transpose.166" -> "reshape.177";
	"p17.18" -> "custom-call.71";
	"reshape.177" -> "dot.178";
	"custom-call.71" -> "dot.178";
	"p18.19" -> "custom-call.72";
	"custom-call.72" -> "reshape.179";
	"reshape.179" -> "broadcast.180";
	"dot.178" -> "add.181";
	"broadcast.180" -> "add.181";
	"add.181" -> "transpose.182";
	"transpose.182" -> "reshape.183";
	"reshape.183" -> "all-reduce.184";
	"all-reduce.184.Reducer.189" -> "all-reduce.184";
	"all-reduce.184" -> "add.190";
	"p0.1" -> "add.190";
	"add.190" -> "reshape.191";
	"reshape.191" -> "convert.192";
	"constant.193" -> "broadcast.194";
	"constant.195" -> "broadcast.196";
	"convert.192" -> "batch-norm-training.197";
	"broadcast.194" -> "batch-norm-training.197";
	"broadcast.196" -> "batch-norm-training.197";
	"batch-norm-training.197" -> "get-tuple-element.198";
	"p19.20" -> "custom-call.73";
	"custom-call.73" -> "broadcast.199";
	"get-tuple-element.198" -> "multiply.200";
	"broadcast.199" -> "multiply.200";
	"p20.21" -> "custom-call.74";
	"custom-call.74" -> "broadcast.201";
	"multiply.200" -> "add.202";
	"broadcast.201" -> "add.202";
	"add.202" -> "convert.203";
	"convert.203" -> "reshape.204";
	"reshape.204" -> "reshape.205";
	"p21.22" -> "custom-call.75";
	"reshape.205" -> "dot.206";
	"custom-call.75" -> "dot.206";
	"p22.23" -> "custom-call.76";
	"custom-call.76" -> "reshape.207";
	"reshape.207" -> "broadcast.208";
	"dot.206" -> "add.209";
	"broadcast.208" -> "add.209";
	"add.209" -> "custom-call.210";
	"p23.24" -> "custom-call.77";
	"custom-call.210" -> "dot.211";
	"custom-call.77" -> "dot.211";
	"p24.25" -> "custom-call.78";
	"custom-call.78" -> "reshape.212";
	"reshape.212" -> "broadcast.213";
	"dot.211" -> "add.214";
	"broadcast.213" -> "add.214";
	"add.214" -> "transpose.215";
	"transpose.215" -> "reshape.216";
	"reshape.216" -> "all-reduce.217";
	"all-reduce.217.Reducer.222" -> "all-reduce.217";
	"all-reduce.217" -> "add.223";
	"add.190" -> "add.223";
	"add.223" -> "reshape.242";
	"reshape.242" -> "convert.243";
	"constant.244" -> "broadcast.245";
	"constant.246" -> "broadcast.247";
	"convert.243" -> "batch-norm-training.248";
	"broadcast.245" -> "batch-norm-training.248";
	"broadcast.247" -> "batch-norm-training.248";
	"batch-norm-training.248" -> "get-tuple-element.249";
	"p25.26" -> "custom-call.226";
	"custom-call.226" -> "broadcast.250";
	"get-tuple-element.249" -> "multiply.251";
	"broadcast.250" -> "multiply.251";
	"p26.27" -> "custom-call.227";
	"custom-call.227" -> "broadcast.252";
	"multiply.251" -> "add.253";
	"broadcast.252" -> "add.253";
	"add.253" -> "convert.254";
	"convert.254" -> "reshape.255";
	"reshape.255" -> "reshape.256";
	"p27.28" -> "custom-call.228";
	"reshape.256" -> "dot.257";
	"custom-call.228" -> "dot.257";
	"p28.29" -> "custom-call.229";
	"custom-call.229" -> "reshape.258";
	"reshape.258" -> "broadcast.259";
	"dot.257" -> "add.260";
	"broadcast.259" -> "add.260";
	"add.260" -> "reshape.269";
	"constant.272" -> "broadcast.273";
	"reshape.269" -> "divide.274";
	"broadcast.273" -> "divide.274";
	"p7.8" -> "custom-call.224";
	"divide.274" -> "dot.275";
	"custom-call.224" -> "dot.275";
	"constant.276" -> "broadcast.277";
	"broadcast.279" -> "select.280";
	"dot.275" -> "select.280";
	"broadcast.277" -> "select.280";
	"select.280" -> "reduce.288";
	"constant.287" -> "reduce.288";
	"reduce.288.MaxFunc.293" -> "reduce.288";
	"compare.60" -> "reshape.284";
	"reshape.284" -> "broadcast.285";
	"p29.30" -> "custom-call.230";
	"reshape.256" -> "dot.261";
	"custom-call.230" -> "dot.261";
	"p30.31" -> "custom-call.231";
	"custom-call.231" -> "reshape.262";
	"reshape.262" -> "broadcast.263";
	"dot.261" -> "add.264";
	"broadcast.263" -> "add.264";
	"add.264" -> "reshape.270";
	"divide.274" -> "dot.281";
	"reshape.270" -> "dot.281";
	"constant.282" -> "broadcast.283";
	"broadcast.285" -> "select.286";
	"dot.281" -> "select.286";
	"broadcast.283" -> "select.286";
	"select.286" -> "reduce.294";
	"constant.287" -> "reduce.294";
	"reduce.294.MaxFunc.299" -> "reduce.294";
	"reduce.288" -> "maximum.300";
	"reduce.294" -> "maximum.300";
	"maximum.300" -> "broadcast.301";
	"select.280" -> "subtract.302";
	"broadcast.301" -> "subtract.302";
	"subtract.302" -> "exponential.303";
	"exponential.303" -> "convert.311";
	"p8.9" -> "custom-call.225";
	"convert.311" -> "dot.324";
	"custom-call.225" -> "dot.324";
	"maximum.300" -> "broadcast.312";
	"select.286" -> "subtract.313";
	"broadcast.312" -> "subtract.313";
	"subtract.313" -> "exponential.314";
	"exponential.314" -> "convert.322";
	"p31.32" -> "custom-call.232";
	"reshape.256" -> "dot.265";
	"custom-call.232" -> "dot.265";
	"p32.33" -> "custom-call.233";
	"custom-call.233" -> "reshape.266";
	"reshape.266" -> "broadcast.267";
	"dot.265" -> "add.268";
	"broadcast.267" -> "add.268";
	"add.268" -> "reshape.271";
	"convert.322" -> "dot.325";
	"reshape.271" -> "dot.325";
	"dot.324" -> "add.326";
	"dot.325" -> "add.326";
	"exponential.303" -> "reduce.305";
	"constant.304" -> "reduce.305";
	"reduce.305.AddFunc.310" -> "reduce.305";
	"exponential.314" -> "reduce.315";
	"constant.304" -> "reduce.315";
	"reduce.315.AddFunc.320" -> "reduce.315";
	"reduce.305" -> "add.321";
	"reduce.315" -> "add.321";
	"add.321" -> "convert.323";
	"convert.323" -> "broadcast.327";
	"add.326" -> "divide.328";
	"broadcast.327" -> "divide.328";
	"divide.328" -> "transpose.329";
	"transpose.329" -> "reshape.340";
	"p33.34" -> "custom-call.234";
	"reshape.340" -> "dot.341";
	"custom-call.234" -> "dot.341";
	"p34.35" -> "custom-call.235";
	"custom-call.235" -> "reshape.342";
	"reshape.342" -> "broadcast.343";
	"dot.341" -> "add.344";
	"broadcast.343" -> "add.344";
	"add.344" -> "transpose.345";
	"transpose.345" -> "reshape.346";
	"reshape.346" -> "all-reduce.347";
	"all-reduce.347.Reducer.352" -> "all-reduce.347";
	"all-reduce.347" -> "add.353";
	"add.223" -> "add.353";
	"add.353" -> "reshape.354";
	"reshape.354" -> "convert.355";
	"constant.356" -> "broadcast.357";
	"constant.358" -> "broadcast.359";
	"convert.355" -> "batch-norm-training.360";
	"broadcast.357" -> "batch-norm-training.360";
	"broadcast.359" -> "batch-norm-training.360";
	"batch-norm-training.360" -> "get-tuple-element.361";
	"p35.36" -> "custom-call.236";
	"custom-call.236" -> "broadcast.362";
	"get-tuple-element.361" -> "multiply.363";
	"broadcast.362" -> "multiply.363";
	"p36.37" -> "custom-call.237";
	"custom-call.237" -> "broadcast.364";
	"multiply.363" -> "add.365";
	"broadcast.364" -> "add.365";
	"add.365" -> "convert.366";
	"convert.366" -> "reshape.367";
	"reshape.367" -> "reshape.368";
	"p37.38" -> "custom-call.238";
	"reshape.368" -> "dot.369";
	"custom-call.238" -> "dot.369";
	"p38.39" -> "custom-call.239";
	"custom-call.239" -> "reshape.370";
	"reshape.370" -> "broadcast.371";
	"dot.369" -> "add.372";
	"broadcast.371" -> "add.372";
	"add.372" -> "custom-call.373";
	"p39.40" -> "custom-call.240";
	"custom-call.373" -> "dot.374";
	"custom-call.240" -> "dot.374";
	"p40.41" -> "custom-call.241";
	"custom-call.241" -> "reshape.375";
	"reshape.375" -> "broadcast.376";
	"dot.374" -> "add.377";
	"broadcast.376" -> "add.377";
	"add.377" -> "transpose.378";
	"transpose.378" -> "reshape.379";
	"reshape.379" -> "all-reduce.380";
	"all-reduce.380.Reducer.385" -> "all-reduce.380";
	"all-reduce.380" -> "add.386";
	"add.353" -> "add.386";
	"add.386" -> "reshape.387";
	"reshape.387" -> "convert.388";
	"constant.389" -> "broadcast.390";
	"constant.391" -> "broadcast.392";
	"convert.388" -> "batch-norm-training.393";
	"broadcast.390" -> "batch-norm-training.393";
	"broadcast.392" -> "batch-norm-training.393";
	"batch-norm-training.393" -> "get-tuple-element.394";
	"p41.42" -> "custom-call.45";
	"custom-call.45" -> "broadcast.395";
	"get-tuple-element.394" -> "multiply.396";
	"broadcast.395" -> "multiply.396";
	"p42.43" -> "custom-call.46";
	"custom-call.46" -> "broadcast.397";
	"multiply.396" -> "add.398";
	"broadcast.397" -> "add.398";
	"add.398" -> "convert.399";
	"convert.399" -> "reshape.400";
	"reshape.400" -> "reshape.401";
	"custom-call.47" -> "dot.402";
	"reshape.401" -> "dot.402";
	"dot.402" -> "reshape.403";
	"custom-call.61" -> "scatter.167";
	"p1.2" -> "scatter.167";
	"reshape.107" -> "scatter.167";
	"scatter.167.AssignFunc.171" -> "scatter.167";
	"custom-call.62" -> "scatter.172";
	"p1.2" -> "scatter.172";
	"reshape.108" -> "scatter.172";
	"scatter.172.AssignFunc.176" -> "scatter.172";
	"custom-call.224" -> "scatter.330";
	"p1.2" -> "scatter.330";
	"reshape.270" -> "scatter.330";
	"scatter.330.AssignFunc.334" -> "scatter.330";
	"custom-call.225" -> "scatter.335";
	"p1.2" -> "scatter.335";
	"reshape.271" -> "scatter.335";
	"scatter.335.AssignFunc.339" -> "scatter.335";
	"reshape.403" -> "tuple.404";
	"scatter.167" -> "tuple.404";
	"scatter.172" -> "tuple.404";
	"scatter.330" -> "tuple.404";
	"scatter.335" -> "tuple.404";
	"reshape.256" -> "tuple.404";
	"add.260" -> "tuple.404";
	"add.264" -> "tuple.404";
	"add.268" -> "tuple.404";
	"reshape.270" -> "tuple.404";
	"reshape.271" -> "tuple.404";
	"reshape.269" -> "tuple.404";
	"constant.272" -> "tuple.404";
	"broadcast.273" -> "tuple.404";
	"reshape.270" -> "tuple.404";
	"dot.281" -> "tuple.404";
	"constant.282" -> "tuple.404";
	"broadcast.283" -> "tuple.404";
	"broadcast.279" -> "tuple.404";
	"select.286" -> "tuple.404";
	"broadcast.285" -> "tuple.404";
	"select.280" -> "tuple.404";
	"select.286" -> "tuple.404";
	"constant.287" -> "tuple.404";
	"reduce.288" -> "tuple.404";
	"reduce.294" -> "tuple.404";
	"maximum.300" -> "tuple.404";
	"broadcast.301" -> "tuple.404";
	"subtract.302" -> "tuple.404";
	"exponential.303" -> "tuple.404";
	"constant.304" -> "tuple.404";
	"reduce.305" -> "tuple.404";
	"convert.311" -> "tuple.404";
	"broadcast.312" -> "tuple.404";
	"subtract.313" -> "tuple.404";
	"exponential.314" -> "tuple.404";
	"reduce.315" -> "tuple.404";
	"add.321" -> "tuple.404";
	"convert.322" -> "tuple.404";
	"convert.323" -> "tuple.404";
	"custom-call.225" -> "tuple.404";
	"reshape.271" -> "tuple.404";
	"dot.324" -> "tuple.404";
	"dot.325" -> "tuple.404";
	"add.326" -> "tuple.404";
	"broadcast.327" -> "tuple.404";
	"divide.328" -> "tuple.404";
	"transpose.329" -> "tuple.404";
	"scatter.335" -> "tuple.404";
	"reshape.340" -> "tuple.404";
	"add.344" -> "tuple.404";
	"reshape.346" -> "tuple.404";
	"reshape.346" -> "tuple.404";
	"all-reduce.347" -> "tuple.404";
 }