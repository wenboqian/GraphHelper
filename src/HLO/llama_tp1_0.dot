digraph HloModule { 
	"p4.5" [label="p4.5 \n f32[64,4,4,1024]"];
	"p5.6" [label="p5.6 \n f32[64,4,4,1024]"];
	"p16.17" [label="p16.17 \n f32[4096,32000]"];
	"iota.27" [label="iota.27 \n s32[64]"];
	"broadcast.28" [label="broadcast.28 \n s32[64,64]"];
	"p1.2" [label="p1.2 \n s32[64]"];
	"broadcast.29" [label="broadcast.29 \n s32[64,64]"];
	"compare.30" [label="compare.30 \n pred[64,64]"];
	"broadcast.34" [label="broadcast.34 \n pred[4,64,64]"];
	"broadcast.31" [label="broadcast.31 \n s32[4,64]"];
	"p2.3" [label="p2.3 \n s32[4]"];
	"broadcast.32" [label="broadcast.32 \n s32[4,64]"];
	"compare.33" [label="compare.33 \n pred[4,64]"];
	"broadcast.35" [label="broadcast.35 \n pred[4,64,64]"];
	"and.36" [label="and.36 \n pred[4,64,64]"];
	"reshape.89" [label="reshape.89 \n pred[4,64,64]"];
	"broadcast.90" [label="broadcast.90 \n pred[4,4,64,64]"];
	"convert.20" [label="convert.20 \n f32[64]"];
	"reshape.21" [label="reshape.21 \n f32[64,1]"];
	"constant.22" [label="constant.22 \n f32[512]"];
	"reshape.23" [label="reshape.23 \n f32[1,512]"];
	"dot.24" [label="dot.24 \n f32[64,512]"];
	"cosine.26" [label="cosine.26 \n f32[64,512]"];
	"reshape.59" [label="reshape.59 \n f32[64,512]"];
	"broadcast.60" [label="broadcast.60 \n f32[64,4,4,512]"];
	"p0.1" [label="p0.1 \n f32[4096,64,4]"];
	"p6.7" [label="p6.7 \n f32[4096]"];
	"reshape.50" [label="reshape.50 \n f32[4096,256]"];
	"p7.8" [label="p7.8 \n f32[4096,4096]"];
	"dot.51" [label="dot.51 \n f32[256,4096]"];
	"reshape.54" [label="reshape.54 \n f32[64,4,4,1024]"];
	"slice.61" [label="slice.61 \n f32[64,4,4,512]"];
	"multiply.63" [label="multiply.63 \n f32[64,4,4,512]"];
	"sine.25" [label="sine.25 \n f32[64,512]"];
	"reshape.57" [label="reshape.57 \n f32[64,512]"];
	"broadcast.58" [label="broadcast.58 \n f32[64,4,4,512]"];
	"slice.62" [label="slice.62 \n f32[64,4,4,512]"];
	"multiply.64" [label="multiply.64 \n f32[64,4,4,512]"];
	"subtract.65" [label="subtract.65 \n f32[64,4,4,512]"];
	"multiply.66" [label="multiply.66 \n f32[64,4,4,512]"];
	"multiply.67" [label="multiply.67 \n f32[64,4,4,512]"];
	"add.68" [label="add.68 \n f32[64,4,4,512]"];
	"concatenate.69" [label="concatenate.69 \n f32[64,4,4,1024]"];
	"broadcast.84" [label="broadcast.84 \n f32[64,4,4,1024]"];
	"divide.85" [label="divide.85 \n f32[64,4,4,1024]"];
	"reshape.72" [label="reshape.72 \n f32[64,512]"];
	"broadcast.73" [label="broadcast.73 \n f32[64,4,4,512]"];
	"p8.9" [label="p8.9 \n f32[4096,4096]"];
	"dot.52" [label="dot.52 \n f32[256,4096]"];
	"reshape.55" [label="reshape.55 \n f32[64,4,4,1024]"];
	"slice.74" [label="slice.74 \n f32[64,4,4,512]"];
	"multiply.76" [label="multiply.76 \n f32[64,4,4,512]"];
	"reshape.70" [label="reshape.70 \n f32[64,512]"];
	"broadcast.71" [label="broadcast.71 \n f32[64,4,4,512]"];
	"slice.75" [label="slice.75 \n f32[64,4,4,512]"];
	"multiply.77" [label="multiply.77 \n f32[64,4,4,512]"];
	"subtract.78" [label="subtract.78 \n f32[64,4,4,512]"];
	"multiply.79" [label="multiply.79 \n f32[64,4,4,512]"];
	"multiply.80" [label="multiply.80 \n f32[64,4,4,512]"];
	"add.81" [label="add.81 \n f32[64,4,4,512]"];
	"concatenate.82" [label="concatenate.82 \n f32[64,4,4,1024]"];
	"dot.86" [label="dot.86 \n f32[4,4,64,64]"];
	"broadcast.88" [label="broadcast.88 \n f32[4,4,64,64]"];
	"select.91" [label="select.91 \n f32[4,4,64,64]"];
	"reduce.93" [label="reduce.93 \n f32[4,4,64]"];
	"reshape.99" [label="reshape.99 \n f32[4,4,64]"];
	"broadcast.100" [label="broadcast.100 \n f32[4,4,64,64]"];
	"subtract.101" [label="subtract.101 \n f32[4,4,64,64]"];
	"exponential.102" [label="exponential.102 \n f32[4,4,64,64]"];
	"reduce.104" [label="reduce.104 \n f32[4,4,64]"];
	"reshape.110" [label="reshape.110 \n f32[4,4,64]"];
	"broadcast.111" [label="broadcast.111 \n f32[4,4,64,64]"];
	"divide.112" [label="divide.112 \n f32[4,4,64,64]"];
	"p9.10" [label="p9.10 \n f32[4096,4096]"];
	"dot.53" [label="dot.53 \n f32[256,4096]"];
	"reshape.56" [label="reshape.56 \n f32[64,4,4,1024]"];
	"dot.113" [label="dot.113 \n f32[4,4,64,1024]"];
	"transpose.114" [label="transpose.114 \n f32[64,4,4,1024]"];
	"reshape.115" [label="reshape.115 \n f32[256,4096]"];
	"p10.11" [label="p10.11 \n f32[4096,4096]"];
	"dot.116" [label="dot.116 \n f32[256,4096]"];
	"transpose.117" [label="transpose.117 \n f32[4096,256]"];
	"reshape.118" [label="reshape.118 \n f32[4096,64,4]"];
	"add.119" [label="add.119 \n f32[4096,64,4]"];
	"p11.12" [label="p11.12 \n f32[4096]"];
	"reshape.122" [label="reshape.122 \n f32[4096,256]"];
	"p12.13" [label="p12.13 \n f32[4096,11008]"];
	"dot.123" [label="dot.123 \n f32[256,11008]"];
	"logistic.124" [label="logistic.124 \n f32[256,11008]"];
	"multiply.125" [label="multiply.125 \n f32[256,11008]"];
	"p13.14" [label="p13.14 \n f32[4096,11008]"];
	"dot.126" [label="dot.126 \n f32[256,11008]"];
	"multiply.127" [label="multiply.127 \n f32[256,11008]"];
	"p14.15" [label="p14.15 \n f32[4096,11008]"];
	"dot.128" [label="dot.128 \n f32[256,4096]"];
	"transpose.129" [label="transpose.129 \n f32[4096,256]"];
	"reshape.130" [label="reshape.130 \n f32[4096,64,4]"];
	"add.131" [label="add.131 \n f32[4096,64,4]"];
	"transpose.132" [label="transpose.132 \n f32[64,4096,4]"];
	"p3.4" [label="p3.4 \n s32[1]"];
	"gather.133" [label="gather.133 \n f32[1,4096,4]"];
	"transpose.134" [label="transpose.134 \n f32[4096,1,4]"];
	"p15.16" [label="p15.16 \n f32[4096]"];
	"reshape.137" [label="reshape.137 \n f32[4096,4]"];
	"dot.138" [label="dot.138 \n f32[32000,4]"];
	"reshape.139" [label="reshape.139 \n f32[32000,1,4]"];
	"tuple.140" [label="tuple.140 \n (f32[32000,1,4]"]; 
 	"p4.5" -> "custom-call.37";
	"p5.6" -> "custom-call.38";
	"p16.17" -> "custom-call.19";
	"iota.27" -> "broadcast.28";
	"p1.2" -> "broadcast.29";
	"broadcast.28" -> "compare.30";
	"broadcast.29" -> "compare.30";
	"compare.30" -> "broadcast.34";
	"iota.27" -> "broadcast.31";
	"p2.3" -> "broadcast.32";
	"broadcast.31" -> "compare.33";
	"broadcast.32" -> "compare.33";
	"compare.33" -> "broadcast.35";
	"broadcast.34" -> "and.36";
	"broadcast.35" -> "and.36";
	"and.36" -> "reshape.89";
	"reshape.89" -> "broadcast.90";
	"p1.2" -> "convert.20";
	"convert.20" -> "reshape.21";
	"constant.22" -> "reshape.23";
	"reshape.21" -> "dot.24";
	"reshape.23" -> "dot.24";
	"dot.24" -> "cosine.26";
	"cosine.26" -> "reshape.59";
	"reshape.59" -> "broadcast.60";
	"p6.7" -> "custom-call.39";
	"p0.1" -> "custom-call.49";
	"custom-call.39" -> "custom-call.49";
	"constant.48" -> "custom-call.49";
	"custom-call.49" -> "reshape.50";
	"p7.8" -> "custom-call.40";
	"reshape.50" -> "dot.51";
	"custom-call.40" -> "dot.51";
	"dot.51" -> "reshape.54";
	"reshape.54" -> "slice.61";
	"broadcast.60" -> "multiply.63";
	"slice.61" -> "multiply.63";
	"dot.24" -> "sine.25";
	"sine.25" -> "reshape.57";
	"reshape.57" -> "broadcast.58";
	"reshape.54" -> "slice.62";
	"broadcast.58" -> "multiply.64";
	"slice.62" -> "multiply.64";
	"multiply.63" -> "subtract.65";
	"multiply.64" -> "subtract.65";
	"broadcast.60" -> "multiply.66";
	"slice.62" -> "multiply.66";
	"broadcast.58" -> "multiply.67";
	"slice.61" -> "multiply.67";
	"multiply.66" -> "add.68";
	"multiply.67" -> "add.68";
	"subtract.65" -> "concatenate.69";
	"add.68" -> "concatenate.69";
	"constant.83" -> "broadcast.84";
	"concatenate.69" -> "divide.85";
	"broadcast.84" -> "divide.85";
	"cosine.26" -> "reshape.72";
	"reshape.72" -> "broadcast.73";
	"p8.9" -> "custom-call.41";
	"reshape.50" -> "dot.52";
	"custom-call.41" -> "dot.52";
	"dot.52" -> "reshape.55";
	"reshape.55" -> "slice.74";
	"broadcast.73" -> "multiply.76";
	"slice.74" -> "multiply.76";
	"sine.25" -> "reshape.70";
	"reshape.70" -> "broadcast.71";
	"reshape.55" -> "slice.75";
	"broadcast.71" -> "multiply.77";
	"slice.75" -> "multiply.77";
	"multiply.76" -> "subtract.78";
	"multiply.77" -> "subtract.78";
	"broadcast.73" -> "multiply.79";
	"slice.75" -> "multiply.79";
	"broadcast.71" -> "multiply.80";
	"slice.74" -> "multiply.80";
	"multiply.79" -> "add.81";
	"multiply.80" -> "add.81";
	"subtract.78" -> "concatenate.82";
	"add.81" -> "concatenate.82";
	"divide.85" -> "dot.86";
	"concatenate.82" -> "dot.86";
	"constant.87" -> "broadcast.88";
	"broadcast.90" -> "select.91";
	"dot.86" -> "select.91";
	"broadcast.88" -> "select.91";
	"select.91" -> "reduce.93";
	"constant.92" -> "reduce.93";
	"reduce.93.Reducer.98" -> "reduce.93";
	"reduce.93" -> "reshape.99";
	"reshape.99" -> "broadcast.100";
	"select.91" -> "subtract.101";
	"broadcast.100" -> "subtract.101";
	"subtract.101" -> "exponential.102";
	"exponential.102" -> "reduce.104";
	"constant.103" -> "reduce.104";
	"reduce.104.Reducer.109" -> "reduce.104";
	"reduce.104" -> "reshape.110";
	"reshape.110" -> "broadcast.111";
	"exponential.102" -> "divide.112";
	"broadcast.111" -> "divide.112";
	"p9.10" -> "custom-call.42";
	"reshape.50" -> "dot.53";
	"custom-call.42" -> "dot.53";
	"dot.53" -> "reshape.56";
	"divide.112" -> "dot.113";
	"reshape.56" -> "dot.113";
	"dot.113" -> "transpose.114";
	"transpose.114" -> "reshape.115";
	"p10.11" -> "custom-call.43";
	"reshape.115" -> "dot.116";
	"custom-call.43" -> "dot.116";
	"dot.116" -> "transpose.117";
	"transpose.117" -> "reshape.118";
	"reshape.118" -> "add.119";
	"p0.1" -> "add.119";
	"p11.12" -> "custom-call.44";
	"add.119" -> "custom-call.121";
	"custom-call.44" -> "custom-call.121";
	"constant.120" -> "custom-call.121";
	"custom-call.121" -> "reshape.122";
	"p12.13" -> "custom-call.45";
	"reshape.122" -> "dot.123";
	"custom-call.45" -> "dot.123";
	"dot.123" -> "logistic.124";
	"dot.123" -> "multiply.125";
	"logistic.124" -> "multiply.125";
	"p13.14" -> "custom-call.46";
	"reshape.122" -> "dot.126";
	"custom-call.46" -> "dot.126";
	"multiply.125" -> "multiply.127";
	"dot.126" -> "multiply.127";
	"p14.15" -> "custom-call.47";
	"multiply.127" -> "dot.128";
	"custom-call.47" -> "dot.128";
	"dot.128" -> "transpose.129";
	"transpose.129" -> "reshape.130";
	"reshape.130" -> "add.131";
	"add.119" -> "add.131";
	"add.131" -> "transpose.132";
	"transpose.132" -> "gather.133";
	"p3.4" -> "gather.133";
	"gather.133" -> "transpose.134";
	"p15.16" -> "custom-call.18";
	"transpose.134" -> "custom-call.136";
	"custom-call.18" -> "custom-call.136";
	"constant.135" -> "custom-call.136";
	"custom-call.136" -> "reshape.137";
	"custom-call.19" -> "dot.138";
	"reshape.137" -> "dot.138";
	"dot.138" -> "reshape.139";
	"reshape.139" -> "tuple.140";
	"concatenate.82" -> "tuple.140";
	"reshape.56" -> "tuple.140";
 }