digraph HloModule {
	"constant.68" [label="constant.68 \n f32[] constant(0), metadata="];
	"broadcast.72" [label="broadcast.72 \n f32[1,3]"];
	"constant.57" [label="constant.57 \n f32[] constant(0), metadata="];
	"broadcast.61" [label="broadcast.61 \n f32[1,3]"];
	"constant.21" [label="constant.21 \n s64[] constant(214013), metadata="];
	"p4.20" [label="p4.20 \n s64[] parameter(4), frontend_attributes="];
	"multiply.22" [label="multiply.22 \n s64[] multiply(s64[] %constant.21, s64[] %p4.20), metadata="];
	"constant.23" [label="constant.23 \n s64[] constant(2531011), metadata="];
	"add.24" [label="add.24 \n s64[] add(s64[] %multiply.22, s64[] %constant.23), metadata="];
	"convert.27" [label="convert.27 \n u64[] convert(s64[] %add.24), metadata="];
	"reshape.29" [label="reshape.29 \n u64[1]"];
	"constant.1" [label="constant.1 \n u64[1]"];
	"concatenate.31" [label="concatenate.31 \n u64[2]"];
	"constant.2" [label="constant.2 \n u32[1]"];
	"convert.38" [label="convert.38 \n f32[1]"];
	"constant.3" [label="constant.3 \n f32[1]"];
	"multiply.44" [label="multiply.44 \n f32[1]"];
	"p3.19" [label="p3.19 \n f32[] parameter(3), frontend_attributes="];
	"slice.79" [label="slice.79 \n f32[1,3]"];
	"p2.10" [label="p2.10 \n f32[1,3]"];
	"multiply.1" [label="multiply.1 \n f32[1,3]"];
	"reshape.13" [label="reshape.13 \n f32[1,1]"];
	"p1.2" [label="p1.2 \n f32[1]"];
	"reshape.14" [label="reshape.14 \n f32[1,1]"];
	"add.83" [label="add.83 \n f32[1,1]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"reshape.15" [label="reshape.15 \n f32[1,1]"];
	"multiply.85" [label="multiply.85 \n f32[1,1]"];
	"tuple.86" [label="tuple.86 \n (f32[1,1]"]; 
 	"constant.68" -> "broadcast.72";
	"constant.57" -> "broadcast.61";
	"constant.21" -> "multiply.22";
	"p4.20" -> "multiply.22";
	"multiply.22" -> "add.24";
	"constant.23" -> "add.24";
	"add.24" -> "convert.27";
	"convert.27" -> "reshape.29";
	"reshape.29" -> "concatenate.31";
	"constant.1" -> "concatenate.31";
	"concatenate.31" -> "rng-bit-generator.32";
	"rng-bit-generator.32" -> "get-tuple-element.33";
	"get-tuple-element.33" -> "shift-right-logical.37";
	"constant.2" -> "shift-right-logical.37";
	"shift-right-logical.37" -> "convert.38";
	"convert.38" -> "multiply.44";
	"constant.3" -> "multiply.44";
	"multiply.44" -> "all-reduce.54";
	"p3.19" -> "all-reduce.54";
	"AddComputation.50" -> "all-reduce.54";
	"all-reduce.54" -> "get-tuple-element.64";
	"broadcast.61" -> "all-gather.65";
	"get-tuple-element.64" -> "all-gather.65";
	"all-gather.65" -> "get-tuple-element.75";
	"broadcast.72" -> "all-gather.76";
	"get-tuple-element.75" -> "all-gather.76";
	"all-gather.76" -> "get-tuple-element.77";
	"get-tuple-element.77" -> "slice.79";
	"p2.10" -> "custom-call.2";
	"slice.79" -> "multiply.1";
	"custom-call.2" -> "multiply.1";
	"multiply.1" -> "reduce";
	"constant" -> "reduce";
	"scalar_add_computation" -> "reduce";
	"reduce" -> "reshape.13";
	"p1.2" -> "custom-call.3";
	"custom-call.3" -> "reshape.14";
	"reshape.13" -> "add.83";
	"reshape.14" -> "add.83";
	"p0.1" -> "reshape.15";
	"add.83" -> "multiply.85";
	"reshape.15" -> "multiply.85";
	"multiply.85" -> "tuple.86";
}