digraph HloModule { 
	"p3.4" [label="p3.4 \n s32[1]"];
	"p16.17" [label="p16.17 \n f32[4096,32000]"];
	"iota.27" [label="iota.27 \n s32[128]"];
	"broadcast.28" [label="broadcast.28 \n s32[1,128]"];
	"p1.2" [label="p1.2 \n s32[1]"];
	"broadcast.29" [label="broadcast.29 \n s32[1,128]"];
	"compare.30" [label="compare.30 \n pred[1,128]"];
	"broadcast.34" [label="broadcast.34 \n pred[4,1,128]"];
	"broadcast.31" [label="broadcast.31 \n s32[4,128]"];
	"p2.3" [label="p2.3 \n s32[4]"];
	"broadcast.32" [label="broadcast.32 \n s32[4,128]"];
	"compare.33" [label="compare.33 \n pred[4,128]"];
	"broadcast.35" [label="broadcast.35 \n pred[4,1,128]"];
	"and.36" [label="and.36 \n pred[4,1,128]"];
	"reshape.93" [label="reshape.93 \n pred[4,128]"];
	"broadcast.94" [label="broadcast.94 \n pred[4,4,1,128]"];
	"convert.20" [label="convert.20 \n f32[1]"];
	"reshape.21" [label="reshape.21 \n f32[1,1]"];
	"constant.22" [label="constant.22 \n f32[512]"];
	"reshape.23" [label="reshape.23 \n f32[1,512]"];
	"dot.24" [label="dot.24 \n f32[1,512]"];
	"cosine.26" [label="cosine.26 \n f32[1,512]"];
	"reshape.63" [label="reshape.63 \n f32[512]"];
	"broadcast.64" [label="broadcast.64 \n f32[1,4,4,512]"];
	"p0.1" [label="p0.1 \n f32[4,1,4096]"];
	"p6.7" [label="p6.7 \n f32[4096]"];
	"transpose.53" [label="transpose.53 \n f32[4096,1,4]"];
	"reshape.54" [label="reshape.54 \n f32[4096,4]"];
	"p7.8" [label="p7.8 \n f32[4096,4096]"];
	"dot.55" [label="dot.55 \n f32[4,4096]"];
	"reshape.58" [label="reshape.58 \n f32[1,4,4,1024]"];
	"slice.65" [label="slice.65 \n f32[1,4,4,512]"];
	"multiply.67" [label="multiply.67 \n f32[1,4,4,512]"];
	"sine.25" [label="sine.25 \n f32[1,512]"];
	"reshape.61" [label="reshape.61 \n f32[512]"];
	"broadcast.62" [label="broadcast.62 \n f32[1,4,4,512]"];
	"slice.66" [label="slice.66 \n f32[1,4,4,512]"];
	"multiply.68" [label="multiply.68 \n f32[1,4,4,512]"];
	"subtract.69" [label="subtract.69 \n f32[1,4,4,512]"];
	"multiply.70" [label="multiply.70 \n f32[1,4,4,512]"];
	"multiply.71" [label="multiply.71 \n f32[1,4,4,512]"];
	"add.72" [label="add.72 \n f32[1,4,4,512]"];
	"concatenate.73" [label="concatenate.73 \n f32[1,4,4,1024]"];
	"broadcast.88" [label="broadcast.88 \n f32[1,4,4,1024]"];
	"divide.89" [label="divide.89 \n f32[1,4,4,1024]"];
	"p4.5" [label="p4.5 \n f32[128,4,4,1024]"];
	"dot.90" [label="dot.90 \n f32[4,4,1,128]"];
	"broadcast.92" [label="broadcast.92 \n f32[4,4,1,128]"];
	"select.95" [label="select.95 \n f32[4,4,1,128]"];
	"reduce.103" [label="reduce.103 \n f32[4,4,1]"];
	"broadcast.38" [label="broadcast.38 \n s32[4,1]"];
	"broadcast.37" [label="broadcast.37 \n s32[4,1]"];
	"compare.39" [label="compare.39 \n pred[4,1]"];
	"reshape.99" [label="reshape.99 \n pred[4]"];
	"broadcast.100" [label="broadcast.100 \n pred[4,4,1,1]"];
	"reshape.76" [label="reshape.76 \n f32[512]"];
	"broadcast.77" [label="broadcast.77 \n f32[1,4,4,512]"];
	"p8.9" [label="p8.9 \n f32[4096,4096]"];
	"dot.56" [label="dot.56 \n f32[4,4096]"];
	"reshape.59" [label="reshape.59 \n f32[1,4,4,1024]"];
	"slice.78" [label="slice.78 \n f32[1,4,4,512]"];
	"multiply.80" [label="multiply.80 \n f32[1,4,4,512]"];
	"reshape.74" [label="reshape.74 \n f32[512]"];
	"broadcast.75" [label="broadcast.75 \n f32[1,4,4,512]"];
	"slice.79" [label="slice.79 \n f32[1,4,4,512]"];
	"multiply.81" [label="multiply.81 \n f32[1,4,4,512]"];
	"subtract.82" [label="subtract.82 \n f32[1,4,4,512]"];
	"multiply.83" [label="multiply.83 \n f32[1,4,4,512]"];
	"multiply.84" [label="multiply.84 \n f32[1,4,4,512]"];
	"add.85" [label="add.85 \n f32[1,4,4,512]"];
	"concatenate.86" [label="concatenate.86 \n f32[1,4,4,1024]"];
	"dot.96" [label="dot.96 \n f32[4,4,1,1]"];
	"broadcast.98" [label="broadcast.98 \n f32[4,4,1,1]"];
	"select.101" [label="select.101 \n f32[4,4,1,1]"];
	"reduce.110" [label="reduce.110 \n f32[4,4,1]"];
	"maximum.116" [label="maximum.116 \n f32[4,4,1]"];
	"reshape.117" [label="reshape.117 \n f32[4,4]"];
	"broadcast.118" [label="broadcast.118 \n f32[4,4,1,128]"];
	"subtract.119" [label="subtract.119 \n f32[4,4,1,128]"];
	"exponential.120" [label="exponential.120 \n f32[4,4,1,128]"];
	"p5.6" [label="p5.6 \n f32[128,4,4,1024]"];
	"dot.141" [label="dot.141 \n f32[4,4,1,1024]"];
	"reshape.128" [label="reshape.128 \n f32[4,4]"];
	"broadcast.129" [label="broadcast.129 \n f32[4,4,1,1]"];
	"subtract.130" [label="subtract.130 \n f32[4,4,1,1]"];
	"exponential.131" [label="exponential.131 \n f32[4,4,1,1]"];
	"p9.10" [label="p9.10 \n f32[4096,4096]"];
	"dot.57" [label="dot.57 \n f32[4,4096]"];
	"reshape.60" [label="reshape.60 \n f32[1,4,4,1024]"];
	"dot.142" [label="dot.142 \n f32[4,4,1,1024]"];
	"add.143" [label="add.143 \n f32[4,4,1,1024]"];
	"reduce.122" [label="reduce.122 \n f32[4,4,1]"];
	"reduce.133" [label="reduce.133 \n f32[4,4,1]"];
	"add.139" [label="add.139 \n f32[4,4,1]"];
	"convert.140" [label="convert.140 \n f32[4,4,1]"];
	"reshape.144" [label="reshape.144 \n f32[4,4]"];
	"broadcast.145" [label="broadcast.145 \n f32[4,4,1,1024]"];
	"divide.146" [label="divide.146 \n f32[4,4,1,1024]"];
	"transpose.147" [label="transpose.147 \n f32[1,4,4,1024]"];
	"reshape.158" [label="reshape.158 \n f32[4,4096]"];
	"p10.11" [label="p10.11 \n f32[4096,4096]"];
	"dot.159" [label="dot.159 \n f32[4,4096]"];
	"reshape.160" [label="reshape.160 \n f32[4,1,4096]"];
	"add.161" [label="add.161 \n f32[4,1,4096]"];
	"p11.12" [label="p11.12 \n f32[4096]"];
	"reshape.164" [label="reshape.164 \n f32[4,4096]"];
	"p12.13" [label="p12.13 \n f32[4096,11008]"];
	"dot.165" [label="dot.165 \n f32[4,11008]"];
	"logistic.166" [label="logistic.166 \n f32[4,11008]"];
	"multiply.167" [label="multiply.167 \n f32[4,11008]"];
	"p13.14" [label="p13.14 \n f32[4096,11008]"];
	"dot.168" [label="dot.168 \n f32[4,11008]"];
	"multiply.169" [label="multiply.169 \n f32[4,11008]"];
	"p14.15" [label="p14.15 \n f32[4096,11008]"];
	"dot.170" [label="dot.170 \n f32[4,4096]"];
	"reshape.171" [label="reshape.171 \n f32[4,1,4096]"];
	"add.172" [label="add.172 \n f32[4,1,4096]"];
	"p15.16" [label="p15.16 \n f32[4096]"];
	"transpose.175" [label="transpose.175 \n f32[4096,1,4]"];
	"reshape.176" [label="reshape.176 \n f32[4096,4]"];
	"dot.177" [label="dot.177 \n f32[32000,4]"];
	"reshape.178" [label="reshape.178 \n f32[32000,1,4]"];
	"scatter.148" [label="scatter.148 \n f32[128,4,4,1024]"];
	"scatter.153" [label="scatter.153 \n f32[128,4,4,1024]"];
	"tuple.179" [label="tuple.179 \n (f32[32000,1,4]"]; 
 	"p16.17" -> "custom-call.19";
	"iota.27" -> "broadcast.28";
	"p1.2" -> "broadcast.29";
	"broadcast.28" -> "compare.30";
	"broadcast.29" -> "compare.30";
	"compare.30" -> "broadcast.34";
	"iota.27" -> "broadcast.31";
	"p2.3" -> "broadcast.32";
	"broadcast.31" -> "compare.33";
	"broadcast.32" -> "compare.33";
	"compare.33" -> "broadcast.35";
	"broadcast.34" -> "and.36";
	"broadcast.35" -> "and.36";
	"and.36" -> "reshape.93";
	"reshape.93" -> "broadcast.94";
	"p1.2" -> "convert.20";
	"convert.20" -> "reshape.21";
	"constant.22" -> "reshape.23";
	"reshape.21" -> "dot.24";
	"reshape.23" -> "dot.24";
	"dot.24" -> "cosine.26";
	"cosine.26" -> "reshape.63";
	"reshape.63" -> "broadcast.64";
	"p6.7" -> "custom-call.42";
	"p0.1" -> "custom-call.52";
	"custom-call.42" -> "custom-call.52";
	"constant.51" -> "custom-call.52";
	"custom-call.52" -> "transpose.53";
	"transpose.53" -> "reshape.54";
	"p7.8" -> "custom-call.43";
	"reshape.54" -> "dot.55";
	"custom-call.43" -> "dot.55";
	"dot.55" -> "reshape.58";
	"reshape.58" -> "slice.65";
	"broadcast.64" -> "multiply.67";
	"slice.65" -> "multiply.67";
	"dot.24" -> "sine.25";
	"sine.25" -> "reshape.61";
	"reshape.61" -> "broadcast.62";
	"reshape.58" -> "slice.66";
	"broadcast.62" -> "multiply.68";
	"slice.66" -> "multiply.68";
	"multiply.67" -> "subtract.69";
	"multiply.68" -> "subtract.69";
	"broadcast.64" -> "multiply.70";
	"slice.66" -> "multiply.70";
	"broadcast.62" -> "multiply.71";
	"slice.65" -> "multiply.71";
	"multiply.70" -> "add.72";
	"multiply.71" -> "add.72";
	"subtract.69" -> "concatenate.73";
	"add.72" -> "concatenate.73";
	"constant.87" -> "broadcast.88";
	"concatenate.73" -> "divide.89";
	"broadcast.88" -> "divide.89";
	"p4.5" -> "custom-call.40";
	"divide.89" -> "dot.90";
	"custom-call.40" -> "dot.90";
	"constant.91" -> "broadcast.92";
	"broadcast.94" -> "select.95";
	"dot.90" -> "select.95";
	"broadcast.92" -> "select.95";
	"select.95" -> "reduce.103";
	"constant.102" -> "reduce.103";
	"reduce.103.Reducer.108" -> "reduce.103";
	"p1.2" -> "broadcast.38";
	"p2.3" -> "broadcast.37";
	"broadcast.38" -> "compare.39";
	"broadcast.37" -> "compare.39";
	"compare.39" -> "reshape.99";
	"reshape.99" -> "broadcast.100";
	"cosine.26" -> "reshape.76";
	"reshape.76" -> "broadcast.77";
	"p8.9" -> "custom-call.44";
	"reshape.54" -> "dot.56";
	"custom-call.44" -> "dot.56";
	"dot.56" -> "reshape.59";
	"reshape.59" -> "slice.78";
	"broadcast.77" -> "multiply.80";
	"slice.78" -> "multiply.80";
	"sine.25" -> "reshape.74";
	"reshape.74" -> "broadcast.75";
	"reshape.59" -> "slice.79";
	"broadcast.75" -> "multiply.81";
	"slice.79" -> "multiply.81";
	"multiply.80" -> "subtract.82";
	"multiply.81" -> "subtract.82";
	"broadcast.77" -> "multiply.83";
	"slice.79" -> "multiply.83";
	"broadcast.75" -> "multiply.84";
	"slice.78" -> "multiply.84";
	"multiply.83" -> "add.85";
	"multiply.84" -> "add.85";
	"subtract.82" -> "concatenate.86";
	"add.85" -> "concatenate.86";
	"divide.89" -> "dot.96";
	"concatenate.86" -> "dot.96";
	"constant.97" -> "broadcast.98";
	"broadcast.100" -> "select.101";
	"dot.96" -> "select.101";
	"broadcast.98" -> "select.101";
	"select.101" -> "reduce.110";
	"constant.109" -> "reduce.110";
	"reduce.110.Reducer.115" -> "reduce.110";
	"reduce.103" -> "maximum.116";
	"reduce.110" -> "maximum.116";
	"maximum.116" -> "reshape.117";
	"reshape.117" -> "broadcast.118";
	"select.95" -> "subtract.119";
	"broadcast.118" -> "subtract.119";
	"subtract.119" -> "exponential.120";
	"p5.6" -> "custom-call.41";
	"exponential.120" -> "dot.141";
	"custom-call.41" -> "dot.141";
	"maximum.116" -> "reshape.128";
	"reshape.128" -> "broadcast.129";
	"select.101" -> "subtract.130";
	"broadcast.129" -> "subtract.130";
	"subtract.130" -> "exponential.131";
	"p9.10" -> "custom-call.45";
	"reshape.54" -> "dot.57";
	"custom-call.45" -> "dot.57";
	"dot.57" -> "reshape.60";
	"exponential.131" -> "dot.142";
	"reshape.60" -> "dot.142";
	"dot.141" -> "add.143";
	"dot.142" -> "add.143";
	"exponential.120" -> "reduce.122";
	"constant.121" -> "reduce.122";
	"reduce.122.Reducer.127" -> "reduce.122";
	"exponential.131" -> "reduce.133";
	"constant.132" -> "reduce.133";
	"reduce.133.Reducer.138" -> "reduce.133";
	"reduce.122" -> "add.139";
	"reduce.133" -> "add.139";
	"add.139" -> "convert.140";
	"convert.140" -> "reshape.144";
	"reshape.144" -> "broadcast.145";
	"add.143" -> "divide.146";
	"broadcast.145" -> "divide.146";
	"divide.146" -> "transpose.147";
	"transpose.147" -> "reshape.158";
	"p10.11" -> "custom-call.46";
	"reshape.158" -> "dot.159";
	"custom-call.46" -> "dot.159";
	"dot.159" -> "reshape.160";
	"reshape.160" -> "add.161";
	"p0.1" -> "add.161";
	"p11.12" -> "custom-call.47";
	"add.161" -> "custom-call.163";
	"custom-call.47" -> "custom-call.163";
	"constant.162" -> "custom-call.163";
	"custom-call.163" -> "reshape.164";
	"p12.13" -> "custom-call.48";
	"reshape.164" -> "dot.165";
	"custom-call.48" -> "dot.165";
	"dot.165" -> "logistic.166";
	"dot.165" -> "multiply.167";
	"logistic.166" -> "multiply.167";
	"p13.14" -> "custom-call.49";
	"reshape.164" -> "dot.168";
	"custom-call.49" -> "dot.168";
	"multiply.167" -> "multiply.169";
	"dot.168" -> "multiply.169";
	"p14.15" -> "custom-call.50";
	"multiply.169" -> "dot.170";
	"custom-call.50" -> "dot.170";
	"dot.170" -> "reshape.171";
	"reshape.171" -> "add.172";
	"add.161" -> "add.172";
	"p15.16" -> "custom-call.18";
	"add.172" -> "custom-call.174";
	"custom-call.18" -> "custom-call.174";
	"constant.173" -> "custom-call.174";
	"custom-call.174" -> "transpose.175";
	"transpose.175" -> "reshape.176";
	"custom-call.19" -> "dot.177";
	"reshape.176" -> "dot.177";
	"dot.177" -> "reshape.178";
	"custom-call.40" -> "scatter.148";
	"p1.2" -> "scatter.148";
	"concatenate.86" -> "scatter.148";
	"scatter.148.AssignFunc.152" -> "scatter.148";
	"custom-call.41" -> "scatter.153";
	"p1.2" -> "scatter.153";
	"reshape.60" -> "scatter.153";
	"scatter.153.AssignFunc.157" -> "scatter.153";
	"reshape.178" -> "tuple.179";
	"scatter.148" -> "tuple.179";
	"scatter.153" -> "tuple.179";
 }